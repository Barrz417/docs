{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation home \u00b6 Getting started Adding your first repository Sign up with your Git provider so that Codacy can have access to your Git provider organizations and members. You can then add any repository you have access to with one click. Supported languages Codacy supports over 30 programming languages out of the box, and regularly adds support for new languages and tools. Using Codacy Creating and managing an organization Codacy automatically imports your Git provider organizations and members. Changes reflect on Codacy in real time and you can manage people who joined your organization on Codacy. Setting up integrations Set up integrations to receive Codacy status checks on your current workflow. Most popular topics Configuring code patterns Adapt Codacy to your scenario by configuring the code patterns used to analyze your repositories Adding coverage reports Set up your repositories to show code coverage reports directly on Codacy. Managing people in organizations Invite your team members to join your organization on Codacy so that Codacy analyzes their commits on private repositories.","title":"Documentation home"},{"location":"#documentation-home","text":"Getting started Adding your first repository Sign up with your Git provider so that Codacy can have access to your Git provider organizations and members. You can then add any repository you have access to with one click. Supported languages Codacy supports over 30 programming languages out of the box, and regularly adds support for new languages and tools. Using Codacy Creating and managing an organization Codacy automatically imports your Git provider organizations and members. Changes reflect on Codacy in real time and you can manage people who joined your organization on Codacy. Setting up integrations Set up integrations to receive Codacy status checks on your current workflow.","title":"Documentation home"},{"location":"special-thanks/","text":"Special thanks \u00b6 We would like to thank everyone who helped us greatly. The names on these lists contributed immensely to what Codacy is today. Open source tools \u00b6 In addition to in-house built rules, we use open source tools for many of our static analysis. We want to express our gratitude to everyone who contributed to those tools. PMB Brakeman Rubocop SimpleCov Coffeelint Pylint PHPMD PHP_CodeSniffer JSHint Mocha Scalastyle CSSLint radon Clone Digger PHPCPD plato sloc LessLinter Hadolint TSLint SCSSLint Credo PSScriptAnalyzer Ameba Language support contributions \u00b6 These are the tools integrated on Codacy by our own users! Without them, we wouldn't have support for these languages. Language Who made it possible CoffeeScript Ryan Delaney Elixir Grant McLendon PowerShell Aditya Patwardhan Crystal Vitalii Elenhaupt Collaborators \u00b6 For all the people who helped us so much, we want to give a big shout out and thanks! David Pate Adriaan Moors Iulian Dragos Jakob Pupke Mathieu Demarne Ryan Shipp Eugene Burmako","title":"Special thanks"},{"location":"special-thanks/#special-thanks","text":"We would like to thank everyone who helped us greatly. The names on these lists contributed immensely to what Codacy is today.","title":"Special thanks"},{"location":"special-thanks/#open-source-tools","text":"In addition to in-house built rules, we use open source tools for many of our static analysis. We want to express our gratitude to everyone who contributed to those tools. PMB Brakeman Rubocop SimpleCov Coffeelint Pylint PHPMD PHP_CodeSniffer JSHint Mocha Scalastyle CSSLint radon Clone Digger PHPCPD plato sloc LessLinter Hadolint TSLint SCSSLint Credo PSScriptAnalyzer Ameba","title":"Open source tools"},{"location":"special-thanks/#language-support-contributions","text":"These are the tools integrated on Codacy by our own users! Without them, we wouldn't have support for these languages. Language Who made it possible CoffeeScript Ryan Delaney Elixir Grant McLendon PowerShell Aditya Patwardhan Crystal Vitalii Elenhaupt","title":"Language support contributions"},{"location":"special-thanks/#collaborators","text":"For all the people who helped us so much, we want to give a big shout out and thanks! David Pate Adriaan Moors Iulian Dragos Jakob Pupke Mathieu Demarne Ryan Shipp Eugene Burmako","title":"Collaborators"},{"location":"account/managing-your-profile/","text":"Managing your profile \u00b6 To manage your profile information such as your name and avatar, click on your avatar on the top right-hand corner and select Your account . Changing your name or username \u00b6 To change your name or username, update the fields Name or Username and click the button Update profile . Changing your avatar \u00b6 To change your avatar, sign up or log in at Gravatar using the same email address that you used to log into Codacy. The avatar that you define there will be automatically used as your avatar on Codacy. Note Organization avatars aren't editable at the moment. Deleting your account \u00b6 When you delete your account on Codacy, your profile and information about your personal repositories will be completely removed from Codacy. To delete your account, click the button Delete account and confirm that you really want to proceed. Note If you're the last organization owner of any of your organizations, you must either add someone else as an owner or delete those organizations before you can delete your account.","title":"Managing your profile"},{"location":"account/managing-your-profile/#managing-your-profile","text":"To manage your profile information such as your name and avatar, click on your avatar on the top right-hand corner and select Your account .","title":"Managing your profile"},{"location":"account/managing-your-profile/#changing-your-name-or-username","text":"To change your name or username, update the fields Name or Username and click the button Update profile .","title":"Changing your name or username"},{"location":"account/managing-your-profile/#changing-your-avatar","text":"To change your avatar, sign up or log in at Gravatar using the same email address that you used to log into Codacy. The avatar that you define there will be automatically used as your avatar on Codacy. Note Organization avatars aren't editable at the moment.","title":"Changing your avatar"},{"location":"account/managing-your-profile/#deleting-your-account","text":"When you delete your account on Codacy, your profile and information about your personal repositories will be completely removed from Codacy. To delete your account, click the button Delete account and confirm that you really want to proceed. Note If you're the last organization owner of any of your organizations, you must either add someone else as an owner or delete those organizations before you can delete your account.","title":"Deleting your account"},{"location":"account/notifications/","text":"Notifications \u00b6 You can configure which repositories you want to be emailed about and your default email address to receive the notifications. When new results are found, Codacy will email you regarding the issues found and the changes that created them. To change these settings click on your avatar, Your Account , and open Notifications . To disable all repository notifications, you can either remove all repositories or remove both commit and pull request notifications globally.","title":"Notifications"},{"location":"account/notifications/#notifications","text":"You can configure which repositories you want to be emailed about and your default email address to receive the notifications. When new results are found, Codacy will email you regarding the issues found and the changes that created them. To change these settings click on your avatar, Your Account , and open Notifications . To disable all repository notifications, you can either remove all repositories or remove both commit and pull request notifications globally.","title":"Notifications"},{"location":"chart/","text":"Installing Codacy Self-hosted \u00b6 This documentation guides you on how to install Codacy Self-hosted on Kubernetes or MicroK8s. To install Codacy you must complete these main steps: Setting up the system requirements Ensure that your infrastructure meets the hardware and system requirements to run Codacy. Installing Codacy Install Codacy on the cluster using our Helm chart that includes all the necessary components and dependencies. Configuring Codacy Configure integrations with Git providers and set up monitoring. The next sections include detailed instructions on how to complete each step of the installation process. Make sure that you complete each step before advancing to the next one. 1. Setting up the system requirements \u00b6 Before you start, you must prepare and provision the database server and Kubernetes or MicroK8s cluster that will host Codacy. Carefully review and set up the system requirements to run Codacy by following the instructions on the page below: System requirements Optionally, you can follow one of the guides below to quickly create a new Kubernetes or MicroK8s cluster that satisfies the characteristics described in the system requirements: Creating an Amazon EKS cluster Creating a MicroK8s cluster 2. Installing Codacy \u00b6 Install Codacy on an existing cluster using our Helm chart: Make sure that you have the following tools installed on your machine: kubectl within one minor version difference of your cluster Important If you are using MicroK8s you don't need to install kubectl because you will execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, check how to create an alias for kubectl . Helm version >= 3.2 Create a cluster namespace called codacy that will group all resources related to Codacy. kubectl create namespace codacy Add the Docker registry credentials provided by Codacy together with your license to a cluster Secret. This is necessary because some Codacy Docker images are currently private. Substitute <docker_username> and <docker_password> with the Docker registry username and password and run the following command: kubectl create secret docker-registry docker-credentials \\ --docker-username = <docker_username> \\ --docker-password = <docker_password> \\ --namespace codacy Download the template file values-production.yaml and use a text editor of your choice to edit the value placeholders as described in the comments. Create an address record on your DNS provider mapping the hostname you used in the previous step to the IP address of your Ingress controller. Important If you are using MicroK8s you must map the hostname to the public IP address of the machine running MicroK8s. Add Codacy's chart repository to your Helm client and install the Codacy chart using the file values-production.yaml created previously. Important If you are using MicroK8s you must download and use the file values-microk8s.yaml together with the file values-production.yaml by uncommenting the last line in the helm upgrade command below. helm repo add codacy-stable https://charts.codacy.com/stable/ helm repo update helm upgrade --install codacy codacy-stable/codacy \\ --namespace codacy \\ --version 3 .4.0 \\ --values values-production.yaml # --values values-microk8s.yaml By now all the Codacy pods should be starting in the cluster. Run the following command and wait for all the pods to have the status Running , which can take several minutes: $ kubectl get pods -n codacy NAME READY STATUS RESTARTS AGE codacy-activities-6d9db9499-stk2k 1 /1 Running 2 8m57s codacy-activitiesdb-0 1 /1 Running 0 8m57s codacy-api-f7897b965-fgn67 1 /1 Running 0 8m57s codacy-api-f7897b965-kkqsx 1 /1 Running 0 8m57s codacy-crow-7c957d45f6-b8zp2 1 /1 Running 2 8m57s codacy-crowdb-0 1 /1 Running 0 8m57s codacy-engine-549bcb69d9-cgrqf 1 /1 Running 1 8m57s codacy-engine-549bcb69d9-sh5f4 1 /1 Running 1 8m57s codacy-fluentdoperator-x5vr2 2 /2 Running 0 8m57s codacy-hotspots-api-b7b9db896-68gxx 1 /1 Running 2 8m57s codacy-hotspots-worker-76bb45b4d6-8gz45 1 /1 Running 3 8m57s codacy-hotspotsdb-0 1 /1 Running 0 8m57s codacy-listener-868b784dcf-npdfh 1 /1 Running 0 8m57s codacy-listenerdb-0 1 /1 Running 0 8m57s codacy-minio-7cfdc7b4f4-254gz 1 /1 Running 0 8m57s codacy-nfsserverprovisioner-0 1 /1 Running 0 8m57s codacy-portal-774d9fc596-rwqj5 1 /1 Running 2 8m56s codacy-rabbitmq-ha-0 1 /1 Running 0 8m57s codacy-ragnaros-69459775b5-hmj4d 1 /1 Running 3 8m57s codacy-remote-provider-service-8fb8556b-rr4ws 1 /1 Running 0 8m56s codacy-worker-manager-656dbf8d6d-n4j7c 1 /1 Running 0 8m57s 3. Configuring Codacy \u00b6 After successfully installing Codacy on your cluster, you are now ready to perform the post-install configuration steps: Use a browser to navigate to the Codacy hostname previously configured on the file values-production.yaml . Log in using your Git provider account. This automatically creates a Codacy administrator account with your credentials. Follow Codacy's onboarding process, which will guide you through the following steps: Configuring one or more of the following supported integrations: GitHub Cloud GitHub Enterprise GitLab Cloud GitLab Enterprise Bitbucket Cloud Bitbucket Server Email Creating an initial organization Inviting users to Codacy As a last step we recommend that you set up monitoring on your Codacy instance. If you run into any issues while configuring Codacy, be sure to check our troubleshooting guide for more help.","title":"Installing Codacy Self-hosted"},{"location":"chart/#installing-codacy-self-hosted","text":"This documentation guides you on how to install Codacy Self-hosted on Kubernetes or MicroK8s. To install Codacy you must complete these main steps: Setting up the system requirements Ensure that your infrastructure meets the hardware and system requirements to run Codacy. Installing Codacy Install Codacy on the cluster using our Helm chart that includes all the necessary components and dependencies. Configuring Codacy Configure integrations with Git providers and set up monitoring. The next sections include detailed instructions on how to complete each step of the installation process. Make sure that you complete each step before advancing to the next one.","title":"Installing Codacy Self-hosted"},{"location":"chart/#1-setting-up-the-system-requirements","text":"Before you start, you must prepare and provision the database server and Kubernetes or MicroK8s cluster that will host Codacy. Carefully review and set up the system requirements to run Codacy by following the instructions on the page below: System requirements Optionally, you can follow one of the guides below to quickly create a new Kubernetes or MicroK8s cluster that satisfies the characteristics described in the system requirements: Creating an Amazon EKS cluster Creating a MicroK8s cluster","title":"1. Setting up the system requirements"},{"location":"chart/#2-installing-codacy","text":"Install Codacy on an existing cluster using our Helm chart: Make sure that you have the following tools installed on your machine: kubectl within one minor version difference of your cluster Important If you are using MicroK8s you don't need to install kubectl because you will execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, check how to create an alias for kubectl . Helm version >= 3.2 Create a cluster namespace called codacy that will group all resources related to Codacy. kubectl create namespace codacy Add the Docker registry credentials provided by Codacy together with your license to a cluster Secret. This is necessary because some Codacy Docker images are currently private. Substitute <docker_username> and <docker_password> with the Docker registry username and password and run the following command: kubectl create secret docker-registry docker-credentials \\ --docker-username = <docker_username> \\ --docker-password = <docker_password> \\ --namespace codacy Download the template file values-production.yaml and use a text editor of your choice to edit the value placeholders as described in the comments. Create an address record on your DNS provider mapping the hostname you used in the previous step to the IP address of your Ingress controller. Important If you are using MicroK8s you must map the hostname to the public IP address of the machine running MicroK8s. Add Codacy's chart repository to your Helm client and install the Codacy chart using the file values-production.yaml created previously. Important If you are using MicroK8s you must download and use the file values-microk8s.yaml together with the file values-production.yaml by uncommenting the last line in the helm upgrade command below. helm repo add codacy-stable https://charts.codacy.com/stable/ helm repo update helm upgrade --install codacy codacy-stable/codacy \\ --namespace codacy \\ --version 3 .4.0 \\ --values values-production.yaml # --values values-microk8s.yaml By now all the Codacy pods should be starting in the cluster. Run the following command and wait for all the pods to have the status Running , which can take several minutes: $ kubectl get pods -n codacy NAME READY STATUS RESTARTS AGE codacy-activities-6d9db9499-stk2k 1 /1 Running 2 8m57s codacy-activitiesdb-0 1 /1 Running 0 8m57s codacy-api-f7897b965-fgn67 1 /1 Running 0 8m57s codacy-api-f7897b965-kkqsx 1 /1 Running 0 8m57s codacy-crow-7c957d45f6-b8zp2 1 /1 Running 2 8m57s codacy-crowdb-0 1 /1 Running 0 8m57s codacy-engine-549bcb69d9-cgrqf 1 /1 Running 1 8m57s codacy-engine-549bcb69d9-sh5f4 1 /1 Running 1 8m57s codacy-fluentdoperator-x5vr2 2 /2 Running 0 8m57s codacy-hotspots-api-b7b9db896-68gxx 1 /1 Running 2 8m57s codacy-hotspots-worker-76bb45b4d6-8gz45 1 /1 Running 3 8m57s codacy-hotspotsdb-0 1 /1 Running 0 8m57s codacy-listener-868b784dcf-npdfh 1 /1 Running 0 8m57s codacy-listenerdb-0 1 /1 Running 0 8m57s codacy-minio-7cfdc7b4f4-254gz 1 /1 Running 0 8m57s codacy-nfsserverprovisioner-0 1 /1 Running 0 8m57s codacy-portal-774d9fc596-rwqj5 1 /1 Running 2 8m56s codacy-rabbitmq-ha-0 1 /1 Running 0 8m57s codacy-ragnaros-69459775b5-hmj4d 1 /1 Running 3 8m57s codacy-remote-provider-service-8fb8556b-rr4ws 1 /1 Running 0 8m56s codacy-worker-manager-656dbf8d6d-n4j7c 1 /1 Running 0 8m57s","title":"2. Installing Codacy"},{"location":"chart/#3-configuring-codacy","text":"After successfully installing Codacy on your cluster, you are now ready to perform the post-install configuration steps: Use a browser to navigate to the Codacy hostname previously configured on the file values-production.yaml . Log in using your Git provider account. This automatically creates a Codacy administrator account with your credentials. Follow Codacy's onboarding process, which will guide you through the following steps: Configuring one or more of the following supported integrations: GitHub Cloud GitHub Enterprise GitLab Cloud GitLab Enterprise Bitbucket Cloud Bitbucket Server Email Creating an initial organization Inviting users to Codacy As a last step we recommend that you set up monitoring on your Codacy instance. If you run into any issues while configuring Codacy, be sure to check our troubleshooting guide for more help.","title":"3. Configuring Codacy"},{"location":"chart/requirements/","text":"System requirements \u00b6 Before installing Codacy you must ensure that you have the following infrastructure correctly provisioned and configured: Git provider Kubernetes or MicroK8s cluster PostgreSQL server The next sections describe in detail how to set up these prerequisites. Git provider \u00b6 To use Codacy Self-hosted, you must use one or more of our supported Git providers . In particular, if you're using a self-hosted Git provider, make sure that your version is supported by Codacy. Kubernetes or MicroK8s cluster setup \u00b6 The cluster running Codacy must satisfy the following requirements: The infrastructure hosting the cluster must be provisioned with the hardware and networking requirements described below The orchestration platform managing the cluster must be one of: Kubernetes version 1.14.* to 1.20.* (1.20 recommended) MicroK8s version 1.14.* to 1.20.* (1.20 recommended) The NGINX Ingress controller must be installed and correctly set up in the cluster Cluster networking requirements \u00b6 The cluster must be configured to accept and establish connections on the following ports: Service Protocol/Port Notes Inbound SSH TCP/22 MicroK8s only , to access the infrastructure remotely. Inbound HTTP TCP/80 Allow access to the Codacy website and API endpoints Inbound HTTPS TCP/443 Allow access to the Codacy website and API endpoints Outbound PostgreSQL TCP/5432 Connection to the PostgreSQL DBMS Outbound SMTP TCP/25 Connection to your SMTP server Outbound SMTPS TCP/465 Connection to your SMTP server over TLS/SSL Outbound Docker Hub * Connection to Docker Hub to download the required container images Outbound Git provider * Connection to the ports required by your remote Git provider Cluster hardware requirements \u00b6 The high-level architecture described in the next section is important in understanding how Codacy uses and allocates hardware resources. Below we also provide guidance on resource provisioning for typical scenarios . For a custom hardware resource recommendation, please contact us at support@codacy.com . Codacy architecture \u00b6 You can look at Codacy separately as two groups of components: The \"Platform\" contains the UI and other components important to treat and show results The \"Analysis\" is the swarm of workers that run between one and four linters simultaneously, depending on factors such as the number of files or the programming languages used in your projects Since all components are running on a cluster, you can increase the number of pod replicas in every deployment to give you more resilience and throughput, at a cost of increased resource usage. The following is a simplified overview of how to calculate resource allocation for the group of components \"Platform\" and \"Analysis\": Group of components vCPU Memory Platform (1 pod replica per component) 4 8 GB Analysis (1 Analysis Worker pod with up to 4 linters) 5 (per Analysis Worker) 10 GB (per Analysis Worker) Standard cluster provisioning \u00b6 As described in the section above, Codacy's architecture allows scaling the \"Analysis\" group of components, meaning that the resources needed for Codacy depend mainly on the rate of commits done by your team that Codacy will be analyzing. The resources recommended on the following table are based on our experience and are also the defaults in the values-production.yaml file. You might need to adapt these defaults taking into account your use case. In particular, you should set the value of global.workerManager.workers.config.dedicatedMax to the maximum number of concurrent analysis depending on the available resources and number of replicas per component. Note For MicroK8s clusters we added an extra 1.5 vCPU and 1.5 GB memory to the \"Platform\" to account for the MicroK8s platform itself running on the same machine. Installation type Pod replicas per component Max. concurrent analysis Platform resources Analysis resources ~ Total resources Kubernetes Small Installation 1 2 4 vCPUs 8 GB RAM 10 vCPUs 20 GB RAM 16 vCPUs 32 GB RAM Kubernetes Medium Installation (default) 2 4 8 vCPUs 16 GB RAM 20 vCPUs 40 GB RAM 32 vCPUs 64 GB RAM Kubernetes Big Installation 2+ 10+ 8+ vCPUs 16+ GB RAM 50+ vCPUs 100+ GB RAM 60+ vCPUs 110+ GB RAM MicroK8s Minimum 1 2 5.5 vCPUs 9.5 GB RAM 10 vCPUs 20 GB RAM 16 vCPUs 32 GB RAM MicroK8s Recommended (default) 1+ 2 9.5+ vCPUs 17.5+ GB RAM 10 vCPUs 20 GB RAM 21+ vCPUs 40+ GB RAM The storage requirements recommended on the following table depend mainly on the number of repositories that Codacy will be analyzing and should be used as a guideline to determine your installation requirements. Component Bundled in the chart? Minimum recommended NFS Yes 200 GB RabbitMQ Yes 8 GB Minio Yes 20 GB PostgreSQL No (external DB recommended) 500 GB+ PostgreSQL server setup \u00b6 Codacy requires a database server to persist data that must satisfy the following requirements: The infrastructure hosting the database server must be provisioned with the hardware requirements described below The DBMS server must be PostgreSQL version 9.6 The PostgreSQL server must be configured to accept connections from the cluster The Codacy databases and a dedicated user must be created using the instructions below Important Google, the developer of Kubernetes, doesn't recommend running database servers on your cluster . As such, consider using a managed solution like Amazon RDS or Google Cloud SQL, or running the PostgreSQL server on a dedicated virtual machine. We recommend that you use a managed solution to reduce maintenance and configuration costs of the PostgreSQL server. The main cloud providers all have this service that you can use, for example: Amazon RDS for PostgreSQL or Amazon Aurora PostgreSQL-Compatible Edition Azure Database for PostgreSQL Google Cloud SQL for PostgreSQL Digital Ocean Managed Databases PostgreSQL hardware requirements \u00b6 The following are the minimum specifications recommended for provisioning the PostgreSQL server: vCPUs Memory Storage Max. concurrent connections 4 8 GB 500 GB+ 300 Preparing PostgreSQL for Codacy \u00b6 Before installing Codacy you must create a set of databases that will be used by Codacy to persist data. We also recommend that you create a dedicated user for Codacy, with access permissions only to the databases that are specific to Codacy: Connect to the PostgreSQL server as a database admin user. For example, using the psql command line client: psql -U postgres -h <PostgreSQL server hostname> Create the dedicated user that Codacy will use to connect to PostgreSQL. Make sure that you change the username and password to suit your security needs: CREATE USER codacy WITH PASSWORD 'codacy' ; ALTER ROLE codacy WITH CREATEDB ; Take note of the username and password you define, as you will require them later to configure the connection from Codacy to the PostgreSQL server. Make sure that you can connect to the PostgreSQL database using the newly created user. For example, using the psql command line client: psql -U codacy -d postgres -h <PostgreSQL server hostname> Create the databases required by Codacy: CREATE DATABASE accounts WITH OWNER = codacy ; CREATE DATABASE analysis WITH OWNER = codacy ; CREATE DATABASE results WITH OWNER = codacy ; CREATE DATABASE metrics WITH OWNER = codacy ; CREATE DATABASE filestore WITH OWNER = codacy ; CREATE DATABASE jobs WITH OWNER = codacy ; CREATE DATABASE activities WITH OWNER = codacy ; CREATE DATABASE hotspots WITH OWNER = codacy ; CREATE DATABASE listener WITH OWNER = codacy ; CREATE DATABASE crow WITH OWNER = codacy ;","title":"System requirements"},{"location":"chart/requirements/#system-requirements","text":"Before installing Codacy you must ensure that you have the following infrastructure correctly provisioned and configured: Git provider Kubernetes or MicroK8s cluster PostgreSQL server The next sections describe in detail how to set up these prerequisites.","title":"System requirements"},{"location":"chart/requirements/#git-provider","text":"To use Codacy Self-hosted, you must use one or more of our supported Git providers . In particular, if you're using a self-hosted Git provider, make sure that your version is supported by Codacy.","title":"Git provider"},{"location":"chart/requirements/#kubernetes-or-microk8s-cluster-setup","text":"The cluster running Codacy must satisfy the following requirements: The infrastructure hosting the cluster must be provisioned with the hardware and networking requirements described below The orchestration platform managing the cluster must be one of: Kubernetes version 1.14.* to 1.20.* (1.20 recommended) MicroK8s version 1.14.* to 1.20.* (1.20 recommended) The NGINX Ingress controller must be installed and correctly set up in the cluster","title":"Kubernetes or MicroK8s cluster setup"},{"location":"chart/requirements/#postgresql-server-setup","text":"Codacy requires a database server to persist data that must satisfy the following requirements: The infrastructure hosting the database server must be provisioned with the hardware requirements described below The DBMS server must be PostgreSQL version 9.6 The PostgreSQL server must be configured to accept connections from the cluster The Codacy databases and a dedicated user must be created using the instructions below Important Google, the developer of Kubernetes, doesn't recommend running database servers on your cluster . As such, consider using a managed solution like Amazon RDS or Google Cloud SQL, or running the PostgreSQL server on a dedicated virtual machine. We recommend that you use a managed solution to reduce maintenance and configuration costs of the PostgreSQL server. The main cloud providers all have this service that you can use, for example: Amazon RDS for PostgreSQL or Amazon Aurora PostgreSQL-Compatible Edition Azure Database for PostgreSQL Google Cloud SQL for PostgreSQL Digital Ocean Managed Databases","title":"PostgreSQL server setup"},{"location":"chart/configuration/monitoring/","text":"Monitoring \u00b6 Currently, we support two monitoring solutions: Crow : A simple, lightweight, and built-in monitoring solution, that is enabled by default when you install Codacy. Prometheus + Grafana + Loki : A comprehensive third-party monitoring solution, recommended for more advanced usage. The sections below provide details on how to set up each monitoring solution. Setting up monitoring using Crow \u00b6 Crow displays information about the projects that are pending analysis and the jobs currently running on Codacy. Crow is installed alongside Codacy when the Helm chart is deployed to the cluster. By default, you can access Crow as follows: URL: http://<codacy hostname>/monitoring , where <codacy hostname> is the hostname of your Codacy instance Username: codacy Password: C0dacy123 We highly recommend that you define a custom password for Crow, if you haven't already done it when installing Codacy: Edit the value of global.crow.config.passwordAuth.password in the values-production.yaml file that you used to install Codacy: global : crow : config : passwordAuth : password : C0dacy123 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml Setting up monitoring using Grafana, Prometheus, and Loki \u00b6 Prometheus is an open-source systems monitoring and alerting toolkit. Logs can be collected using Loki , which is a horizontally-scalable, highly-available, multi-tenant log aggregation system. Its data can be visualized with Grafana , a widely used open source analytics and monitoring solution. This solution is considerably more resource demanding than Crow, and is recommended only for more advanced usage. Furthermore, its installation, configuration, and management require a deeper knowledge of Kubernetes as each component must be carefully tweaked to match your specific use case, using as starting point the .yaml values files provided by us. The instructions below cover the basic installation of the components in this monitoring stack. 1. Installing Prometheus \u00b6 The simplest way to set up Prometheus in your cluster is by using the Prometheus Operator bundle. Add the custom resources required for installing this bundle in your cluster: Important If you are using MicroK8s use microk8s.kubectl instead of kubectl . kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml\" 2. Installing Loki \u00b6 Obtain the configuration file for Loki, values-loki.yaml , and install it by running the command below. While the default storage class setting for Loki persistence should suit most use cases, you may need to adjust it to your specific Kubernetes installation. For instance, for MicroK8s use storageClassName: microk8s-hostpath . helm repo add loki https://grafana.github.io/loki/charts kubectl create namespace monitoring helm upgrade --install --atomic --timeout 600s loki loki/loki \\ --version 0 .28.1 --namespace monitoring --values values-loki.yaml 3. Installing Promtail \u00b6 Promtail is an agent that ships the contents of local logs to a Loki instance. Obtain the configuration file for Promtail, values-promtail.yaml , and install it by running the command below. helm upgrade --install --atomic --timeout 600s promtail loki/promtail \\ --version 0 .22.2 --namespace monitoring --values values-promtail.yaml 4. Installing Prometheus and Grafana \u00b6 Obtain the configuration file for the Prometheus Operator bundle , values-prometheus-operator.yaml . Then: Edit the Grafana password for the admin user and the hostname for grafana in the values-prometheus-operator.yaml file. Install the bundle on your cluster by running the command below. helm upgrade --install --atomic --timeout 600s monitoring stable/prometheus-operator \\ --version 8 .13.8 --namespace monitoring --values values-prometheus-operator.yaml Follow the Kubernetes documentation to access the Grafana service that is now running on your cluster, using the method that best suits your use case. 5. Enable service dashboards \u00b6 Warning Currently, the application metrics and information reported by the Codacy components to populate service dashboards are very limited since we are still developing these reporting capabilities. As such, we recommend that you skip this configuration. Now that you have Prometheus and Grafana installed you can enable serviceMonitor and grafana_dashboards for Codacy components. Create a file named values-monitoring.yaml with the following content: global : metrics : serviceMonitor : enabled : true grafana : enabled : true Apply this configuration by performing a Helm upgrade. To do so append --values values-monitoring.yaml to the command used to install Codacy : helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-monitoring.yaml","title":"Monitoring"},{"location":"chart/configuration/monitoring/#monitoring","text":"Currently, we support two monitoring solutions: Crow : A simple, lightweight, and built-in monitoring solution, that is enabled by default when you install Codacy. Prometheus + Grafana + Loki : A comprehensive third-party monitoring solution, recommended for more advanced usage. The sections below provide details on how to set up each monitoring solution.","title":"Monitoring"},{"location":"chart/configuration/monitoring/#setting-up-monitoring-using-crow","text":"Crow displays information about the projects that are pending analysis and the jobs currently running on Codacy. Crow is installed alongside Codacy when the Helm chart is deployed to the cluster. By default, you can access Crow as follows: URL: http://<codacy hostname>/monitoring , where <codacy hostname> is the hostname of your Codacy instance Username: codacy Password: C0dacy123 We highly recommend that you define a custom password for Crow, if you haven't already done it when installing Codacy: Edit the value of global.crow.config.passwordAuth.password in the values-production.yaml file that you used to install Codacy: global : crow : config : passwordAuth : password : C0dacy123 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Setting up monitoring using Crow"},{"location":"chart/configuration/monitoring/#setting-up-monitoring-using-grafana-prometheus-and-loki","text":"Prometheus is an open-source systems monitoring and alerting toolkit. Logs can be collected using Loki , which is a horizontally-scalable, highly-available, multi-tenant log aggregation system. Its data can be visualized with Grafana , a widely used open source analytics and monitoring solution. This solution is considerably more resource demanding than Crow, and is recommended only for more advanced usage. Furthermore, its installation, configuration, and management require a deeper knowledge of Kubernetes as each component must be carefully tweaked to match your specific use case, using as starting point the .yaml values files provided by us. The instructions below cover the basic installation of the components in this monitoring stack.","title":"Setting up monitoring using Grafana, Prometheus, and Loki"},{"location":"chart/configuration/integrations/bitbucket-cloud/","text":"Bitbucket Cloud \u00b6 Follow the instructions below to set up the Codacy integration with Bitbucket Cloud. Create an OAuth consumer \u00b6 To integrate Codacy with Bitbucket Cloud, you must register an OAuth consumer for Codacy on Bitbucket. You can create a consumer on any existing individual or team account. To create a consumer, do the following: On Bitbucket, click on your avatar on the bottom left-hand corner and select Bitbucket settings . Select OAuth on the left sidebar and click the button Add consumer . Fill in the fields to create the OAuth consumer: Name: Name of the OAuth consumer. For example, Codacy . Callback URL: Copy the URL below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. https://codacy.example.com/login/Bitbucket?codacy_skip_ga=1 This is a private consumer: Enable the check box. Add the permissions: Account: Write Team membership: Read Projects: Read Repositories: Admin Pull requests: Write Issues: Write Webhooks: Read and write Click Save, and then click the name of the new OAuth consumer to take note of the generated key and secret. Configure Bitbucket Cloud on Codacy \u00b6 After creating the OAuth consumer on Bitbucket Cloud, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucket.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the OAuth consumer: global : bitbucket : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Cloud key : \"\" # OAuth consumer key secret : \"\" # OAuth consumer secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Cloud to authenticate to Codacy.","title":"Bitbucket Cloud"},{"location":"chart/configuration/integrations/bitbucket-cloud/#bitbucket-cloud","text":"Follow the instructions below to set up the Codacy integration with Bitbucket Cloud.","title":"Bitbucket Cloud"},{"location":"chart/configuration/integrations/bitbucket-cloud/#create-oauth","text":"To integrate Codacy with Bitbucket Cloud, you must register an OAuth consumer for Codacy on Bitbucket. You can create a consumer on any existing individual or team account. To create a consumer, do the following: On Bitbucket, click on your avatar on the bottom left-hand corner and select Bitbucket settings . Select OAuth on the left sidebar and click the button Add consumer . Fill in the fields to create the OAuth consumer: Name: Name of the OAuth consumer. For example, Codacy . Callback URL: Copy the URL below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. https://codacy.example.com/login/Bitbucket?codacy_skip_ga=1 This is a private consumer: Enable the check box. Add the permissions: Account: Write Team membership: Read Projects: Read Repositories: Admin Pull requests: Write Issues: Write Webhooks: Read and write Click Save, and then click the name of the new OAuth consumer to take note of the generated key and secret.","title":"Create an OAuth consumer"},{"location":"chart/configuration/integrations/bitbucket-cloud/#configure","text":"After creating the OAuth consumer on Bitbucket Cloud, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucket.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the OAuth consumer: global : bitbucket : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Cloud key : \"\" # OAuth consumer key secret : \"\" # OAuth consumer secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Cloud to authenticate to Codacy.","title":"Configure Bitbucket Cloud on Codacy"},{"location":"chart/configuration/integrations/bitbucket-server/","text":"Bitbucket Server \u00b6 Follow the instructions below to set up the Codacy integration with Bitbucket Server. Create a Bitbucket Server application link \u00b6 To integrate Codacy with Bitbucket Server, you must create an application link on your Bitbucket Server instance: Since Bitbucket Server uses OAuth1, you need to create a key pair to sign and validate the requests between Codacy and the Bitbucket Server instance. Create a key pair using the RSA algorithm in the PKCS#8 format by executing the command: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/configuration/integrations/generate-bitbucket-server-secrets.sh ) Store the keys in a safe place for usage in the next steps and as a backup. Open <bitbucket server url>/plugins/servlet/applinks/listApplicationLinks , where <bitbucket server url> is the URL of your Bitbucket Server instance. Create a new application link with the URL of your Codacy instance. Fill in the fields: Application Name: Name of the application. For example, Codacy . Application Type: Select Generic Application . The remaining fields should be left blank. After creating the link, click Edit to add an incoming authentication. Fill in the fields of the incomming authentication: Consumer Key: Enter the consumerKey generated previously. Consumer Name: Name of the consumer. For example, Codacy . Public Key: Enter the consumerPublicKey generated previously. The remaining fields should be left blank. Configure Bitbucket Server on Codacy \u00b6 After creating the Bitbucket Server application link, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucketEnterprise.enabled: \"true\" and define the remaining values as described below and with the information obtained when you created the Bitbucket Server application link: bitbucketEnterprise : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Server hostname : \"bitbucket.example.com\" # Hostname of your Bitbucket Server instance protocol : \"https\" # Protocol of your Bitbucket Server instance port : 7990 # Port of your Bitbucket Server instance consumerKey : \"\" # Generated when creating the Bitbucket Server application link consumerPublicKey : \"\" # Generated when creating the Bitbucket Server application link consumerPrivateKey : \"\" # Generated when creating the Bitbucket Server application link Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Server to authenticate to Codacy.","title":"Bitbucket Server"},{"location":"chart/configuration/integrations/bitbucket-server/#bitbucket-server","text":"Follow the instructions below to set up the Codacy integration with Bitbucket Server.","title":"Bitbucket Server"},{"location":"chart/configuration/integrations/bitbucket-server/#create-a-bitbucket-server-application-link","text":"To integrate Codacy with Bitbucket Server, you must create an application link on your Bitbucket Server instance: Since Bitbucket Server uses OAuth1, you need to create a key pair to sign and validate the requests between Codacy and the Bitbucket Server instance. Create a key pair using the RSA algorithm in the PKCS#8 format by executing the command: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/configuration/integrations/generate-bitbucket-server-secrets.sh ) Store the keys in a safe place for usage in the next steps and as a backup. Open <bitbucket server url>/plugins/servlet/applinks/listApplicationLinks , where <bitbucket server url> is the URL of your Bitbucket Server instance. Create a new application link with the URL of your Codacy instance. Fill in the fields: Application Name: Name of the application. For example, Codacy . Application Type: Select Generic Application . The remaining fields should be left blank. After creating the link, click Edit to add an incoming authentication. Fill in the fields of the incomming authentication: Consumer Key: Enter the consumerKey generated previously. Consumer Name: Name of the consumer. For example, Codacy . Public Key: Enter the consumerPublicKey generated previously. The remaining fields should be left blank.","title":"Create a Bitbucket Server application link"},{"location":"chart/configuration/integrations/bitbucket-server/#configure-bitbucket-server-on-codacy","text":"After creating the Bitbucket Server application link, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucketEnterprise.enabled: \"true\" and define the remaining values as described below and with the information obtained when you created the Bitbucket Server application link: bitbucketEnterprise : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Server hostname : \"bitbucket.example.com\" # Hostname of your Bitbucket Server instance protocol : \"https\" # Protocol of your Bitbucket Server instance port : 7990 # Port of your Bitbucket Server instance consumerKey : \"\" # Generated when creating the Bitbucket Server application link consumerPublicKey : \"\" # Generated when creating the Bitbucket Server application link consumerPrivateKey : \"\" # Generated when creating the Bitbucket Server application link Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Server to authenticate to Codacy.","title":"Configure Bitbucket Server on Codacy"},{"location":"chart/configuration/integrations/email/","text":"Emails \u00b6 Follow the instructions below to set up Codacy to send emails using your SMTP server: Edit the file values-production.yaml that you used to install Codacy . Set global.email.enabled: \"true\" and define the remaining values with the credentials for your SMTP server: email : enabled : \"true\" replyTo : \"notifications@mycompany.com\" # Reply-to field on sent emails smtp : protocol : \"smtp\" # SMTP protocol to use, either smtps or smtp hostname : \"smtp.example.com\" # Hostname of your SMTP server # username: \"\" # Optional username to authenticate on your SMTP server # password: \"\" # Optional password to authenticate on your SMTP server # port: 25 # Optional port of your SMTP server, the default is 25 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to: Invite new users via email Receive commit and pull request email notifications","title":"Emails"},{"location":"chart/configuration/integrations/email/#emails","text":"Follow the instructions below to set up Codacy to send emails using your SMTP server: Edit the file values-production.yaml that you used to install Codacy . Set global.email.enabled: \"true\" and define the remaining values with the credentials for your SMTP server: email : enabled : \"true\" replyTo : \"notifications@mycompany.com\" # Reply-to field on sent emails smtp : protocol : \"smtp\" # SMTP protocol to use, either smtps or smtp hostname : \"smtp.example.com\" # Hostname of your SMTP server # username: \"\" # Optional username to authenticate on your SMTP server # password: \"\" # Optional password to authenticate on your SMTP server # port: 25 # Optional port of your SMTP server, the default is 25 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to: Invite new users via email Receive commit and pull request email notifications","title":"Emails"},{"location":"chart/configuration/integrations/github-app-create/","text":"Creating a GitHub App \u00b6 You must create and correctly set up a GitHub App to allow Codacy to integrate with GitHub. To create the GitHub App: If you're using GitHub Cloud , open https://github.com/settings/apps/new . If you're using GitHub Enterprise , open https://github.example.com/settings/apps/new , replacing the HTTP protocol and hostname with the correct values for your GitHub Enterprise instance. Configure the new GitHub App using the values listed on the table below, replacing https://codacy.example.com with the correct base URL of your Codacy instance. Field Value GitHub App name Codacy Homepage URL https://codacy.example.com User authorization callback URL https://codacy.example.com Expire user authorization tokens Disabled Webhook URL For GitHub Cloud: https://codacy.example.com/2.0/events/gh/organization For GitHub Enterprise: https://codacy.example.com/2.0/events/ghe/organization Repository permissions Administration Read & write Checks Read & write Issues Read & write Metadata Read only Pull requests Read & write Webhooks Read & write Commit statuses Read & write Organization permissions Members Read only Webhooks Read & write User permissions Email addresses Read only Git SSH keys Read & write Where can this GitHub App be installed? Any account Scroll to the bottom of the page, click Generate a private key , and save the .pem file containing the private key. Take note of the following information, as you'll need it to configure Codacy: GitHub App name App ID Client ID Client secret Private key (contents of the .pem file generated in the previous step)","title":"Creating a GitHub App"},{"location":"chart/configuration/integrations/github-app-create/#creating-a-github-app","text":"You must create and correctly set up a GitHub App to allow Codacy to integrate with GitHub. To create the GitHub App: If you're using GitHub Cloud , open https://github.com/settings/apps/new . If you're using GitHub Enterprise , open https://github.example.com/settings/apps/new , replacing the HTTP protocol and hostname with the correct values for your GitHub Enterprise instance. Configure the new GitHub App using the values listed on the table below, replacing https://codacy.example.com with the correct base URL of your Codacy instance. Field Value GitHub App name Codacy Homepage URL https://codacy.example.com User authorization callback URL https://codacy.example.com Expire user authorization tokens Disabled Webhook URL For GitHub Cloud: https://codacy.example.com/2.0/events/gh/organization For GitHub Enterprise: https://codacy.example.com/2.0/events/ghe/organization Repository permissions Administration Read & write Checks Read & write Issues Read & write Metadata Read only Pull requests Read & write Webhooks Read & write Commit statuses Read & write Organization permissions Members Read only Webhooks Read & write User permissions Email addresses Read only Git SSH keys Read & write Where can this GitHub App be installed? Any account Scroll to the bottom of the page, click Generate a private key , and save the .pem file containing the private key. Take note of the following information, as you'll need it to configure Codacy: GitHub App name App ID Client ID Client secret Private key (contents of the .pem file generated in the previous step)","title":"Creating a GitHub App"},{"location":"chart/configuration/integrations/github-cloud/","text":"GitHub Cloud \u00b6 Follow the instructions below to set up the Codacy integration with GitHub Cloud: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.github.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: github : enabled : \"true\" login : \"true\" # Show login button for GitHub Cloud clientId : \"\" # Client ID clientSecret : \"\" # Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Cloud to authenticate to Codacy.","title":"GitHub Cloud"},{"location":"chart/configuration/integrations/github-cloud/#github-cloud","text":"Follow the instructions below to set up the Codacy integration with GitHub Cloud: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.github.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: github : enabled : \"true\" login : \"true\" # Show login button for GitHub Cloud clientId : \"\" # Client ID clientSecret : \"\" # Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Cloud to authenticate to Codacy.","title":"GitHub Cloud"},{"location":"chart/configuration/integrations/github-enterprise/","text":"GitHub Enterprise \u00b6 Follow the instructions below to set up the Codacy integration with GitHub Enterprise: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.githubEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: githubEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitHub Enterprise hostname : \"github.example.com\" # Hostname of your GitHub Enterprise instance protocol : \"https\" # Protocol of your GitHub Enterprise instance port : 443 # Port of your GitHub Enterprise instance disableSSL : \"false\" # Disable certificate validation isPrivateMode : \"true\" # Status of private mode on your GitHub Enterprise instance clientId : \"\" # GitHub App Client ID clientSecret : \"\" # GitHub App Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # GitHub App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Enterprise to authenticate to Codacy.","title":"GitHub Enterprise"},{"location":"chart/configuration/integrations/github-enterprise/#github-enterprise","text":"Follow the instructions below to set up the Codacy integration with GitHub Enterprise: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.githubEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: githubEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitHub Enterprise hostname : \"github.example.com\" # Hostname of your GitHub Enterprise instance protocol : \"https\" # Protocol of your GitHub Enterprise instance port : 443 # Port of your GitHub Enterprise instance disableSSL : \"false\" # Disable certificate validation isPrivateMode : \"true\" # Status of private mode on your GitHub Enterprise instance clientId : \"\" # GitHub App Client ID clientSecret : \"\" # GitHub App Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # GitHub App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Enterprise to authenticate to Codacy.","title":"GitHub Enterprise"},{"location":"chart/configuration/integrations/gitlab-cloud/","text":"GitLab Cloud \u00b6 Follow the instructions below to set up the Codacy integration with GitLab Cloud. Create a GitLab application \u00b6 To integrate Codacy with GitLab Cloud, you must create a GitLab application: Open https://gitlab.com/profile/applications . Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLab https://codacy.example.com/add/addProvider/GitLab https://codacy.example.com/add/addService/GitLab https://codacy.example.com/add/addPermissions/GitLab Scopes: Enable the scopes: api read_user read_repository openid Click Save application and take note of the generated Application Id and Secret. Configure GitLab Cloud on Codacy \u00b6 After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlab.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlab : enabled : \"true\" login : \"true\" # Show login button for GitLab Cloud clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Cloud to authenticate to Codacy.","title":"GitLab Cloud"},{"location":"chart/configuration/integrations/gitlab-cloud/#gitlab-cloud","text":"Follow the instructions below to set up the Codacy integration with GitLab Cloud.","title":"GitLab Cloud"},{"location":"chart/configuration/integrations/gitlab-cloud/#create-application","text":"To integrate Codacy with GitLab Cloud, you must create a GitLab application: Open https://gitlab.com/profile/applications . Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLab https://codacy.example.com/add/addProvider/GitLab https://codacy.example.com/add/addService/GitLab https://codacy.example.com/add/addPermissions/GitLab Scopes: Enable the scopes: api read_user read_repository openid Click Save application and take note of the generated Application Id and Secret.","title":"Create a GitLab application"},{"location":"chart/configuration/integrations/gitlab-cloud/#configure","text":"After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlab.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlab : enabled : \"true\" login : \"true\" # Show login button for GitLab Cloud clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Cloud to authenticate to Codacy.","title":"Configure GitLab Cloud on Codacy"},{"location":"chart/configuration/integrations/gitlab-enterprise/","text":"GitLab Enterprise \u00b6 Follow the instructions below to set up the Codacy integration with GitLab Enterprise: Create a GitLab application \u00b6 To integrate Codacy with GitLab Enterprise, you must create a GitLab application: Open <gitlab enterprise url>/profile/applications as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLabEnterprise https://codacy.example.com/add/addProvider/GitLabEnterprise https://codacy.example.com/add/addService/GitLabEnterprise https://codacy.example.com/add/addPermissions/GitLabEnterprise Scopes: Enable the scopes: api read_user read_repository openid Click Save application and take note of the generated Application Id and Secret. Configure GitLab Enterprise on Codacy \u00b6 After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlabEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlabEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitLab Enterprise hostname : \"gitlab.example.com\" # Hostname of your GitLab Enterprise instance protocol : \"https\" # Protocol of your GitLab Enterprise instance port : 443 # Port of your GitLab Enterprise instance clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Enterprise to authenticate to Codacy. Detect changes to repositories and organizations \u00b6 Optionally, Codacy can automatically detect the following changes to repositories and organizations on your GitLab Enterprise instance: For repositories: renames, deletes, and visibility changes For organizations: renames, deletes, and access removed To do this, you must configure a System Hook on your GitLab Enterprise instance to notify Codacy of the changes: Open <gitlab enterprise url>/admin/hooks as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to create the System Hook: URL: The URL of your Codacy instance with the path /2.0/events/gle/organization . For example, http://codacy.example.com/2.0/events/gle/organization Secret Token: Copy the Application Secret from the GitLab application that you created previously, or from the value of clientSecret in the file values-production.yaml that you used to install Codacy. Trigger: Enable the trigger Repository update events SSL verification: Enable the SSL verification. Click Save Changes to save the System Hook.","title":"GitLab Enterprise"},{"location":"chart/configuration/integrations/gitlab-enterprise/#gitlab-enterprise","text":"Follow the instructions below to set up the Codacy integration with GitLab Enterprise:","title":"GitLab Enterprise"},{"location":"chart/configuration/integrations/gitlab-enterprise/#create-application","text":"To integrate Codacy with GitLab Enterprise, you must create a GitLab application: Open <gitlab enterprise url>/profile/applications as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLabEnterprise https://codacy.example.com/add/addProvider/GitLabEnterprise https://codacy.example.com/add/addService/GitLabEnterprise https://codacy.example.com/add/addPermissions/GitLabEnterprise Scopes: Enable the scopes: api read_user read_repository openid Click Save application and take note of the generated Application Id and Secret.","title":"Create a GitLab application"},{"location":"chart/configuration/integrations/gitlab-enterprise/#configure","text":"After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlabEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlabEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitLab Enterprise hostname : \"gitlab.example.com\" # Hostname of your GitLab Enterprise instance protocol : \"https\" # Protocol of your GitLab Enterprise instance port : 443 # Port of your GitLab Enterprise instance clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Enterprise to authenticate to Codacy.","title":"Configure GitLab Enterprise on Codacy"},{"location":"chart/configuration/integrations/gitlab-enterprise/#detect-changes-to-repositories-and-organizations","text":"Optionally, Codacy can automatically detect the following changes to repositories and organizations on your GitLab Enterprise instance: For repositories: renames, deletes, and visibility changes For organizations: renames, deletes, and access removed To do this, you must configure a System Hook on your GitLab Enterprise instance to notify Codacy of the changes: Open <gitlab enterprise url>/admin/hooks as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to create the System Hook: URL: The URL of your Codacy instance with the path /2.0/events/gle/organization . For example, http://codacy.example.com/2.0/events/gle/organization Secret Token: Copy the Application Secret from the GitLab application that you created previously, or from the value of clientSecret in the file values-production.yaml that you used to install Codacy. Trigger: Enable the trigger Repository update events SSL verification: Enable the SSL verification. Click Save Changes to save the System Hook.","title":"Detect changes to repositories and organizations"},{"location":"chart/infrastructure/eks-quickstart/","text":"Creating an Amazon EKS cluster \u00b6 Follow the instructions below to set up an Amazon EKS cluster from scratch, including all the necessary underlying infrastructure, using Terraform. The following diagram is a non-exhaustive overview of what you can expect to have deployed in your AWS account by using this quickstart guide. 1. Prepare your environment \u00b6 Prepare your environment to set up the Amazon EKS cluster: Make sure that you have the following tools installed on your machine: Git version >= 2.0.0 AWS CLI version 1 Terraform version >= 0.12 Kubectl version >= 1.14 Set up the AWS CLI credentials for your AWS account using the AWS CLI and Terraform documentation as reference. Note that, as stated in the Terraform documentation , if your .aws/credentials are more complex you might need to set AWS_SDK_LOAD_CONFIG=1 for Terraform to work correctly: export AWS_SDK_LOAD_CONFIG = 1 Clone the Codacy chart repository and change to the directory that includes the provided Terraform configuration files: git clone https://github.com/codacy/chart.git cd chart/docs/infrastructure/EKS/ This folder includes the following infrastructure stacks: backend : Optional S3 bucket for storing the Terraform state and a DynamoDB table for state locking main : Amazon EKS cluster, including the setup of all network and node infrastructure to go from zero to a fully functional cluster You must have administration privileges on AWS to deploy (and eventually destroy) this infrastructure. The policy file aws-terraform-minimum-admin-policy.json lists the minimum privileges that are required. 2. Set up the Terraform state storage backend \u00b6 The backend stores the current and historical state of your infrastructure. Although using the backend is optional, we recommend that you deploy it, particularly if you are planning to use these Terraform templates to make modifications to the cluster in the future: Initialize Terraform and deploy the infrastructure described in the backend/ directory, then follow Terraform's instructions: cd backend/ terraform init && terraform apply This creates an Amazon S3 bucket with a unique name to save the infrastructure state. Take note of the value of state_bucket_name in the output of the command. Edit the main/config.tf file and follow the instructions included in the comments to set the name of the Amazon S3 bucket created above and enable the use of the backend in those infrastructure stacks. 3. Create a vanilla Amazon EKS cluster \u00b6 Create a cluster that includes all the required network and node setup: Initialize Terraform and deploy the infrastructure described in the main/ directory, then follow Terraform's instructions: cd ../main/ terraform init && terraform apply This process takes around 10 minutes. Consider if you want to tailor the cluster to your needs by customizing the cluster configuration. The cluster configuration (such as the type and number of nodes, network CIDRs, etc.) is exposed as variables in the main/variables.tf file. To customize the defaults of that file we recommend that you use a variable definitions file and set the variables in a file named terraform.tfvars in the directory main/ . The following is an example terraform.tfvars : some_key = \"a_string_value\" another_key = 3 someting_else = true Subsequently running terraform apply loads the variables in the terraform.tfvars file by default: terraform apply Set up the kubeconfig file that stores the information needed by kubectl to connect to the new cluster by default: aws eks update-kubeconfig --name codacy-cluster --alias codacy-cluster Get information about the pods in the cluster to test that the cluster was created and that kubectl can successfully connect to the cluster: kubectl get pods -A 4. Prepare to set up the Ingress Controller \u00b6 Prepare your infrastructure for the Ingress Controller setup, which is performed later during the installation process: Make sure that your network resources are correctly tagged, and create the following required tags if they are missing: Resource Type Key = Value VPC kubernetes.io/cluster/codacy-cluster = shared Subnet (public) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/elb = 1 Subnet (private) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/internal-elb = 1 For more information refer to the AWS documentation . Add the following chart repositories to Helm: helm repo add stable https://charts.helm.sh/stable helm repo update 5. Install the NGINX Ingress Controller \u00b6 Install the NGINX Ingress Controller: Download the configuration file values-nginx.yaml for the NGINX Ingress Controller. If you wish to use a private load balancer or restrict the IP range for the provisioned load balancer edit the file and enable the required annotation and/or the corresponding setting where indicated. Install the NGINX Ingress Controller: kubectl create namespace codacy helm upgrade --install --namespace codacy --version 1 .39.0 codacy-nginx-ingress stable/nginx-ingress -f values-nginx.yaml Uninstalling the Amazon EKS cluster \u00b6 Warning If you proceed beyond this point you'll permanently delete and break things. Delete the Kubernetes cluster. Run the following command in the main/ directory: terraform destroy This process takes around 10 minutes. Remove the Terraform backend. If you created the Terraform backend with the provided stack you can now safely delete it. The backend is purposely created with extra settings to prevent its accidental destruction. To destroy it cleanly you must first disable these settings by editing the file backend/state_and_lock.tf and following the instructions included in the comments. Afterwards, run the following command in the backend/ directory: terraform apply && terraform destroy Note that you first have to run terraform apply to update the settings, and only then will terraform destroy be able to destroy the backend.","title":"Creating an Amazon EKS cluster"},{"location":"chart/infrastructure/eks-quickstart/#creating-an-amazon-eks-cluster","text":"Follow the instructions below to set up an Amazon EKS cluster from scratch, including all the necessary underlying infrastructure, using Terraform. The following diagram is a non-exhaustive overview of what you can expect to have deployed in your AWS account by using this quickstart guide.","title":"Creating an Amazon EKS cluster"},{"location":"chart/infrastructure/eks-quickstart/#1-prepare-your-environment","text":"Prepare your environment to set up the Amazon EKS cluster: Make sure that you have the following tools installed on your machine: Git version >= 2.0.0 AWS CLI version 1 Terraform version >= 0.12 Kubectl version >= 1.14 Set up the AWS CLI credentials for your AWS account using the AWS CLI and Terraform documentation as reference. Note that, as stated in the Terraform documentation , if your .aws/credentials are more complex you might need to set AWS_SDK_LOAD_CONFIG=1 for Terraform to work correctly: export AWS_SDK_LOAD_CONFIG = 1 Clone the Codacy chart repository and change to the directory that includes the provided Terraform configuration files: git clone https://github.com/codacy/chart.git cd chart/docs/infrastructure/EKS/ This folder includes the following infrastructure stacks: backend : Optional S3 bucket for storing the Terraform state and a DynamoDB table for state locking main : Amazon EKS cluster, including the setup of all network and node infrastructure to go from zero to a fully functional cluster You must have administration privileges on AWS to deploy (and eventually destroy) this infrastructure. The policy file aws-terraform-minimum-admin-policy.json lists the minimum privileges that are required.","title":"1. Prepare your environment"},{"location":"chart/infrastructure/eks-quickstart/#2-set-up-the-terraform-state-storage-backend","text":"The backend stores the current and historical state of your infrastructure. Although using the backend is optional, we recommend that you deploy it, particularly if you are planning to use these Terraform templates to make modifications to the cluster in the future: Initialize Terraform and deploy the infrastructure described in the backend/ directory, then follow Terraform's instructions: cd backend/ terraform init && terraform apply This creates an Amazon S3 bucket with a unique name to save the infrastructure state. Take note of the value of state_bucket_name in the output of the command. Edit the main/config.tf file and follow the instructions included in the comments to set the name of the Amazon S3 bucket created above and enable the use of the backend in those infrastructure stacks.","title":"2. Set up the Terraform state storage backend"},{"location":"chart/infrastructure/eks-quickstart/#3-create-a-vanilla-amazon-eks-cluster","text":"Create a cluster that includes all the required network and node setup: Initialize Terraform and deploy the infrastructure described in the main/ directory, then follow Terraform's instructions: cd ../main/ terraform init && terraform apply This process takes around 10 minutes. Consider if you want to tailor the cluster to your needs by customizing the cluster configuration. The cluster configuration (such as the type and number of nodes, network CIDRs, etc.) is exposed as variables in the main/variables.tf file. To customize the defaults of that file we recommend that you use a variable definitions file and set the variables in a file named terraform.tfvars in the directory main/ . The following is an example terraform.tfvars : some_key = \"a_string_value\" another_key = 3 someting_else = true Subsequently running terraform apply loads the variables in the terraform.tfvars file by default: terraform apply Set up the kubeconfig file that stores the information needed by kubectl to connect to the new cluster by default: aws eks update-kubeconfig --name codacy-cluster --alias codacy-cluster Get information about the pods in the cluster to test that the cluster was created and that kubectl can successfully connect to the cluster: kubectl get pods -A","title":"3. Create a vanilla Amazon EKS cluster"},{"location":"chart/infrastructure/eks-quickstart/#4-prepare-to-set-up-the-ingress-controller","text":"Prepare your infrastructure for the Ingress Controller setup, which is performed later during the installation process: Make sure that your network resources are correctly tagged, and create the following required tags if they are missing: Resource Type Key = Value VPC kubernetes.io/cluster/codacy-cluster = shared Subnet (public) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/elb = 1 Subnet (private) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/internal-elb = 1 For more information refer to the AWS documentation . Add the following chart repositories to Helm: helm repo add stable https://charts.helm.sh/stable helm repo update","title":"4. Prepare to set up the Ingress Controller"},{"location":"chart/infrastructure/eks-quickstart/#5-install-the-nginx-ingress-controller","text":"Install the NGINX Ingress Controller: Download the configuration file values-nginx.yaml for the NGINX Ingress Controller. If you wish to use a private load balancer or restrict the IP range for the provisioned load balancer edit the file and enable the required annotation and/or the corresponding setting where indicated. Install the NGINX Ingress Controller: kubectl create namespace codacy helm upgrade --install --namespace codacy --version 1 .39.0 codacy-nginx-ingress stable/nginx-ingress -f values-nginx.yaml","title":"5. Install the NGINX Ingress Controller"},{"location":"chart/infrastructure/eks-quickstart/#uninstalling-the-amazon-eks-cluster","text":"Warning If you proceed beyond this point you'll permanently delete and break things. Delete the Kubernetes cluster. Run the following command in the main/ directory: terraform destroy This process takes around 10 minutes. Remove the Terraform backend. If you created the Terraform backend with the provided stack you can now safely delete it. The backend is purposely created with extra settings to prevent its accidental destruction. To destroy it cleanly you must first disable these settings by editing the file backend/state_and_lock.tf and following the instructions included in the comments. Afterwards, run the following command in the backend/ directory: terraform apply && terraform destroy Note that you first have to run terraform apply to update the settings, and only then will terraform destroy be able to destroy the backend.","title":"Uninstalling the Amazon EKS cluster"},{"location":"chart/infrastructure/microk8s-quickstart/","text":"Creating a MicroK8s cluster \u00b6 MicroK8s is a lightweight, fully conformant, single-package Kubernetes developed by Canonical. The project is publicly available on GitHub . Follow the instructions below to set up a MicroK8s instance from scratch, including all the necessary dependencies and configurations. 1. Prepare your environment \u00b6 Prepare your environment to set up the MicroK8s instance. You will need a machine running Ubuntu Server 18.04 LTS that: Is correctly provisioned with the resources described for MicroK8s in the system requirements Is able to establish a connection to the PostgreSQL instance described in the system requirements Make sure that you have Helm version 3.2.1 installed. The next steps assume that you are starting from a clean install of Ubuntu Server and require that you run commands on a local or remote command line session on the machine. 2. Installing MicroK8s \u00b6 Install MicroK8s on the machine: Make sure that the package nfs-common is installed: sudo apt update && sudo apt install nfs-common -y Install MicroK8s from the 1.16/stable channel: sudo snap install microk8s --classic --channel = 1 .16/stable sudo usermod -a -G microk8s $USER sudo su - $USER Check that MicroK8s is running: microk8s.status --wait-ready 3. Configuring MicroK8s \u00b6 Now that MicroK8s is running on the machine we can proceed to enabling the necessary addons: Configure MicroK8s to allow privileged containers: sudo mkdir -p /var/snap/microk8s/current/args sudo echo \"--allow-privileged=true\" >> /var/snap/microk8s/current/args/kube-apiserver microk8s.status --wait-ready Enable the following MicroK8s addons: microk8s.enable dns microk8s.status --wait-ready microk8s.enable storage microk8s.status --wait-ready microk8s.enable ingress microk8s.status --wait-ready Important Check the output of the commands to make sure that all the addons are enabled correctly. If by chance any of the addons fails to be enabled, re-execute the microk8s.enable command for that addon. Restart MicroK8s and its services to make sure that all configurations are working: microk8s.stop microk8s.start microk8s.status --wait-ready Export your kubeconfig so that Helm knows on which cluster to install the charts: microk8s.config > ~/.kube/config The addons are now enabled and the MicroK8s instance bootstrapped. However, we must wait for some MicroK8s pods to be ready, as failing to do so can result in the pods entering a CrashLoopBackoff state: microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = kube-dns microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = hostpath-provisioner # If the following command fails, you probably installed the wrong MicroK8s version microk8s.kubectl wait --all-namespaces --for = condition = Ready pod -l name = nginx-ingress-microk8s Verify that the MicroK8s configuration was successful: microk8s.status --wait-ready The output of the command should be the following: microk8s is running addons: knative: disabled jaeger: disabled fluentd: disabled gpu: disabled cilium: disabled storage: enabled registry: disabled rbac: disabled ingress: enabled dns: enabled metrics-server: disabled linkerd: disabled prometheus: disabled istio: disabled dashboard: disabled After these steps you have ensured that DNS, HTTP, and NGINX Ingress are enabled and working properly inside the MicroK8s instance. Notes on installing Codacy \u00b6 You can now follow the generic Codacy installation instructions but please note the following: You must execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, we suggest that you create an alias so that you can run the commands directly as provided on the instructions: alias kubectl = microk8s.kubectl When running the helm upgrade command that installs the Codacy chart, you will be instructed to also use the file values-microk8s.yaml that downsizes some component limits, making it easier to fit Codacy in the lightweight MicroK8s solution.","title":"Creating a MicroK8s cluster"},{"location":"chart/infrastructure/microk8s-quickstart/#creating-a-microk8s-cluster","text":"MicroK8s is a lightweight, fully conformant, single-package Kubernetes developed by Canonical. The project is publicly available on GitHub . Follow the instructions below to set up a MicroK8s instance from scratch, including all the necessary dependencies and configurations.","title":"Creating a MicroK8s cluster"},{"location":"chart/infrastructure/microk8s-quickstart/#1-prepare-your-environment","text":"Prepare your environment to set up the MicroK8s instance. You will need a machine running Ubuntu Server 18.04 LTS that: Is correctly provisioned with the resources described for MicroK8s in the system requirements Is able to establish a connection to the PostgreSQL instance described in the system requirements Make sure that you have Helm version 3.2.1 installed. The next steps assume that you are starting from a clean install of Ubuntu Server and require that you run commands on a local or remote command line session on the machine.","title":"1. Prepare your environment"},{"location":"chart/infrastructure/microk8s-quickstart/#2-installing-microk8s","text":"Install MicroK8s on the machine: Make sure that the package nfs-common is installed: sudo apt update && sudo apt install nfs-common -y Install MicroK8s from the 1.16/stable channel: sudo snap install microk8s --classic --channel = 1 .16/stable sudo usermod -a -G microk8s $USER sudo su - $USER Check that MicroK8s is running: microk8s.status --wait-ready","title":"2. Installing MicroK8s"},{"location":"chart/infrastructure/microk8s-quickstart/#3-configuring-microk8s","text":"Now that MicroK8s is running on the machine we can proceed to enabling the necessary addons: Configure MicroK8s to allow privileged containers: sudo mkdir -p /var/snap/microk8s/current/args sudo echo \"--allow-privileged=true\" >> /var/snap/microk8s/current/args/kube-apiserver microk8s.status --wait-ready Enable the following MicroK8s addons: microk8s.enable dns microk8s.status --wait-ready microk8s.enable storage microk8s.status --wait-ready microk8s.enable ingress microk8s.status --wait-ready Important Check the output of the commands to make sure that all the addons are enabled correctly. If by chance any of the addons fails to be enabled, re-execute the microk8s.enable command for that addon. Restart MicroK8s and its services to make sure that all configurations are working: microk8s.stop microk8s.start microk8s.status --wait-ready Export your kubeconfig so that Helm knows on which cluster to install the charts: microk8s.config > ~/.kube/config The addons are now enabled and the MicroK8s instance bootstrapped. However, we must wait for some MicroK8s pods to be ready, as failing to do so can result in the pods entering a CrashLoopBackoff state: microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = kube-dns microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = hostpath-provisioner # If the following command fails, you probably installed the wrong MicroK8s version microk8s.kubectl wait --all-namespaces --for = condition = Ready pod -l name = nginx-ingress-microk8s Verify that the MicroK8s configuration was successful: microk8s.status --wait-ready The output of the command should be the following: microk8s is running addons: knative: disabled jaeger: disabled fluentd: disabled gpu: disabled cilium: disabled storage: enabled registry: disabled rbac: disabled ingress: enabled dns: enabled metrics-server: disabled linkerd: disabled prometheus: disabled istio: disabled dashboard: disabled After these steps you have ensured that DNS, HTTP, and NGINX Ingress are enabled and working properly inside the MicroK8s instance.","title":"3. Configuring MicroK8s"},{"location":"chart/infrastructure/microk8s-quickstart/#notes-on-installing-codacy","text":"You can now follow the generic Codacy installation instructions but please note the following: You must execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, we suggest that you create an alias so that you can run the commands directly as provided on the instructions: alias kubectl = microk8s.kubectl When running the helm upgrade command that installs the Codacy chart, you will be instructed to also use the file values-microk8s.yaml that downsizes some component limits, making it easier to fit Codacy in the lightweight MicroK8s solution.","title":"Notes on installing Codacy"},{"location":"chart/maintenance/database/","text":"Database migration guide \u00b6 Migrating databases between pods is a straightforward process with 3 steps: Dump the databases to a dump file. Apply the dump file. Delete the dump file. You will have to dump all the following databases: accounts analysis filestore jobs metrics results Requirements \u00b6 The following operations must be executed by a user which has elevated access ( SUPERUSER ) in the Postgres databases. Dumping your current data out of a running Postgres \u00b6 You will need to know the following: $HOSTNAME - the hostname where the database is located. $DB_USER - the username with privileged access to the database that will perform the dump. $DB - the database that you would like to export. $DB_PASSWORD - the database password. pg_dump \u00b6 The following command lets you extract a given database into a dump file: PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump This will dump the file with the .dump extension into the /tmp folder. For more information and additional options, please check the official documentation. pg_restore \u00b6 To restore a database, you can run a pg_restore command to consume the dump file and replicate the data onto Postgres: PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -j 8 -d $db -n public --clean $db .dump With the custom format from pg_dump (by using -Fc ) we can now invoke pg_restore with multiple parallel jobs. This should make the restoration of the databases quicker, depending on which value you provide for the number of parallel jobs to execute. We provide a value of 8 parallel jobs in the example above ( -j 8 ). NOTE: If you run into any problems while restoring, make sure that you have the database created in that postgres instance (e.g. before restoring the jobs database the postgres instance should have an empty database called jobs created there) For more information and additional options, please check the official documentation. Sample script \u00b6 Assuming you have the same $DB_USER and $DB_PASSWORD , and that you want to migrate all the databases from the same hostname to the same destination hostname, you could easily migrate your databases with the following sample script: SRC_HOSTNAME = $1 SRC_HOSTPORT = $2 DEST_HOSTNAME = $3 DEST_HOSTPORT = $4 DB_USER = $5 DB_PASSWORD = $6 declare -a dbs =( accounts analysis filestore jobs metrics results ) for db in ${ dbs [@] } do PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -d $db -n public --clean $db .dump done You could simply invoke it with: migrateDBs.sh postgres\u2013instance1.us-east-1.rds.amazonaws.com 25060 postgres\u2013instance1.eu-west-1.rds.amazonaws.com 25060 super_user secret_password","title":"Database migration guide"},{"location":"chart/maintenance/database/#database-migration-guide","text":"Migrating databases between pods is a straightforward process with 3 steps: Dump the databases to a dump file. Apply the dump file. Delete the dump file. You will have to dump all the following databases: accounts analysis filestore jobs metrics results","title":"Database migration guide"},{"location":"chart/maintenance/database/#requirements","text":"The following operations must be executed by a user which has elevated access ( SUPERUSER ) in the Postgres databases.","title":"Requirements"},{"location":"chart/maintenance/database/#dumping-your-current-data-out-of-a-running-postgres","text":"You will need to know the following: $HOSTNAME - the hostname where the database is located. $DB_USER - the username with privileged access to the database that will perform the dump. $DB - the database that you would like to export. $DB_PASSWORD - the database password.","title":"Dumping your current data out of a running Postgres"},{"location":"chart/maintenance/database/#sample-script","text":"Assuming you have the same $DB_USER and $DB_PASSWORD , and that you want to migrate all the databases from the same hostname to the same destination hostname, you could easily migrate your databases with the following sample script: SRC_HOSTNAME = $1 SRC_HOSTPORT = $2 DEST_HOSTNAME = $3 DEST_HOSTPORT = $4 DB_USER = $5 DB_PASSWORD = $6 declare -a dbs =( accounts analysis filestore jobs metrics results ) for db in ${ dbs [@] } do PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -d $db -n public --clean $db .dump done You could simply invoke it with: migrateDBs.sh postgres\u2013instance1.us-east-1.rds.amazonaws.com 25060 postgres\u2013instance1.eu-west-1.rds.amazonaws.com 25060 super_user secret_password","title":"Sample script"},{"location":"chart/maintenance/license/","text":"Updating your Codacy license \u00b6 Some changes to your Codacy plan require that you update your Codacy license with a new one provided by a Codacy representative: Edit the value of codacy-api.config.license in the values-production.yaml file that you used to install Codacy: codacy-api : config : license : <--- insert your Codacy license here ---> Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Updating your Codacy license"},{"location":"chart/maintenance/license/#updating-your-codacy-license","text":"Some changes to your Codacy plan require that you update your Codacy license with a new one provided by a Codacy representative: Edit the value of codacy-api.config.license in the values-production.yaml file that you used to install Codacy: codacy-api : config : license : <--- insert your Codacy license here ---> Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 3 .4.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Updating your Codacy license"},{"location":"chart/maintenance/uninstall/","text":"Uninstalling Codacy \u00b6 To ensure a clean removal you should uninstall Codacy before destroying the cluster. To do so run: helm -n codacy uninstall codacy kubectl -n codacy delete --all pod & kubectl -n codacy delete --all pvc & kubectl -n codacy delete --all job & sleep 5 kubectl -n codacy patch pvc -p '{\"metadata\":{\"finalizers\":null}}' $( kubectl -n codacy get pvc -o jsonpath = '{.items[*].metadata.name}' ) sleep 5 kubectl -n codacy delete pod $( kubectl -n codacy get pod -o jsonpath = '{.items[*].metadata.name}' ) --force --grace-period = 0 kubectl -n codacy get pod & kubectl -n codacy get pvc & kubectl -n codacy get job & Note that the deletion of pvc s in the above command has to run in the background due to a cyclic dependency in one of the components. If you are unsure of the effects of these commands please run each of the bash subcommands and validate their output. echo \"PVCs to delete:\" kubectl get pvc -n codacy -o jsonpath = '{.items[*].metadata.name}' echo \"PODS to delete:\" kubectl get pods -n codacy -o jsonpath = '{.items[*].metadata.name}'","title":"Uninstalling Codacy"},{"location":"chart/maintenance/uninstall/#uninstalling-codacy","text":"To ensure a clean removal you should uninstall Codacy before destroying the cluster. To do so run: helm -n codacy uninstall codacy kubectl -n codacy delete --all pod & kubectl -n codacy delete --all pvc & kubectl -n codacy delete --all job & sleep 5 kubectl -n codacy patch pvc -p '{\"metadata\":{\"finalizers\":null}}' $( kubectl -n codacy get pvc -o jsonpath = '{.items[*].metadata.name}' ) sleep 5 kubectl -n codacy delete pod $( kubectl -n codacy get pod -o jsonpath = '{.items[*].metadata.name}' ) --force --grace-period = 0 kubectl -n codacy get pod & kubectl -n codacy get pvc & kubectl -n codacy get job & Note that the deletion of pvc s in the above command has to run in the background due to a cyclic dependency in one of the components. If you are unsure of the effects of these commands please run each of the bash subcommands and validate their output. echo \"PVCs to delete:\" kubectl get pvc -n codacy -o jsonpath = '{.items[*].metadata.name}' echo \"PODS to delete:\" kubectl get pods -n codacy -o jsonpath = '{.items[*].metadata.name}'","title":"Uninstalling Codacy"},{"location":"chart/maintenance/upgrade/","text":"Upgrading Codacy \u00b6 To upgrade Codacy to the latest stable version: Check the release notes for all Codacy Self-hosted versions between your current version and the most recent version for breaking changes and follow the instructions provided carefully. Warning Failing to follow the steps to deal with breaking changes can cause the upgrade to fail or cause problems while Codacy is running. Tip To see the version of your Codacy Self-hosted instance click your avatar on the top right-hand corner of any Codacy page: Store all your currently defined configuration values in a file: helm get values codacy \\ --namespace codacy \\ --output yaml > codacy.yaml Note If you installed Codacy on a Kubernetes namespace different from codacy , make sure that you adjust the namespace when executing the commands in this page. Review the values stored in the file codacy.yaml , making any changes if necessary. Perform the upgrade using the values stored in the file: helm upgrade codacy codacy-stable/codacy \\ --namespace codacy \\ --values codacy.yaml","title":"Upgrading Codacy"},{"location":"chart/maintenance/upgrade/#upgrading-codacy","text":"To upgrade Codacy to the latest stable version: Check the release notes for all Codacy Self-hosted versions between your current version and the most recent version for breaking changes and follow the instructions provided carefully. Warning Failing to follow the steps to deal with breaking changes can cause the upgrade to fail or cause problems while Codacy is running. Tip To see the version of your Codacy Self-hosted instance click your avatar on the top right-hand corner of any Codacy page: Store all your currently defined configuration values in a file: helm get values codacy \\ --namespace codacy \\ --output yaml > codacy.yaml Note If you installed Codacy on a Kubernetes namespace different from codacy , make sure that you adjust the namespace when executing the commands in this page. Review the values stored in the file codacy.yaml , making any changes if necessary. Perform the upgrade using the values stored in the file: helm upgrade codacy codacy-stable/codacy \\ --namespace codacy \\ --values codacy.yaml","title":"Upgrading Codacy"},{"location":"chart/troubleshoot/k8s-cheatsheet/","text":"Kubernetes cheatsheet \u00b6 Debugging using events \u00b6 Important Always check the pods and deployment versions in the namespace to make sure you are not debugging an issue in a version that is not the one you would expect Events are a great way to understand what is going on under the hood in a Kubernetes cluster. By looking at them you can see if probes are failing, and other important signals from your cluster. Get events for the whole namespace: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp Get error events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Error Get warning events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Warning Get events from a specific pod: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector involvedObject.name = <POD-NAME> Helm \u00b6 Check all the previous releases in your namespace: helm -n codacy history codacy Rollback to a specific revision: helm -n codacy rollback codacy <REVISION> Edit configmap \u00b6 kubectl get configmaps and kubectl edit configmap <configmap-name> Restart deployment of daemonset \u00b6 daemonsets \u00b6 kubectl get daemonsets and kubectl rollout restart daemonset/<daemonset-name> deployment \u00b6 kubectl get deployment and kubectl rollout restart deployment/<deployment-name> and kubectl rollout status deployment/<deployment-name> -w Read logs \u00b6 daemonset with multiple containers \u00b6 kubectl logs daemonset/<daemonset-name> <container-name> -f service \u00b6 kubectl get svc and kubectl logs -l $( kubectl get svc/<service-name> -o = json | jq \".spec.selector\" | jq -r 'to_entries|map(\"\\(.key)=\\(.value|tostring)\")|.[]' | sed -e 'H;${x;s/\\n/,/g;s/^,//;p;};d' ) -f Open shell inside container \u00b6 kubectl exec -it daemonset/<daemonset-name> -c <container-name> sh or kubectl exec -it deployment/<deployment-name> sh MicroK8s \u00b6 Session Manager SSH \u00b6 When using AWS Session Manager, to connect to the instance where you installed microk8s, since the CLI is very limited you will benefit from using these aliases: alias kubectl = 'sudo microk8s.kubectl -n <namespace-name>' alias helm = 'sudo helm'","title":"Kubernetes cheatsheet"},{"location":"chart/troubleshoot/k8s-cheatsheet/#kubernetes-cheatsheet","text":"","title":"Kubernetes cheatsheet"},{"location":"chart/troubleshoot/k8s-cheatsheet/#debugging-using-events","text":"Important Always check the pods and deployment versions in the namespace to make sure you are not debugging an issue in a version that is not the one you would expect Events are a great way to understand what is going on under the hood in a Kubernetes cluster. By looking at them you can see if probes are failing, and other important signals from your cluster. Get events for the whole namespace: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp Get error events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Error Get warning events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Warning Get events from a specific pod: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector involvedObject.name = <POD-NAME>","title":"Debugging using events"},{"location":"chart/troubleshoot/k8s-cheatsheet/#helm","text":"Check all the previous releases in your namespace: helm -n codacy history codacy Rollback to a specific revision: helm -n codacy rollback codacy <REVISION>","title":"Helm"},{"location":"chart/troubleshoot/k8s-cheatsheet/#edit-configmap","text":"kubectl get configmaps and kubectl edit configmap <configmap-name>","title":"Edit configmap"},{"location":"chart/troubleshoot/k8s-cheatsheet/#restart-deployment-of-daemonset","text":"","title":"Restart deployment of daemonset"},{"location":"chart/troubleshoot/k8s-cheatsheet/#read-logs","text":"","title":"Read logs"},{"location":"chart/troubleshoot/k8s-cheatsheet/#open-shell-inside-container","text":"kubectl exec -it daemonset/<daemonset-name> -c <container-name> sh or kubectl exec -it deployment/<deployment-name> sh","title":"Open shell inside container"},{"location":"chart/troubleshoot/k8s-cheatsheet/#microk8s","text":"","title":"MicroK8s"},{"location":"chart/troubleshoot/logs-collect/","text":"Collecting logs for Support \u00b6 To help troubleshoot issues, obtain the logs from your Codacy instance and send them to Codacy's Support: Run the following command on a machine with network access to the Codacy cluster, replacing <namespace> with the namespace in which Codacy was installed: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> This will download the logs of the last 7 days as an archive file with the name codacy_logs_<timestamp>.zip . Tip You can also download the script extract-codacy-logs.sh to run it manually. Send the compressed logs to Codacy's support team at support@codacy.com for analysis. Note If the file is too big, please upload the file to either a cloud storage service such as Google Drive or to a file transfer service such as WeTransfer and send us the link to the file instead. Alternatively, to reduce the size of the compressed archive file, retrieve logs for a smaller number of days by replacing <days> with a number between 1 and 7: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> -d <days>","title":"Collecting logs for Support"},{"location":"chart/troubleshoot/logs-collect/#collecting-logs-for-support","text":"To help troubleshoot issues, obtain the logs from your Codacy instance and send them to Codacy's Support: Run the following command on a machine with network access to the Codacy cluster, replacing <namespace> with the namespace in which Codacy was installed: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> This will download the logs of the last 7 days as an archive file with the name codacy_logs_<timestamp>.zip . Tip You can also download the script extract-codacy-logs.sh to run it manually. Send the compressed logs to Codacy's support team at support@codacy.com for analysis. Note If the file is too big, please upload the file to either a cloud storage service such as Google Drive or to a file transfer service such as WeTransfer and send us the link to the file instead. Alternatively, to reduce the size of the compressed archive file, retrieve logs for a smaller number of days by replacing <days> with a number between 1 and 7: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> -d <days>","title":"Collecting logs for Support"},{"location":"chart/troubleshoot/troubleshoot/","text":"Troubleshooting Codacy \u00b6 This page includes information to help you troubleshoot issues that you may come across while installing, configuring, and operating Codacy. If the information provided on this page is not enough to solve your issue, contact support@codacy.com providing: The description of the issue All the information that you were able to obtain while following these troubleshooting instructions The collected logs of your Codacy instance The version of your Codacy instance Tip To see the version of your Codacy Self-hosted instance click your avatar on the top right-hand corner of any Codacy page: Git provider integrations \u00b6 The following sections help you troubleshoot the integration of Codacy with your Git provider. GitHub Cloud and GitHub Enterprise authentication \u00b6 404 error \u00b6 While trying to authenticate on GitHub you get the following error message: This might mean that there is a mismatch in the Client ID that Codacy is using to authenticate on GitHub. To solve this issue: Make sure that the value of clientId in your values-production.yaml file is the same as the Client ID of the GitHub App that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for GitHub Cloud or GitHub Enterprise If the error persists: Take note of the parameter client_id in the URL of the GitHub error page (for example, Iv1.0000000000000000 ) Check if the value of the parameter matches the value of the Client ID of your GitHub App GitLab Cloud and GitLab Enterprise authentication \u00b6 Invalid redirect URI \u00b6 While trying to authenticate on GitLab you get the following error message: This might mean that the redirect URIs are not correct in the GitLab application that Codacy is using to authenticate on GitLab. To solve this issue: Open the GitLab application that you created on GitLab Cloud or GitLab Enterprise Make sure that all the redirect URIs have the correct protocol for the Codacy instance endpoints, either http:// or https:// Make sure that all the redirect URIs have the full path with the correct case, since the field is case-sensitive If the error persists: Take note of the parameter redirect_uri in the URL of the GitLab error page (for example, https%3A%2F%2Fcodacy.example.com%2Flogin%2FGitLab or https%3A%2F%2Fcodacy.example.com%2Flogin%2FGitLabEnterprise ) Decode the value of the parameter using a tool such as urldecoder.com (for example, https://codacy.example.com/login/GitLab or https://codacy.example.com/login/GitLabEnterprise ) Check if the decoded value matches one of the redirect URIs of your GitLab application Unknown client \u00b6 While trying to authenticate on GitLab you get the following error message: This might mean that there is a mismatch in the Application ID that Codacy is using to authenticate on GitLab. To solve this issue: Make sure that the value of clientId in your values-production.yaml file is the same as the Application ID of the GitLab Cloud or GitLab Enterprise application that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for GitLab Cloud or GitLab Enterprise If the error persists: Take note of the parameter client_id in the URL of the GitLab error page (for example, cca35a2a1f9b9b516ac927d82947bd5149b0e57e922c9e5564ac092ea16a3ccd ) Check if the value of the parameter matches the value of the Application ID of your GitLab application Bitbucket Cloud authentication \u00b6 Invalid client_id \u00b6 While trying to authenticate on Bitbucket Cloud you get the following error message: This might mean that there is a mismatch in the OAuth consumer Client ID that Codacy is using to authenticate on Bitbucket Cloud. To solve this issue: Make sure that the value of key in your values-production.yaml file is the same as the Key of the Bitbucket OAuth consumer that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for Bitbucket Cloud If the error persists: Take note of the parameter client_id in the URL of the Bitbucket Cloud error page (for example, r8QJDkkxj8unYfg4Bd ) Check if the value of the parameter matches the value of the Client ID of your Bitbucket OAuth consumer Codacy configuration \u00b6 The following sections help you troubleshoot the Codacy configuration. Accessing the RabbitMQ dashboard \u00b6 We use RabbitMQ for the internal message queue between our components. If you need to access the RabbitMQ dashboard: Create a port-forward from the rabbitmq pod to your local machine, replacing <namespace> with the namespace in which Codacy was installed: kubectl port-forward codacy-rabbitmq-ha-0 15672 :15672 --namespace = <namespace> Important If you are using MicroK8s use microk8s.kubectl instead of kubectl . Access the RabbitMQ dashboard on the address localhost:15672 , and log in with the configured RabbitMQ credentials. The default RabbitMQ credentials are the following: Username: rabbitmq-codacy Password: rabbitmq-codacy","title":"Troubleshooting Codacy"},{"location":"chart/troubleshoot/troubleshoot/#troubleshooting-codacy","text":"This page includes information to help you troubleshoot issues that you may come across while installing, configuring, and operating Codacy. If the information provided on this page is not enough to solve your issue, contact support@codacy.com providing: The description of the issue All the information that you were able to obtain while following these troubleshooting instructions The collected logs of your Codacy instance The version of your Codacy instance Tip To see the version of your Codacy Self-hosted instance click your avatar on the top right-hand corner of any Codacy page:","title":"Troubleshooting Codacy"},{"location":"chart/troubleshoot/troubleshoot/#git-provider-integrations","text":"The following sections help you troubleshoot the integration of Codacy with your Git provider.","title":"Git provider integrations"},{"location":"chart/troubleshoot/troubleshoot/#codacy-configuration","text":"The following sections help you troubleshoot the Codacy configuration.","title":"Codacy configuration"},{"location":"coverage-reporter/","text":"Adding coverage to your repository \u00b6 Code coverage is a metric used to describe the degree to which the source code of a program is tested. A program with high code coverage has been more thoroughly tested and has a lower chance of containing software bugs than a program with low code coverage. You can read more about the basics of code coverage on our blog. To set up coverage on Codacy you must complete these main steps: Generating coverage reports Ensure that you're generating one of the test coverage report formats supported by Codacy on each push to your repository. Uploading coverage data to Codacy After each push to your repository, run the Codacy Coverage Reporter to parse your report file and upload the coverage data to Codacy. The next sections include detailed instructions on how to complete each step of the setup process. 1. Generating coverage reports \u00b6 Before setting up Codacy to display code coverage metrics for your repository you must have tests and use tools to generate coverage reports for the languages in your repositories. There are many tools that you can use to generate coverage reports for the languages used in your repositories. The following table contains example coverage tools that generate reports in formats that Codacy supports: Language Example coverage tools Report files C# OpenCover opencover.xml (OpenCover) dotCover CLI dotcover.xml (dotCover detailedXML ) Java JaCoCo jacoco*.xml (JaCoCo) Cobertura cobertura.xml (Cobertura) JavaScript Istanbul Poncho Mocha + Blanket.js lcov.info , lcov.dat , *.lcov (LCOV) PHP PHPUnit coverage-xml/index.xml (PHPUnit XML version <= 4) clover.xml (Clover) Python Coverage.py cobertura.xml (Cobertura) Ruby SimpleCov cobertura.xml (Cobertura) lcov.info , lcov.dat , *.lcov (LCOV) Scala sbt-jacoco jacoco*.xml (JaCoCo) scoverage cobertura.xml (Cobertura) Swift/Objective-C Xcode Code Coverage See below how to generate coverage reports with Xcode Tip To use Swift and Objective-C with Xcode coverage reports, use Slather to convert the Xcode output into the Cobertura format. To do this, execute the following commands on the CI: gem install slather slather coverage -x --output-directory <report-output-dir> --scheme <project-name> <project-name>.xcodeproj This will generate a file cobertura.xml inside the folder <report-output-dir> . Note If you're generating a report format that Codacy does not support yet, see submitting coverage from unsupported report formats . 2. Uploading coverage data to Codacy \u00b6 After having coverage reports set up for your repository, you must use Codacy Coverage Reporter to convert the reports to smaller JSON files and upload these files to Codacy. The recommended way to do this is using a CI/CD platform that automatically runs tests, generates coverage, and uses Codacy Coverage Reporter to upload the coverage report information for every push to your repository. Set up an API token to allow Codacy Coverage Reporter to authenticate on Codacy. Obtain the project API Token from the page Integrations in your Codacy repository settings. Then, set the following environment variable to specify your project API Token: export CODACY_PROJECT_TOKEN = <your project API Token> Warning Never write API Tokens on your configuration files and keep your API Tokens well protected, as they grant owner permissions to your Codacy repositories. We recommend that you set the API Tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Run Codacy Coverage Reporter on the root of the locally checked out branch of your Git repository , specifying the relative path to the coverage report to upload. For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -r report.xml Tip The recommended self-contained script automatically downloads and runs the most recent version of Codacy Coverage Reporter. See alternative ways of running Codacy Coverage Reporter for other ways of running Codacy Coverage Reporter, such as by installing the binary manually or using a GitHub Action or CircleCI Orb. Optionally, add a Codacy badge to the README of your repository to display the current code coverage. See the sections below for more advanced functionality, or check the troubleshooting page if you found an issue during the setup process. Uploading multiple coverage reports for the same language \u00b6 If your test suite is split on different modules or runs in parallel, you will need to upload multiple coverage reports for the same language. To do this, specify multiple reports by repeating the flag -r . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -l Java -r report1.xml -r report2.xml -r report3.xml You can also upload all your reports dynamically using the command find . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -l Java $( find **/jacoco*.xml -printf '-r %p ' ) Note Altenatively, you can upload each report separately with the flag --partial and notify Codacy with the final command after uploading all reports. For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ --partial -l Java -r report1.xml bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ --partial -l Java -r report2.xml bash < ( curl -Ls https://coverage.codacy.com/get.sh ) final If you're sending reports for a language with the flag --partial , you should use the flag in all reports for that language to ensure the correct calculation of the coverage. Tip It might also be possible to merge the reports before uploading them to Codacy, since most coverage tools support merge/aggregation. For example, http://www.eclemma.org/jacoco/trunk/doc/merge-mojo.html . Commit SHA hash detection \u00b6 The Codacy Coverage Reporter automatically detects the commit SHA hash to associate with the coverage data from the following CI/CD platforms: Appveyor Azure Pipelines Bitrise Buildkite Circle CI Codefresh Codeship Docker GitLab Greenhouse CI Heroku CI Jenkins Magnum CI Semaphore CI Shippable CI Solano CI TeamCity CI Travis CI Wercker CI If the Codacy Coverage Reporter fails to detect the current commit from the CI workflow context, it will use the current commit from the local Git repository instead. However, you can also force using a specific commit SHA hash with the flag --commit-uuid . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -r report.xml \\ --commit-uuid cd4d000083a744cf1617d46af4ec108b79e06bed","title":"Adding coverage to your repository"},{"location":"coverage-reporter/#adding-coverage-to-your-repository","text":"Code coverage is a metric used to describe the degree to which the source code of a program is tested. A program with high code coverage has been more thoroughly tested and has a lower chance of containing software bugs than a program with low code coverage. You can read more about the basics of code coverage on our blog. To set up coverage on Codacy you must complete these main steps: Generating coverage reports Ensure that you're generating one of the test coverage report formats supported by Codacy on each push to your repository. Uploading coverage data to Codacy After each push to your repository, run the Codacy Coverage Reporter to parse your report file and upload the coverage data to Codacy. The next sections include detailed instructions on how to complete each step of the setup process.","title":"Adding coverage to your repository"},{"location":"coverage-reporter/#generating-coverage","text":"Before setting up Codacy to display code coverage metrics for your repository you must have tests and use tools to generate coverage reports for the languages in your repositories. There are many tools that you can use to generate coverage reports for the languages used in your repositories. The following table contains example coverage tools that generate reports in formats that Codacy supports: Language Example coverage tools Report files C# OpenCover opencover.xml (OpenCover) dotCover CLI dotcover.xml (dotCover detailedXML ) Java JaCoCo jacoco*.xml (JaCoCo) Cobertura cobertura.xml (Cobertura) JavaScript Istanbul Poncho Mocha + Blanket.js lcov.info , lcov.dat , *.lcov (LCOV) PHP PHPUnit coverage-xml/index.xml (PHPUnit XML version <= 4) clover.xml (Clover) Python Coverage.py cobertura.xml (Cobertura) Ruby SimpleCov cobertura.xml (Cobertura) lcov.info , lcov.dat , *.lcov (LCOV) Scala sbt-jacoco jacoco*.xml (JaCoCo) scoverage cobertura.xml (Cobertura) Swift/Objective-C Xcode Code Coverage See below how to generate coverage reports with Xcode Tip To use Swift and Objective-C with Xcode coverage reports, use Slather to convert the Xcode output into the Cobertura format. To do this, execute the following commands on the CI: gem install slather slather coverage -x --output-directory <report-output-dir> --scheme <project-name> <project-name>.xcodeproj This will generate a file cobertura.xml inside the folder <report-output-dir> . Note If you're generating a report format that Codacy does not support yet, see submitting coverage from unsupported report formats .","title":"1. Generating coverage reports"},{"location":"coverage-reporter/#uploading-coverage","text":"After having coverage reports set up for your repository, you must use Codacy Coverage Reporter to convert the reports to smaller JSON files and upload these files to Codacy. The recommended way to do this is using a CI/CD platform that automatically runs tests, generates coverage, and uses Codacy Coverage Reporter to upload the coverage report information for every push to your repository. Set up an API token to allow Codacy Coverage Reporter to authenticate on Codacy. Obtain the project API Token from the page Integrations in your Codacy repository settings. Then, set the following environment variable to specify your project API Token: export CODACY_PROJECT_TOKEN = <your project API Token> Warning Never write API Tokens on your configuration files and keep your API Tokens well protected, as they grant owner permissions to your Codacy repositories. We recommend that you set the API Tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Run Codacy Coverage Reporter on the root of the locally checked out branch of your Git repository , specifying the relative path to the coverage report to upload. For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -r report.xml Tip The recommended self-contained script automatically downloads and runs the most recent version of Codacy Coverage Reporter. See alternative ways of running Codacy Coverage Reporter for other ways of running Codacy Coverage Reporter, such as by installing the binary manually or using a GitHub Action or CircleCI Orb. Optionally, add a Codacy badge to the README of your repository to display the current code coverage. See the sections below for more advanced functionality, or check the troubleshooting page if you found an issue during the setup process.","title":"2. Uploading coverage data to Codacy"},{"location":"coverage-reporter/#multiple-reports","text":"If your test suite is split on different modules or runs in parallel, you will need to upload multiple coverage reports for the same language. To do this, specify multiple reports by repeating the flag -r . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -l Java -r report1.xml -r report2.xml -r report3.xml You can also upload all your reports dynamically using the command find . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -l Java $( find **/jacoco*.xml -printf '-r %p ' ) Note Altenatively, you can upload each report separately with the flag --partial and notify Codacy with the final command after uploading all reports. For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ --partial -l Java -r report1.xml bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ --partial -l Java -r report2.xml bash < ( curl -Ls https://coverage.codacy.com/get.sh ) final If you're sending reports for a language with the flag --partial , you should use the flag in all reports for that language to ensure the correct calculation of the coverage. Tip It might also be possible to merge the reports before uploading them to Codacy, since most coverage tools support merge/aggregation. For example, http://www.eclemma.org/jacoco/trunk/doc/merge-mojo.html .","title":"Uploading multiple coverage reports for the same language"},{"location":"coverage-reporter/#commit-detection","text":"The Codacy Coverage Reporter automatically detects the commit SHA hash to associate with the coverage data from the following CI/CD platforms: Appveyor Azure Pipelines Bitrise Buildkite Circle CI Codefresh Codeship Docker GitLab Greenhouse CI Heroku CI Jenkins Magnum CI Semaphore CI Shippable CI Solano CI TeamCity CI Travis CI Wercker CI If the Codacy Coverage Reporter fails to detect the current commit from the CI workflow context, it will use the current commit from the local Git repository instead. However, you can also force using a specific commit SHA hash with the flag --commit-uuid . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -r report.xml \\ --commit-uuid cd4d000083a744cf1617d46af4ec108b79e06bed","title":"Commit SHA hash detection"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/","text":"Alternative ways of running Coverage Reporter \u00b6 The recommended way to run Codacy Coverage Reporter is using a self-contained script that automatically downloads and runs the most recent version of Codacy Coverage Reporter: On Ubuntu, run: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) On Alpine Linux, run: wget -qO - https://coverage.codacy.com/get.sh | sh The self-contained script can cache the binary. To avoid downloading the binary every time that the script runs, add one of the following directories to your CI cached folders: $HOME/.cache/codacy on Linux $HOME/Library/Caches/Codacy on Mac OS X To use a specific version of the Codacy Coverage Reporter, set the following environment variable to one of the released versions : export CODACY_REPORTER_VERSION = <version> The sections below provide details on alternative ways to run or install Codacy Coverage Reporter. Docker \u00b6 You can use Docker to run Codacy Coverage Reporter: docker run -v $PWD :/code codacy/codacy-coverage-reporter:<version> report Manually downloading the binary \u00b6 Linux amd64 \u00b6 If you prefer, you can manually download and run the native codacy-coverage-reporter binary, either for the latest version or a specific one. You can use the scripts below to automatically check for the latest version of the binaries, download the binaries from either Codacy's public store or GitHub, and run them. Using Codacy's public S3: LATEST_VERSION = \" $( curl -Ls https://artifacts.codacy.com/binaries/codacy-coverage-reporter/latest ) \" curl -Ls -o codacy-coverage-reporter \"https://artifacts.codacy.com/binaries/codacy-coverage-reporter/ ${ LATEST_VERSION } /codacy-coverage-reporter-linux\" chmod +x codacy-coverage-reporter ./codacy-coverage-reporter report Using GitHub: curl -Ls -o codacy-coverage-reporter \" $( curl -Ls https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | contains(\"codacy-coverage-reporter-linux\"))) | .[0].browser_download_url' ) \" chmod +x codacy-coverage-reporter ./codacy-coverage-reporter report Java \u00b6 Use the Java binary to run Codacy Coverage reporter on other platforms, such as Linux x86, macOS, Windows, etc. You can use the scripts below to automatically check for the latest version of the Java binaries, download the binaries from either Codacy's public store or GitHub, and run them. Using Codacy's public store: LATEST_VERSION = \" $( curl -Ls https://artifacts.codacy.com/bin/codacy-coverage-reporter/latest ) \" curl -Ls -o codacy-coverage-reporter-assembly.jar \"https://artifacts.codacy.com/bin/codacy-coverage-reporter/ ${ LATEST_VERSION } /codacy-coverage-reporter-assembly.jar\" java -jar codacy-coverage-reporter-assembly.jar report Using GitHub: curl -LS -o codacy-coverage-reporter-assembly.jar \" $( curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(\".jar\"))) | .[0].browser_download_url' ) \" java -jar codacy-coverage-reporter-assembly.jar report Building from source \u00b6 If you are having any issues with your installation, you can also build the coverage reporter from source. Clone the Codacy Coverage Reporter repository: git clone https://github.com/codacy/codacy-coverage-reporter.git Run the command sbt assembly inside the local repository folder: cd codacy-coverage-reporter sbt assembly This will produce a file target/codacy-coverage-reporter-assembly-<version>.jar that you can run. Execute this .jar in the repository where you want to upload the coverage. For example: <path>/java-project$ java -jar ../codacy-coverage-reporter/target/codacy-coverage-reporter-assembly-<version>.jar report CircleCI orb \u00b6 If you are using CircleCI to report coverage, you can use our orb codacy/coverage-reporter . GitHub Action \u00b6 If you are using GitHub Actions to report coverage, you can use our GitHub Action codacy/codacy-coverage-reporter-action . Community supported alternatives \u00b6 Maven plugin \u00b6 Thanks to the amazing job of Gavin Mogan you can now send your coverage to Codacy using his Maven plugin halkeye/codacy-maven-plugin ! Be sure to follow the instructions on his repository. Travis CI \u00b6 If you are using Travis CI to report coverage, update your file .travis.yml to include the following blocks: before_script : - bash <(curl -Ls https://coverage.codacy.com/get.sh) download after_success : - bash <(curl -Ls https://coverage.codacy.com/get.sh) Make sure that you also set your project API Token as an environment variable in your Travis CI job. Gradle task \u00b6 A big shout-out to Tom Howard , who suggested a way to create a Gradle task . task uploadCoverageToCodacy(type: JavaExec, dependsOn : jacocoTestReport) { main = \"com.codacy.CodacyCoverageReporter\" classpath = configurations.codacy args = [ \"report\", \"-l\", \"Java\", \"-r\", \"${buildDir}/test-results/jacoco/${archivesBaseName}.xml\" ] } task (codacyDepsize) << { def size = 0; configurations.codacy.collect { it.length() / (1024 * 1024) }.each { size += it } println \"Total dependencies size: ${Math.round(size * 100) / 100} Mb\" configurations .codacy .sort { -it.length() } .each { println \"${it.name} : ${Math.round(it.length() / (1024) * 100) / 100} kb\" } } task (codacyLocs) << { configurations.codacy.each { String jarName = it println jarName } } The following Gradle task by Ramil Khamitov was based on the solution above. configurations { codacy } repositories { jcenter() } dependencies { codacy 'com.codacy:codacy-coverage-reporter:latest.release' } task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) { main = \"com.codacy.CodacyCoverageReporter\" classpath = configurations.codacy args = [ \"report\", \"-l\", \"Java\", \"-r\", \"${buildDir}/reports/jacoco/test/jacocoTestReport.xml\" ] }","title":"Alternative ways of running Coverage Reporter"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#alternative-ways-of-running-coverage-reporter","text":"The recommended way to run Codacy Coverage Reporter is using a self-contained script that automatically downloads and runs the most recent version of Codacy Coverage Reporter: On Ubuntu, run: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) On Alpine Linux, run: wget -qO - https://coverage.codacy.com/get.sh | sh The self-contained script can cache the binary. To avoid downloading the binary every time that the script runs, add one of the following directories to your CI cached folders: $HOME/.cache/codacy on Linux $HOME/Library/Caches/Codacy on Mac OS X To use a specific version of the Codacy Coverage Reporter, set the following environment variable to one of the released versions : export CODACY_REPORTER_VERSION = <version> The sections below provide details on alternative ways to run or install Codacy Coverage Reporter.","title":"Alternative ways of running Coverage Reporter"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#docker","text":"You can use Docker to run Codacy Coverage Reporter: docker run -v $PWD :/code codacy/codacy-coverage-reporter:<version> report","title":"Docker"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#manually-downloading-the-binary","text":"","title":"Manually downloading the binary"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#building-from-source","text":"If you are having any issues with your installation, you can also build the coverage reporter from source. Clone the Codacy Coverage Reporter repository: git clone https://github.com/codacy/codacy-coverage-reporter.git Run the command sbt assembly inside the local repository folder: cd codacy-coverage-reporter sbt assembly This will produce a file target/codacy-coverage-reporter-assembly-<version>.jar that you can run. Execute this .jar in the repository where you want to upload the coverage. For example: <path>/java-project$ java -jar ../codacy-coverage-reporter/target/codacy-coverage-reporter-assembly-<version>.jar report","title":"Building from source"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#circleci-orb","text":"If you are using CircleCI to report coverage, you can use our orb codacy/coverage-reporter .","title":"CircleCI orb"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#github-action","text":"If you are using GitHub Actions to report coverage, you can use our GitHub Action codacy/codacy-coverage-reporter-action .","title":"GitHub Action"},{"location":"coverage-reporter/alternative-ways-of-running-coverage-reporter/#community-supported-alternatives","text":"","title":"Community supported alternatives"},{"location":"coverage-reporter/troubleshooting-common-issues/","text":"Troubleshooting common issues \u00b6 The sections below provide instructions or workarounds to overcome common issues while using Codacy Coverage Reporter. Submitting coverage for unsupported languages \u00b6 If your language is not in the list of supported languages, you can still send coverage to Codacy. You can do it by providing the correct language name with the flag -l , together with --force-language . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -l Kotlin --force-language See the list of languages that you can specify using the flag -l . Submitting coverage from unsupported report formats \u00b6 If you are generating a report format that Codacy does not yet support, try using the community projects below or contribute to our codacy/coverage-parser project: danielpalme/ReportGenerator : convert between different report formats dariodf/lcov_ex : generate LCOV reports for Elixir projects t-yuki/gocover-cobertura : generate Cobertura reports from Go cover reports As a workaround, you can also send the coverage data directly by calling the Codacy API endpoint saveCoverage . The following is an example of the JSON payload: { \"total\" : 23 , \"fileReports\" : [ { \"filename\" : \"src/Codacy/Coverage/Parser/CloverParser.php\" , \"total\" : 54 , \"coverage\" : { \"3\" : 3 , \"5\" : 0 , \"7\" : 1 } } ] } Note that all \"coverable\" lines should be present on the coverage node of the JSON payload. In the example you can see \"5\": 0 , meaning that line 5 is not covered. Can't guess any report due to no matching \u00b6 Codacy Coverage Reporter automatically searches for coverage reports matching the file name conventions for supported formats . However, if Codacy Coverage Reporter does not find your coverage report, you can explicitly define the report file name with the flag -r . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -r <my report> Report generated an empty result while uploading C# coverage data \u00b6 If you are using dotCover to generate coverage reports for your C# projects, you must use the dotCover detailedXML report format as follows: dotCover.exe cover ... --reportType = DetailedXml JsonParseException while uploading C# coverage data \u00b6 If you are using dotCover to generate coverage reports for your C# projects, you should exclude xUnit files from the coverage analysis as follows: dotCover.exe cover ... /Filters = -:xunit* By default, dotCover includes xUnit files in the coverage analysis and this results in larger coverage reports. This filter helps ensure that the resulting coverage data does not exceed the size limit accepted by the Codacy API when uploading the results. MalformedInputException while parsing report \u00b6 If you get a java.nio.charset.MalformedInputException when running the Codacy Coverage Reporter it means that the coverage report includes an unsupported character, perhaps on one of your source code file names. For maximum compatibility of your coverage reports with the Codacy Coverage Reporter, make sure that your coverage reports use UTF-8 encoding or remove any special characters from the reports. SubstrateSegfaultHandler caught signal 11 \u00b6 If you are experiencing segmentation faults when uploading the coverage results due to oracle/graal#624 , execute the following command before running the reporter, as a workaround: echo \" $( dig +short api.codacy.com | tail -n1 ) api.codacy.com\" >> /etc/hosts coverage-xml/index.xml generated an empty result \u00b6 If you are using PHPUnit version 5 or above to generate your coverage report, you must output the report using the Clover format. Codacy Coverage Reporter supports the PHPUnit XML format only for versions 4 and older. To change the output format replace the flag --coverage-xml <dir> with --coverage-clover <file> when executing phpunit . See PHPUnit command-line documentation for more information.","title":"Troubleshooting common issues"},{"location":"coverage-reporter/troubleshooting-common-issues/#troubleshooting-common-issues","text":"The sections below provide instructions or workarounds to overcome common issues while using Codacy Coverage Reporter.","title":"Troubleshooting common issues"},{"location":"coverage-reporter/troubleshooting-common-issues/#submitting-coverage-for-unsupported-languages","text":"If your language is not in the list of supported languages, you can still send coverage to Codacy. You can do it by providing the correct language name with the flag -l , together with --force-language . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -l Kotlin --force-language See the list of languages that you can specify using the flag -l .","title":"Submitting coverage for unsupported languages"},{"location":"coverage-reporter/troubleshooting-common-issues/#unsupported-report-formats","text":"If you are generating a report format that Codacy does not yet support, try using the community projects below or contribute to our codacy/coverage-parser project: danielpalme/ReportGenerator : convert between different report formats dariodf/lcov_ex : generate LCOV reports for Elixir projects t-yuki/gocover-cobertura : generate Cobertura reports from Go cover reports As a workaround, you can also send the coverage data directly by calling the Codacy API endpoint saveCoverage . The following is an example of the JSON payload: { \"total\" : 23 , \"fileReports\" : [ { \"filename\" : \"src/Codacy/Coverage/Parser/CloverParser.php\" , \"total\" : 54 , \"coverage\" : { \"3\" : 3 , \"5\" : 0 , \"7\" : 1 } } ] } Note that all \"coverable\" lines should be present on the coverage node of the JSON payload. In the example you can see \"5\": 0 , meaning that line 5 is not covered.","title":"Submitting coverage from unsupported report formats"},{"location":"coverage-reporter/troubleshooting-common-issues/#cant-guess-any-report-due-to-no-matching","text":"Codacy Coverage Reporter automatically searches for coverage reports matching the file name conventions for supported formats . However, if Codacy Coverage Reporter does not find your coverage report, you can explicitly define the report file name with the flag -r . For example: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report \\ -r <my report>","title":"Can't guess any report due to no matching"},{"location":"coverage-reporter/troubleshooting-common-issues/#detailedxml","text":"If you are using dotCover to generate coverage reports for your C# projects, you must use the dotCover detailedXML report format as follows: dotCover.exe cover ... --reportType = DetailedXml","title":"Report generated an empty result while uploading C# coverage data"},{"location":"coverage-reporter/troubleshooting-common-issues/#jsonparseexception-while-uploading-c-coverage-data","text":"If you are using dotCover to generate coverage reports for your C# projects, you should exclude xUnit files from the coverage analysis as follows: dotCover.exe cover ... /Filters = -:xunit* By default, dotCover includes xUnit files in the coverage analysis and this results in larger coverage reports. This filter helps ensure that the resulting coverage data does not exceed the size limit accepted by the Codacy API when uploading the results.","title":"JsonParseException while uploading C# coverage data"},{"location":"coverage-reporter/troubleshooting-common-issues/#malformedinputexception-while-parsing-report","text":"If you get a java.nio.charset.MalformedInputException when running the Codacy Coverage Reporter it means that the coverage report includes an unsupported character, perhaps on one of your source code file names. For maximum compatibility of your coverage reports with the Codacy Coverage Reporter, make sure that your coverage reports use UTF-8 encoding or remove any special characters from the reports.","title":"MalformedInputException while parsing report"},{"location":"coverage-reporter/troubleshooting-common-issues/#substratesegfaulthandler-caught-signal-11","text":"If you are experiencing segmentation faults when uploading the coverage results due to oracle/graal#624 , execute the following command before running the reporter, as a workaround: echo \" $( dig +short api.codacy.com | tail -n1 ) api.codacy.com\" >> /etc/hosts","title":"SubstrateSegfaultHandler caught signal 11"},{"location":"coverage-reporter/troubleshooting-common-issues/#coverage-xmlindexxml-generated-an-empty-result","text":"If you are using PHPUnit version 5 or above to generate your coverage report, you must output the report using the Clover format. Codacy Coverage Reporter supports the PHPUnit XML format only for versions 4 and older. To change the output format replace the flag --coverage-xml <dir> with --coverage-clover <file> when executing phpunit . See PHPUnit command-line documentation for more information.","title":"coverage-xml/index.xml generated an empty result"},{"location":"faq/code-analysis/do-you-check-for-dependencies/","text":"Do you check for dependencies? \u00b6 We don't check for dependencies. We do static code analysis on the source code, and that allows us to check code style, security duplication, complexity, and coverage. To learn more on how to extend analysis on your repositories, see our supported languages and tools .","title":"Do you check for dependencies?"},{"location":"faq/code-analysis/do-you-check-for-dependencies/#do-you-check-for-dependencies","text":"We don't check for dependencies. We do static code analysis on the source code, and that allows us to check code style, security duplication, complexity, and coverage. To learn more on how to extend analysis on your repositories, see our supported languages and tools .","title":"Do you check for dependencies?"},{"location":"faq/code-analysis/how-does-codacy-measure-complexity-in-my-repository/","text":"How does Codacy measure complexity in my repository? \u00b6 Codacy uses cyclomatic complexity to identify complex files in your repository. Cyclomatic complexity is a software metric used to indicate the complexity of a program. It's a quantitative measure of the number of linearly independent paths through a program's source code. A complex file is a file with a complexity value bigger than the threshold defined on the repository quality settings . Code complexity is calculated based on the maximum number of complex methods in a file. In your Repository Dashboard you can see how complexity is evolving for your repository.","title":"How does Codacy measure complexity in my repository?"},{"location":"faq/code-analysis/how-does-codacy-measure-complexity-in-my-repository/#how-does-codacy-measure-complexity-in-my-repository","text":"Codacy uses cyclomatic complexity to identify complex files in your repository. Cyclomatic complexity is a software metric used to indicate the complexity of a program. It's a quantitative measure of the number of linearly independent paths through a program's source code. A complex file is a file with a complexity value bigger than the threshold defined on the repository quality settings . Code complexity is calculated based on the maximum number of complex methods in a file. In your Repository Dashboard you can see how complexity is evolving for your repository.","title":"How does Codacy measure complexity in my repository?"},{"location":"faq/code-analysis/how-long-does-it-take-for-my-repository-to-be-analyzed/","text":"How long does it take for my repository to be analyzed? \u00b6 Usually under 5 minutes, however it may take longer as this depends on the size of your repository. If your analysis is taking a lot of time, you can manually force a repository update .","title":"How long does it take for my repository to be analyzed?"},{"location":"faq/code-analysis/how-long-does-it-take-for-my-repository-to-be-analyzed/#how-long-does-it-take-for-my-repository-to-be-analyzed","text":"Usually under 5 minutes, however it may take longer as this depends on the size of your repository. If your analysis is taking a lot of time, you can manually force a repository update .","title":"How long does it take for my repository to be analyzed?"},{"location":"faq/code-analysis/how-to-configure-php-codesniffer-code-standards/","text":"How to configure PHP_CodeSniffer code standards? \u00b6 By default, Codacy uses the PHP_CodeSniffer configuration on the Code patterns page when analyzing your repositories. To enforce a specific PHP_CodeSniffer code standard you must create a configuration file on the root of your repository that references one or more of the following code standards: Default code standards packaged together with PHP_CodeSniffer: https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards Additional code standards that Codacy packages on the PHP_CodeSniffer tool plugin. Check the repository the additional code standards to learn how you can reference them in your configuration files: https://github.com/codacy/codacy-codesniffer/blob/master/composer.json For example, create a text file with the name .phpcs.xml to use the PSR12 coding standard but excluding the sniffs Generic.WhiteSpace.DisallowTabIndent and PSR12.Operators.OperatorSpacing : <?xml version=\"1.0\"?> <ruleset name= \"PHP_CodeSniffer\" > <description> PHP_CodeSniffer configuration </description> <rule ref= \"PSR12\" > <exclude name= \"Generic.WhiteSpace.DisallowTabIndent\" /> <exclude name= \"PSR12.Operators.OperatorSpacing\" /> </rule> </ruleset> See also \u00b6 Check these external resources for more help on customizing your PHP_CodeSniffer configuration: PHP_CodeSniffer configuration file syntax PHP Coding Standard Generator","title":"How to configure PHP_CodeSniffer code standards?"},{"location":"faq/code-analysis/how-to-configure-php-codesniffer-code-standards/#how-to-configure-php_codesniffer-code-standards","text":"By default, Codacy uses the PHP_CodeSniffer configuration on the Code patterns page when analyzing your repositories. To enforce a specific PHP_CodeSniffer code standard you must create a configuration file on the root of your repository that references one or more of the following code standards: Default code standards packaged together with PHP_CodeSniffer: https://github.com/squizlabs/PHP_CodeSniffer/tree/master/src/Standards Additional code standards that Codacy packages on the PHP_CodeSniffer tool plugin. Check the repository the additional code standards to learn how you can reference them in your configuration files: https://github.com/codacy/codacy-codesniffer/blob/master/composer.json For example, create a text file with the name .phpcs.xml to use the PSR12 coding standard but excluding the sniffs Generic.WhiteSpace.DisallowTabIndent and PSR12.Operators.OperatorSpacing : <?xml version=\"1.0\"?> <ruleset name= \"PHP_CodeSniffer\" > <description> PHP_CodeSniffer configuration </description> <rule ref= \"PSR12\" > <exclude name= \"Generic.WhiteSpace.DisallowTabIndent\" /> <exclude name= \"PSR12.Operators.OperatorSpacing\" /> </rule> </ruleset>","title":"How to configure PHP_CodeSniffer code standards?"},{"location":"faq/code-analysis/how-to-configure-php-codesniffer-code-standards/#see-also","text":"Check these external resources for more help on customizing your PHP_CodeSniffer configuration: PHP_CodeSniffer configuration file syntax PHP Coding Standard Generator","title":"See also"},{"location":"faq/code-analysis/skipping-an-analysis/","text":"Skipping an analysis \u00b6 By default, Codacy automatically analyzes a repository whenever you push changes. However, you can override this behavior by adding the tag [ci skip] or [skip ci] anywhere in the subject or body of the commit message. If you later decide to analyze a skipped commit, you can override any skip tags by reanalyzing the commit. Note This feature isn't supported for pull requests. Example commit message \u00b6 $ git log origin/master..HEAD commit 96121bec2f36b406d694ed4e03126483ad1baad6 Author: Rodrigo Fernandes Date: Wed Jan 31 10 :01:47 2019 +0000 Add eslint-plugin-chai-expect version 1 .1.1 [ ci skip ] When pushed, Codacy won't analyze this commit because of the [ci skip] in the commit message.","title":"Skipping an analysis"},{"location":"faq/code-analysis/skipping-an-analysis/#skipping-an-analysis","text":"By default, Codacy automatically analyzes a repository whenever you push changes. However, you can override this behavior by adding the tag [ci skip] or [skip ci] anywhere in the subject or body of the commit message. If you later decide to analyze a skipped commit, you can override any skip tags by reanalyzing the commit. Note This feature isn't supported for pull requests.","title":"Skipping an analysis"},{"location":"faq/code-analysis/skipping-an-analysis/#example-commit-message","text":"$ git log origin/master..HEAD commit 96121bec2f36b406d694ed4e03126483ad1baad6 Author: Rodrigo Fernandes Date: Wed Jan 31 10 :01:47 2019 +0000 Add eslint-plugin-chai-expect version 1 .1.1 [ ci skip ] When pushed, Codacy won't analyze this commit because of the [ci skip] in the commit message.","title":"Example commit message"},{"location":"faq/general/how-can-i-change-or-cancel-my-plan/","text":"How can I change or cancel my plan? \u00b6 You can change or cancel your Codacy plan at any time. If you choose to cancel your annual subscription before the conclusion of the 12 months, your account will continue to work for the remainder of the annual billing period. We value feedback and thank you in advance for letting us know the primary reason behind your decision to leave, whether budgetary constraints or missing deal-breaker functionality. If you're using Codacy Cloud \u00b6 To make changes to the plan of your organization, open your organization Settings , page Plan and billing . Alternatively, you can also delete your organization to remove all its repositories from Codacy and cancel your existing plan. Note For legacy single accounts, click on your avatar, select Your Account , and open the page Plan and billing . Alternatively, you can also delete your account to remove all your personal repositories from Codacy and cancel your existing plan. Note If you're using GitHub Marketplace, make changes to your billing details or cancel your plan directly on your GitHub Billing page . If you're using Codacy Self-hosted \u00b6 To help you understand how you're consuming your licensed Codacy seats, use codacy-usage-report to obtain details about the activity of the users in your Codacy Self-hosted instance. If you decide to cancel your plan, we kindly ask that you send us a message and we'll swiftly process the cancellation.","title":"How can I change or cancel my plan?"},{"location":"faq/general/how-can-i-change-or-cancel-my-plan/#how-can-i-change-or-cancel-my-plan","text":"You can change or cancel your Codacy plan at any time. If you choose to cancel your annual subscription before the conclusion of the 12 months, your account will continue to work for the remainder of the annual billing period. We value feedback and thank you in advance for letting us know the primary reason behind your decision to leave, whether budgetary constraints or missing deal-breaker functionality.","title":"How can I change or cancel my plan?"},{"location":"faq/general/how-can-i-change-or-cancel-my-plan/#if-youre-using-codacy-cloud","text":"To make changes to the plan of your organization, open your organization Settings , page Plan and billing . Alternatively, you can also delete your organization to remove all its repositories from Codacy and cancel your existing plan. Note For legacy single accounts, click on your avatar, select Your Account , and open the page Plan and billing . Alternatively, you can also delete your account to remove all your personal repositories from Codacy and cancel your existing plan. Note If you're using GitHub Marketplace, make changes to your billing details or cancel your plan directly on your GitHub Billing page .","title":"If you're using Codacy Cloud"},{"location":"faq/general/how-can-i-change-or-cancel-my-plan/#if-youre-using-codacy-self-hosted","text":"To help you understand how you're consuming your licensed Codacy seats, use codacy-usage-report to obtain details about the activity of the users in your Codacy Self-hosted instance. If you decide to cancel your plan, we kindly ask that you send us a message and we'll swiftly process the cancellation.","title":"If you're using Codacy Self-hosted"},{"location":"faq/general/how-do-i-change-my-email-address-in-codacy/","text":"How do I change my email address in Codacy? \u00b6 Codacy will always pull email addresses from your current session in your Git provider. Your account's email addresses should be visible on your email management page. If you need to make any changes to the emails showing in Codacy, you will need to change this directly in your Git provider. Once you have done that, please log out and back into Codacy. If the changes are still not reflected in Codacy, go to your access management page and revoke the relevant Git provider or Google integration. After that, please log out and back into Codacy with that provider. If you are still having trouble changing your email addresses or have any other question regarding this, please contact us at support@codacy.com .","title":"How do I change my email address in Codacy?"},{"location":"faq/general/how-do-i-change-my-email-address-in-codacy/#how-do-i-change-my-email-address-in-codacy","text":"Codacy will always pull email addresses from your current session in your Git provider. Your account's email addresses should be visible on your email management page. If you need to make any changes to the emails showing in Codacy, you will need to change this directly in your Git provider. Once you have done that, please log out and back into Codacy. If the changes are still not reflected in Codacy, go to your access management page and revoke the relevant Git provider or Google integration. After that, please log out and back into Codacy with that provider. If you are still having trouble changing your email addresses or have any other question regarding this, please contact us at support@codacy.com .","title":"How do I change my email address in Codacy?"},{"location":"faq/general/how-does-codacy-keep-my-data-secure/","text":"How does Codacy keep my data secure? \u00b6 Keeping our customers' data protected at all times is our highest priority. This security overview provides a high-level overview of the security practices put in place to achieve that objective. Have questions or feedback? Feel free to reach out to us at security@codacy.com .","title":"How does Codacy keep my data secure?"},{"location":"faq/general/how-does-codacy-keep-my-data-secure/#how-does-codacy-keep-my-data-secure","text":"Keeping our customers' data protected at all times is our highest priority. This security overview provides a high-level overview of the security practices put in place to achieve that objective. Have questions or feedback? Feel free to reach out to us at security@codacy.com .","title":"How does Codacy keep my data secure?"},{"location":"faq/general/how-does-codacy-protect-my-privacy/","text":"How does Codacy protect my privacy? \u00b6 On the 25th of May 2018, the new \"General Data Protection Regulation\" ( GDPR ) will come into effect. This regulation contains the most significant changes to European data privacy legislation in the last 20 years and gives you more control over your personal data and greater transparency on how it's used. At Codacy, keeping your personal data safe has always been a top priority and we look at GDPR as another opportunity for us to strengthen this commitment to you. We're changing our data processing policies, operations, activities, and documentation in anticipation of the upcoming GDPR and have updated our Privacy Policy to incorporate said changes and specifically reflect the new regulation. The updated policy takes effect immediately for all of Codacy's customers and users. Below are some change highlights: Transparency: We've reworded our privacy policy for better navigation and to make it easier to read. Our policy outlines the type of personal data we collect, how we collect and process the data, and for what purposes. It also explains how we store, transfer, and share personal data, and our data retention practices Control: Our policy now further explains the control you have over information about you and your online activities. At any time, you can request information, correction, deletion, or changes to your personal data or/and make changes yourself GDPR: We've included additional language to discuss rights for users located in the European Union (EU) If you have any questions on this, please email us at privacy@codacy.com or reach out through our live chat option.","title":"How does Codacy protect my privacy?"},{"location":"faq/general/how-does-codacy-protect-my-privacy/#how-does-codacy-protect-my-privacy","text":"On the 25th of May 2018, the new \"General Data Protection Regulation\" ( GDPR ) will come into effect. This regulation contains the most significant changes to European data privacy legislation in the last 20 years and gives you more control over your personal data and greater transparency on how it's used. At Codacy, keeping your personal data safe has always been a top priority and we look at GDPR as another opportunity for us to strengthen this commitment to you. We're changing our data processing policies, operations, activities, and documentation in anticipation of the upcoming GDPR and have updated our Privacy Policy to incorporate said changes and specifically reflect the new regulation. The updated policy takes effect immediately for all of Codacy's customers and users. Below are some change highlights: Transparency: We've reworded our privacy policy for better navigation and to make it easier to read. Our policy outlines the type of personal data we collect, how we collect and process the data, and for what purposes. It also explains how we store, transfer, and share personal data, and our data retention practices Control: Our policy now further explains the control you have over information about you and your online activities. At any time, you can request information, correction, deletion, or changes to your personal data or/and make changes yourself GDPR: We've included additional language to discuss rights for users located in the European Union (EU) If you have any questions on this, please email us at privacy@codacy.com or reach out through our live chat option.","title":"How does Codacy protect my privacy?"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/","text":"How does Codacy support Bitbucket Cloud? \u00b6 When you use Bitbucket Cloud to sign up or log into Codacy, the Bitbucket teams that you belong to will be available to be added as Organizations on Codacy. After adding a team: Codacy displays the list of all repositories in that team so that you can add them to Codacy as repositories to be analyzed The members of the team will be able to join or request to join Codacy If you have repositories that don't belong to any team, you can still add those on Codacy directly under My Repositories . Limitations \u00b6 Currently, the integration between Codacy and Bitbucket Cloud has the following limitations: Users that are deleted from Bitbucket Cloud are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Deleted teams and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Renamed Team workspace IDs aren't automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those teams. You must click the button Synchronize in the settings of the corresponding Organization on Codacy to synchronize the workspace ID and resume the analysis of the repositories. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. Codacy doesn't analyze pull requests submitted from forked repositories. See also \u00b6 What are synced organizations","title":"How does Codacy support Bitbucket Cloud?"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/#how-does-codacy-support-bitbucket-cloud","text":"When you use Bitbucket Cloud to sign up or log into Codacy, the Bitbucket teams that you belong to will be available to be added as Organizations on Codacy. After adding a team: Codacy displays the list of all repositories in that team so that you can add them to Codacy as repositories to be analyzed The members of the team will be able to join or request to join Codacy If you have repositories that don't belong to any team, you can still add those on Codacy directly under My Repositories .","title":"How does Codacy support Bitbucket Cloud?"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/#limitations","text":"Currently, the integration between Codacy and Bitbucket Cloud has the following limitations: Users that are deleted from Bitbucket Cloud are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Deleted teams and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Renamed Team workspace IDs aren't automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those teams. You must click the button Synchronize in the settings of the corresponding Organization on Codacy to synchronize the workspace ID and resume the analysis of the repositories. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. Codacy doesn't analyze pull requests submitted from forked repositories.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/#see-also","text":"What are synced organizations","title":"See also"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/","text":"How does Codacy support Bitbucket Server? \u00b6 When you use Bitbucket Server to sign up or log into Codacy, the Bitbucket projects that you belong to will be available to be added as Organizations on Codacy. After adding a project: Codacy displays the list of all repositories that you own in that project so that you can add them to Codacy as repositories to be analyzed The members of the project will be able to join or request to join Codacy Limitations \u00b6 Currently, the integration between Codacy and Bitbucket Server has the following limitations: Users that are deleted from Bitbucket Server are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed project keys aren't automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those projects. You must click the button Synchronize in the settings of the corresponding Organization on Codacy to synchronize the project key and resume the analysis of the repositories. Deleted projects and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Personal repositories are not supported. You can only add repositories to Codacy if they belong to a project. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. The Repositories screen doesn't include the \"last updated\" timestamp for each repository. As such, the repositories are sorted alphabetically. Codacy doesn't analyze pull requests submitted from forked repositories. See also \u00b6 What are synced organizations","title":"How does Codacy support Bitbucket Server?"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/#how-does-codacy-support-bitbucket-server","text":"When you use Bitbucket Server to sign up or log into Codacy, the Bitbucket projects that you belong to will be available to be added as Organizations on Codacy. After adding a project: Codacy displays the list of all repositories that you own in that project so that you can add them to Codacy as repositories to be analyzed The members of the project will be able to join or request to join Codacy","title":"How does Codacy support Bitbucket Server?"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/#limitations","text":"Currently, the integration between Codacy and Bitbucket Server has the following limitations: Users that are deleted from Bitbucket Server are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed project keys aren't automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those projects. You must click the button Synchronize in the settings of the corresponding Organization on Codacy to synchronize the project key and resume the analysis of the repositories. Deleted projects and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Personal repositories are not supported. You can only add repositories to Codacy if they belong to a project. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. The Repositories screen doesn't include the \"last updated\" timestamp for each repository. As such, the repositories are sorted alphabetically. Codacy doesn't analyze pull requests submitted from forked repositories.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/#see-also","text":"What are synced organizations","title":"See also"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/","text":"How does Codacy support GitLab Cloud? \u00b6 When you use GitLab Cloud to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that don't belong to any Group, you can still add those on Codacy by choosing your \"personal\" organization . Limitations \u00b6 Currently, the integration between Codacy and GitLab Cloud has the following limitations: Users that are deleted from GitLab are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed Group paths aren't automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those groups. You must click the button Synchronize in the settings of the corresponding Organization on Codacy to synchronize the Group path and resume the analysis of the repositories. Deleted Groups are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations from Codacy. Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization. See also \u00b6 What are synced organizations","title":"How does Codacy support GitLab Cloud?"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/#how-does-codacy-support-gitlab-cloud","text":"When you use GitLab Cloud to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that don't belong to any Group, you can still add those on Codacy by choosing your \"personal\" organization .","title":"How does Codacy support GitLab Cloud?"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/#limitations","text":"Currently, the integration between Codacy and GitLab Cloud has the following limitations: Users that are deleted from GitLab are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed Group paths aren't automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those groups. You must click the button Synchronize in the settings of the corresponding Organization on Codacy to synchronize the Group path and resume the analysis of the repositories. Deleted Groups are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations from Codacy. Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/#see-also","text":"What are synced organizations","title":"See also"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/","text":"How does Codacy support GitLab Enterprise? \u00b6 When you use GitLab Enterprise to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that don't belong to any Group, you can still add those on Codacy by choosing your \"personal\" organization . Limitations \u00b6 Currently, the integration between Codacy and GitLab Enterprise has the following limitations: Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization. See also \u00b6 What are synced organizations","title":"How does Codacy support GitLab Enterprise?"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/#how-does-codacy-support-gitlab-enterprise","text":"When you use GitLab Enterprise to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that don't belong to any Group, you can still add those on Codacy by choosing your \"personal\" organization .","title":"How does Codacy support GitLab Enterprise?"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/#limitations","text":"Currently, the integration between Codacy and GitLab Enterprise has the following limitations: Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/#see-also","text":"What are synced organizations","title":"See also"},{"location":"faq/general/which-browsers-does-codacy-support/","text":"Which browsers does Codacy support? \u00b6 Codacy runs on every modern browser supporting HTML5 and CSS3: Chrome 67+ Firefox 45+ Internet Explorer 11+ Microsoft Edge 13+","title":"Which browsers does Codacy support?"},{"location":"faq/general/which-browsers-does-codacy-support/#which-browsers-does-codacy-support","text":"Codacy runs on every modern browser supporting HTML5 and CSS3: Chrome 67+ Firefox 45+ Internet Explorer 11+ Microsoft Edge 13+","title":"Which browsers does Codacy support?"},{"location":"faq/general/which-version-control-systems-does-codacy-support/","text":"Which version control systems does Codacy support? \u00b6 Codacy supports repositories from the following Git providers: Hosting model Name used on Codacy Required Codacy version GitHub GitHub.com GitHub Cloud Codacy Cloud or Codacy Self-hosted GitHub Enterprise Server version 2.20.3 or later GitHub Enterprise Codacy Self-hosted GitLab GitLab SaaS GitLab Cloud Codacy Cloud or Codacy Self-hosted GitLab Self-managed version 12.6.2-ee or later GitLab Enterprise Codacy Self-hosted Bitbucket Bitbucket Cloud Bitbucket Cloud Codacy Cloud or Codacy Self-hosted Bitbucket Data Center Bitbucket Server version 6.6.0 or later Bitbucket Server Codacy Self-hosted Note Although older versions of the self-hosted Git providers may work with Codacy without loss of functionality, Codacy will only fix issues and ensure compatibility with the versions listed above.","title":"Which version control systems does Codacy support?"},{"location":"faq/general/which-version-control-systems-does-codacy-support/#which-version-control-systems-does-codacy-support","text":"Codacy supports repositories from the following Git providers: Hosting model Name used on Codacy Required Codacy version GitHub GitHub.com GitHub Cloud Codacy Cloud or Codacy Self-hosted GitHub Enterprise Server version 2.20.3 or later GitHub Enterprise Codacy Self-hosted GitLab GitLab SaaS GitLab Cloud Codacy Cloud or Codacy Self-hosted GitLab Self-managed version 12.6.2-ee or later GitLab Enterprise Codacy Self-hosted Bitbucket Bitbucket Cloud Bitbucket Cloud Codacy Cloud or Codacy Self-hosted Bitbucket Data Center Bitbucket Server version 6.6.0 or later Bitbucket Server Codacy Self-hosted Note Although older versions of the self-hosted Git providers may work with Codacy without loss of functionality, Codacy will only fix issues and ensure compatibility with the versions listed above.","title":"Which version control systems does Codacy support?"},{"location":"faq/general/why-cant-i-see-my-organization/","text":"Why can't I see my organization? \u00b6 If you don't see your organization when adding your organization on Codacy , try the following steps: Make sure you have access to the organization with the account you are logged in. If you're using GitHub Apps, install and authorize Codacy on your organization . Refresh the list of organizations on Codacy by clicking refresh this list on the Organizations page: Revoke Codacy's OAuth application on the Git provider website and log in again to Codacy. If these steps don't solve the issue, please contact us at support@codacy.com .","title":"Why can't I see my organization?"},{"location":"faq/general/why-cant-i-see-my-organization/#why-cant-i-see-my-organization","text":"If you don't see your organization when adding your organization on Codacy , try the following steps: Make sure you have access to the organization with the account you are logged in. If you're using GitHub Apps, install and authorize Codacy on your organization . Refresh the list of organizations on Codacy by clicking refresh this list on the Organizations page: Revoke Codacy's OAuth application on the Git provider website and log in again to Codacy. If these steps don't solve the issue, please contact us at support@codacy.com .","title":"Why can't I see my organization?"},{"location":"faq/repositories/how-do-i-manually-force-a-repository-update/","text":"How do I manually force a repository update? \u00b6 Codacy relies on post-commit hooks to trigger analysis. To re-trigger the analysis you can re-send the hook on the Git provider. For instant updates, configure post-commit hooks .","title":"How do I manually force a repository update?"},{"location":"faq/repositories/how-do-i-manually-force-a-repository-update/#how-do-i-manually-force-a-repository-update","text":"Codacy relies on post-commit hooks to trigger analysis. To re-trigger the analysis you can re-send the hook on the Git provider. For instant updates, configure post-commit hooks .","title":"How do I manually force a repository update?"},{"location":"faq/repositories/how-do-i-migrate-a-legacy-repository-to-a-synced-organization/","text":"How do I migrate a legacy repository to a synced organization? \u00b6 If you have legacy personal repositories or repositories in manual organizations, you can migrate these repositories to a synced organization while keeping your Codacy configurations and analysis history. To migrate a legacy repository you must have admin permissions for that repository. To migrate your legacy repository to a synced organization: Click your avatar, select Organizations , and ensure that the target organization already exists on Codacy. If the target organization isn't added to Codacy yet, add your organization to Codacy before continuing. Tip Personal organizations have the same name as your username on your Git provider. For example: Open your legacy repository Settings , tab General . In the section Transfer repository , select the target organization and click the button Transfer . Update the Repository Dashboard URL that you were using for the legacy repository. For example, if you had shared the Repository Dashboard with your team, provide them with the new URL. Note Although the old URLs for the repository dashboards continue to work, they're deprecated and we recommend that you use the new URLs instead.","title":"How do I migrate a legacy repository to a synced organization?"},{"location":"faq/repositories/how-do-i-migrate-a-legacy-repository-to-a-synced-organization/#how-do-i-migrate-a-legacy-repository-to-a-synced-organization","text":"If you have legacy personal repositories or repositories in manual organizations, you can migrate these repositories to a synced organization while keeping your Codacy configurations and analysis history. To migrate a legacy repository you must have admin permissions for that repository. To migrate your legacy repository to a synced organization: Click your avatar, select Organizations , and ensure that the target organization already exists on Codacy. If the target organization isn't added to Codacy yet, add your organization to Codacy before continuing. Tip Personal organizations have the same name as your username on your Git provider. For example: Open your legacy repository Settings , tab General . In the section Transfer repository , select the target organization and click the button Transfer . Update the Repository Dashboard URL that you were using for the legacy repository. For example, if you had shared the Repository Dashboard with your team, provide them with the new URL. Note Although the old URLs for the repository dashboards continue to work, they're deprecated and we recommend that you use the new URLs instead.","title":"How do I migrate a legacy repository to a synced organization?"},{"location":"faq/repositories/how-do-i-programmatically-add-repositories-to-codacy/","text":"How do I programmatically add repositories to Codacy? \u00b6 There are scenarios where manually adding Git repositories on the Codacy UI is inconvenient or time-consuming. For example: You want to add all new repositories to Codacy when they're created on the Git provider You're adding a large number of repositories to Codacy, such as when initially adding all repositories in your Git provider organization To add repositories programmatically, use Codacy's API v3 endpoint addRepository by performing an HTTP POST request to /repositories , specifying the Git provider and the full path of the repository in the body of the request: curl -X POST https://app.codacy.com/api/v3/repositories \\ -H 'Content-Type: application/json' \\ -H 'api-token: <API_KEY>' \\ -d ' { \"provider\" : \"<GIT_PROVIDER>\" , \"repositoryFullPath\" : \"<REPOSITORY_FULL_PATH>\" } Substitute the placeholders with your own values: API_KEY: Account API token used to authenticate on the Codacy API. GIT_PROVIDER: Git provider hosting the repository, using one of the values in the table below. For example, gh for GitHub Cloud. Value Git provider gh GitHub Cloud ghe GitHub Enterprise gl GitLab Cloud gle GitLab Enterprise bb Bitbucket Cloud bbe Bitbucket Server REPOSITORY_FULL_PATH: Name of the organization and repository on the Git provider, using the format <organization>/<repository> . For example, codacy/docs . You must have admin permissions over the repository on the Git provider. Important If you are using GitLab you must specify the full group path and the repository using the format <group>/<subgroup-1>/.../<subgroup-N>/<repository> . Currently, Codacy doesn't provide API endpoints to automate other parts of setting up new repositories, such as configuring the repository settings or the enabled code patterns. However, Codacy automatically applies the default patterns defined on the Codacy API token account to the new repositories, and you can use this to ensure that all new repositories share the same pattern configuration. Example: Adding all repositories in a GitHub organization \u00b6 We provide an example Bash script that adds all repositories in a GitHub Cloud organization to Codacy. We suggest that you adapt the script to your specific scenario. Warning Since Codacy automatically analyzes new repositories, adding many repositories in a short time can cause delays in the analysis of other repositories depending on the size of the repositories, the sizing of the infrastructure, and the concurrent analysis configuration. For example: Repositories added Expected delay 1 to 10 Small 11 to 100 Considerable More than 100 Extreme To avoid these delays, we recommend that you add repositories in small batches or that you space out adding new repositories in time. The example script: Defines a GitHub personal access token , the GitHub organization name, and an account API token . Calls the GitHub API to obtain the list of all repositories in the defined organization. Uses jq to return the value of full_name for each repository obtained in the JSON response. The full_name already includes the organization and repository names using the format <organization>/<repository> . For each repository, calls the Codacy API endpoint to add a new repository specifying gh as the Git provider and the value of full_name as the full path of the repository. Checks the HTTP status code obtained in the response and performs basic error handling. Pauses a few seconds between requests to the Codacy API to avoid rate limiting. #!/bin/bash GITHUB_AUTH_TOKEN = \"<REPLACE_ME>\" GITHUB_ORG_NAME = \"<REPLACE_ME>\" CODACY_API_TOKEN = \"<REPLACE_ME>\" printf \"Obtaining all repositories in the $GITHUB_ORG_NAME organization\\n\" for repo in $( curl -s https://api.github.com/orgs/ $GITHUB_ORG_NAME /repos -H \"Authorization: Bearer $GITHUB_AUTH_TOKEN \" | jq -r '.[] | .full_name' ) ; do printf \"Adding $repo to Codacy\\n\" http_status = $( curl -X POST https://app.codacy.com/api/v3/repositories \\ -H \"Content-Type: application/json\" \\ -H \"api-token: $CODACY_API_TOKEN \" \\ -d '{\"provider\":\"gh\", \"repositoryFullPath\":\"' $repo '\"}' \\ -sSo /dev/null -w \"%{http_code}\" ) case \" $http_status \" in 200 ) printf \" $repo added successfully\\n\" ;; 401 ) printf \"Error: 401 Unauthorized, check the Codacy API token\\n\" break ;; 409 ) printf \"Error: 409 Conflict, $repo is already added to Codacy\\n\" ;; * ) printf \"Error: $http_status HTTP status code\\n\" break ;; esac sleep 10 # Wait 10 seconds done Important For the sake of simplicity: The GitHub API endpoint used by the script obtains all repositories in a GitHub organization. However, you must have admin permissions over the repositories that you add to Codacy. If you are not the owner of all the repositories in your GitHub organization, consider using the GitHub API endpoint /user/repos instead. The script doesn't take into account paginated results obtained from the GitHub API. To ensure that you obtain all the repositories in your organization, learn how to use pagination on the GitHub API .","title":"How do I programmatically add repositories to Codacy?"},{"location":"faq/repositories/how-do-i-programmatically-add-repositories-to-codacy/#how-do-i-programmatically-add-repositories-to-codacy","text":"There are scenarios where manually adding Git repositories on the Codacy UI is inconvenient or time-consuming. For example: You want to add all new repositories to Codacy when they're created on the Git provider You're adding a large number of repositories to Codacy, such as when initially adding all repositories in your Git provider organization To add repositories programmatically, use Codacy's API v3 endpoint addRepository by performing an HTTP POST request to /repositories , specifying the Git provider and the full path of the repository in the body of the request: curl -X POST https://app.codacy.com/api/v3/repositories \\ -H 'Content-Type: application/json' \\ -H 'api-token: <API_KEY>' \\ -d ' { \"provider\" : \"<GIT_PROVIDER>\" , \"repositoryFullPath\" : \"<REPOSITORY_FULL_PATH>\" } Substitute the placeholders with your own values: API_KEY: Account API token used to authenticate on the Codacy API. GIT_PROVIDER: Git provider hosting the repository, using one of the values in the table below. For example, gh for GitHub Cloud. Value Git provider gh GitHub Cloud ghe GitHub Enterprise gl GitLab Cloud gle GitLab Enterprise bb Bitbucket Cloud bbe Bitbucket Server REPOSITORY_FULL_PATH: Name of the organization and repository on the Git provider, using the format <organization>/<repository> . For example, codacy/docs . You must have admin permissions over the repository on the Git provider. Important If you are using GitLab you must specify the full group path and the repository using the format <group>/<subgroup-1>/.../<subgroup-N>/<repository> . Currently, Codacy doesn't provide API endpoints to automate other parts of setting up new repositories, such as configuring the repository settings or the enabled code patterns. However, Codacy automatically applies the default patterns defined on the Codacy API token account to the new repositories, and you can use this to ensure that all new repositories share the same pattern configuration.","title":"How do I programmatically add repositories to Codacy?"},{"location":"faq/repositories/how-do-i-programmatically-add-repositories-to-codacy/#example-adding-all-repositories-in-a-github-organization","text":"We provide an example Bash script that adds all repositories in a GitHub Cloud organization to Codacy. We suggest that you adapt the script to your specific scenario. Warning Since Codacy automatically analyzes new repositories, adding many repositories in a short time can cause delays in the analysis of other repositories depending on the size of the repositories, the sizing of the infrastructure, and the concurrent analysis configuration. For example: Repositories added Expected delay 1 to 10 Small 11 to 100 Considerable More than 100 Extreme To avoid these delays, we recommend that you add repositories in small batches or that you space out adding new repositories in time. The example script: Defines a GitHub personal access token , the GitHub organization name, and an account API token . Calls the GitHub API to obtain the list of all repositories in the defined organization. Uses jq to return the value of full_name for each repository obtained in the JSON response. The full_name already includes the organization and repository names using the format <organization>/<repository> . For each repository, calls the Codacy API endpoint to add a new repository specifying gh as the Git provider and the value of full_name as the full path of the repository. Checks the HTTP status code obtained in the response and performs basic error handling. Pauses a few seconds between requests to the Codacy API to avoid rate limiting. #!/bin/bash GITHUB_AUTH_TOKEN = \"<REPLACE_ME>\" GITHUB_ORG_NAME = \"<REPLACE_ME>\" CODACY_API_TOKEN = \"<REPLACE_ME>\" printf \"Obtaining all repositories in the $GITHUB_ORG_NAME organization\\n\" for repo in $( curl -s https://api.github.com/orgs/ $GITHUB_ORG_NAME /repos -H \"Authorization: Bearer $GITHUB_AUTH_TOKEN \" | jq -r '.[] | .full_name' ) ; do printf \"Adding $repo to Codacy\\n\" http_status = $( curl -X POST https://app.codacy.com/api/v3/repositories \\ -H \"Content-Type: application/json\" \\ -H \"api-token: $CODACY_API_TOKEN \" \\ -d '{\"provider\":\"gh\", \"repositoryFullPath\":\"' $repo '\"}' \\ -sSo /dev/null -w \"%{http_code}\" ) case \" $http_status \" in 200 ) printf \" $repo added successfully\\n\" ;; 401 ) printf \"Error: 401 Unauthorized, check the Codacy API token\\n\" break ;; 409 ) printf \"Error: 409 Conflict, $repo is already added to Codacy\\n\" ;; * ) printf \"Error: $http_status HTTP status code\\n\" break ;; esac sleep 10 # Wait 10 seconds done Important For the sake of simplicity: The GitHub API endpoint used by the script obtains all repositories in a GitHub organization. However, you must have admin permissions over the repositories that you add to Codacy. If you are not the owner of all the repositories in your GitHub organization, consider using the GitHub API endpoint /user/repos instead. The script doesn't take into account paginated results obtained from the GitHub API. To ensure that you obtain all the repositories in your organization, learn how to use pagination on the GitHub API .","title":"Example: Adding all repositories in a GitHub organization"},{"location":"faq/repositories/how-do-i-reanalyze-my-repository/","text":"How do I reanalyze my repository? \u00b6 Click on the latest commit from your list in the Commit view and click to reanalyze as the latest commit includes all the code of all the PRs.","title":"How do I reanalyze my repository?"},{"location":"faq/repositories/how-do-i-reanalyze-my-repository/#how-do-i-reanalyze-my-repository","text":"Click on the latest commit from your list in the Commit view and click to reanalyze as the latest commit includes all the code of all the PRs.","title":"How do I reanalyze my repository?"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-prs/","text":"How do I set Codacy as a required check to merge pull requests? \u00b6 Codacy checks each pull request using your quality settings and sends a notification to the Git provider informing if the pull request is up to standards or not. Each Git provider has different options to set up notifications or block merging pull requests until they pass the Codacy check: GitHub \u00b6 GitHub allows setting a status check as mandatory before merging pull requests. Important Make sure that you enable the option Pull Request Status on the GitHub integration. GitLab \u00b6 GitLab allows setting that all pipelines must succeed before merging merge requests. Important Make sure that you enable the option Pull Request Status on the GitLab integration. Bitbucket \u00b6 Bitbucket allows setting a minimum number of merge checks that must pass before merging pull requests. Important Make sure that you enable the option Pull Request Status on the Bitbucket integration.","title":"How do I set Codacy as a required check to merge pull requests?"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-prs/#how-do-i-set-codacy-as-a-required-check-to-merge-pull-requests","text":"Codacy checks each pull request using your quality settings and sends a notification to the Git provider informing if the pull request is up to standards or not. Each Git provider has different options to set up notifications or block merging pull requests until they pass the Codacy check:","title":"How do I set Codacy as a required check to merge pull requests?"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-prs/#github","text":"GitHub allows setting a status check as mandatory before merging pull requests. Important Make sure that you enable the option Pull Request Status on the GitHub integration.","title":"GitHub"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-prs/#gitlab","text":"GitLab allows setting that all pipelines must succeed before merging merge requests. Important Make sure that you enable the option Pull Request Status on the GitLab integration.","title":"GitLab"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-prs/#bitbucket","text":"Bitbucket allows setting a minimum number of merge checks that must pass before merging pull requests. Important Make sure that you enable the option Pull Request Status on the Bitbucket integration.","title":"Bitbucket"},{"location":"faq/repositories/i-moved-my-repository-on-the-git-provider/","text":"I moved my repository on the Git provider \u00b6 Currently, Codacy doesn't automatically detect moves of repositories between two organizations. To ensure that Codacy continues to analyze a repository that was moved to another organization on your Git provider: Delete the repository from the original organization on Codacy, taking note of the settings for this repository Add the repository to the new organization on Codacy and reconfigure the repository with the same settings as the original one If you can't find your repository in the original Codacy organization or if you need more help with this process, please contact us at support@codacy.com .","title":"I moved my repository on the Git provider"},{"location":"faq/repositories/i-moved-my-repository-on-the-git-provider/#i-moved-my-repository-on-the-git-provider","text":"Currently, Codacy doesn't automatically detect moves of repositories between two organizations. To ensure that Codacy continues to analyze a repository that was moved to another organization on your Git provider: Delete the repository from the original organization on Codacy, taking note of the settings for this repository Add the repository to the new organization on Codacy and reconfigure the repository with the same settings as the original one If you can't find your repository in the original Codacy organization or if you need more help with this process, please contact us at support@codacy.com .","title":"I moved my repository on the Git provider"},{"location":"faq/repositories/i-renamed-my-repository-on-the-git-provider/","text":"I renamed my repository on the Git provider \u00b6 If you changed the name or URL of your repository on your Git provider, you can update the name and URL of the repository on Codacy to point to the new location. This ensures that you won't lose historical data about your repository on Codacy. To rename your repository on Codacy, open the page Settings and click the button Update name .","title":"I renamed my repository on the Git provider"},{"location":"faq/repositories/i-renamed-my-repository-on-the-git-provider/#i-renamed-my-repository-on-the-git-provider","text":"If you changed the name or URL of your repository on your Git provider, you can update the name and URL of the repository on Codacy to point to the new location. This ensures that you won't lose historical data about your repository on Codacy. To rename your repository on Codacy, open the page Settings and click the button Update name .","title":"I renamed my repository on the Git provider"},{"location":"faq/repositories/what-are-the-different-grades-and-how-are-they-calculated/","text":"What are the different grades and how are they calculated? \u00b6 1. Overall Grade \u00b6 Codacy gives an overall grade to help you better understand the quality of your repository. Grades range from A to F , A being the highest grade. Note the grading is performed on a branch level, to give a better understanding of the code quality on a branch basis. 2. Category Grades \u00b6 Issue classification is as follows: Code Style Compatibility Error Prone Performance Security Unused Code Every issue impacts the grade of its category. Category grading ranges from 0% - 100%, 100% being the highest grade. 3. File Grades \u00b6 File grades range from A to F , A being the highest grade. Grading every file occurs according to the weighted average of the following categories: issues clones complexity coverage (optional) 4. Grade Calculation \u00b6 Codacy calculates grades based on the number of issues for every thousand lines of code (KLOC). Steve McConnell, in his book 'Code Complete,' wrote about average bugs per LOC: (a) Industry Average: \"about 15\u201350 errors per 1000 lines of delivered code.\" He further states this is usually representative of code that has some level of structured programming behind it but probably includes a mix of coding techniques.","title":"What are the different grades and how are they calculated?"},{"location":"faq/repositories/what-are-the-different-grades-and-how-are-they-calculated/#what-are-the-different-grades-and-how-are-they-calculated","text":"","title":"What are the different grades and how are they calculated?"},{"location":"faq/repositories/what-are-the-different-grades-and-how-are-they-calculated/#1-overall-grade","text":"Codacy gives an overall grade to help you better understand the quality of your repository. Grades range from A to F , A being the highest grade. Note the grading is performed on a branch level, to give a better understanding of the code quality on a branch basis.","title":"1. Overall Grade"},{"location":"faq/repositories/what-are-the-different-grades-and-how-are-they-calculated/#2-category-grades","text":"Issue classification is as follows: Code Style Compatibility Error Prone Performance Security Unused Code Every issue impacts the grade of its category. Category grading ranges from 0% - 100%, 100% being the highest grade.","title":"2. Category Grades"},{"location":"faq/repositories/what-are-the-different-grades-and-how-are-they-calculated/#3-file-grades","text":"File grades range from A to F , A being the highest grade. Grading every file occurs according to the weighted average of the following categories: issues clones complexity coverage (optional)","title":"3. File Grades"},{"location":"faq/repositories/what-are-the-different-grades-and-how-are-they-calculated/#4-grade-calculation","text":"Codacy calculates grades based on the number of issues for every thousand lines of code (KLOC). Steve McConnell, in his book 'Code Complete,' wrote about average bugs per LOC: (a) Industry Average: \"about 15\u201350 errors per 1000 lines of delivered code.\" He further states this is usually representative of code that has some level of structured programming behind it but probably includes a mix of coding techniques.","title":"4. Grade Calculation"},{"location":"faq/repositories/why-cant-i-see-or-add-my-organizations-repositories/","text":"Why can't I see or add my organization's repositories? \u00b6 If you can't see or add your organization's repositories, or have any problems regarding metrics (for example, you can't see any issues and your pull requests aren't analyzed), please check if your user account has a duplicated copy of the repository on the organization. The ideal scenario for your organization's repositories is to have a unique copy of it added to your Codacy organization, by someone with write permissions on the repository. In case you have a duplicated repository on your account, please delete it and use only the one available in your organization. In the unlikely event of not seeing repositories for one or multiple organizations, please go to your GitHub settings and revoke the Codacy OAuth application. After revoking Codacy from the GitHub Authorized OAuth Apps, go back to Codacy and add a repository to see the Authorize Codacy menu. You may have to click GitHub on the sidebar to request Codacys's permission on GitHub's side. Click \"Grant\" on each organization, to see their repositories on Codacy. If this didn't solve your issue, be sure to also check out the following pages: I renamed my repository on the Git provider I moved my repository on the Git provider","title":"Why can't I see or add my organization's repositories?"},{"location":"faq/repositories/why-cant-i-see-or-add-my-organizations-repositories/#why-cant-i-see-or-add-my-organizations-repositories","text":"If you can't see or add your organization's repositories, or have any problems regarding metrics (for example, you can't see any issues and your pull requests aren't analyzed), please check if your user account has a duplicated copy of the repository on the organization. The ideal scenario for your organization's repositories is to have a unique copy of it added to your Codacy organization, by someone with write permissions on the repository. In case you have a duplicated repository on your account, please delete it and use only the one available in your organization. In the unlikely event of not seeing repositories for one or multiple organizations, please go to your GitHub settings and revoke the Codacy OAuth application. After revoking Codacy from the GitHub Authorized OAuth Apps, go back to Codacy and add a repository to see the Authorize Codacy menu. You may have to click GitHub on the sidebar to request Codacys's permission on GitHub's side. Click \"Grant\" on each organization, to see their repositories on Codacy. If this didn't solve your issue, be sure to also check out the following pages: I renamed my repository on the Git provider I moved my repository on the Git provider","title":"Why can't I see or add my organization's repositories?"},{"location":"faq/troubleshooting/error-line-endings/","text":"Error caused by incompatible line endings \u00b6 Codacy executes the git diff command when analyzing new commits and pull requests to identify the lines of code that were changed. Codacy then uses this information to display the issues that were caused by the changes introduced by the commits or pull requests. If you have files in your repository that use the carriage return (CR) as the line end control character, the command git diff doesn't correctly identify line endings in the changed files. Because of this, Codacy is unable to use the output of the command and you'll see an error in the Diff step of your commit or pull request analysis logs: The CR line end control character was used by older Classic Mac OS systems, and for the sake of interoperability it's recommended that you: Find the files in your repository that include CR line endings. Tip On *nix operating systems including macOS, you can use the command file to detect files in your repository that use CR line endings. For example, run the following command on the root of your repository: find . -type f -exec file {} \\; | grep \"CR line\" Update the line endings in your source code files to use either the control characters: LF, if primarily using Unix-like systems such as Linux or the newer macOS operating system CRLF, if primarily using the Microsoft Windows operating system Tip This article on Wikipedia includes examples on how to convert the line endings in your files. After converting the line endings in your source code files, you may also want to check the following resources for help on standardizing the line endings on your repositories and how to configure Git to correctly handle line endings: What's the recommended way to store files in Git? Customizing Git - Formatting and Whitespace Configuring Git to handle line endings Mind the End of Your Line","title":"Error caused by incompatible line endings"},{"location":"faq/troubleshooting/error-line-endings/#error-caused-by-incompatible-line-endings","text":"Codacy executes the git diff command when analyzing new commits and pull requests to identify the lines of code that were changed. Codacy then uses this information to display the issues that were caused by the changes introduced by the commits or pull requests. If you have files in your repository that use the carriage return (CR) as the line end control character, the command git diff doesn't correctly identify line endings in the changed files. Because of this, Codacy is unable to use the output of the command and you'll see an error in the Diff step of your commit or pull request analysis logs: The CR line end control character was used by older Classic Mac OS systems, and for the sake of interoperability it's recommended that you: Find the files in your repository that include CR line endings. Tip On *nix operating systems including macOS, you can use the command file to detect files in your repository that use CR line endings. For example, run the following command on the root of your repository: find . -type f -exec file {} \\; | grep \"CR line\" Update the line endings in your source code files to use either the control characters: LF, if primarily using Unix-like systems such as Linux or the newer macOS operating system CRLF, if primarily using the Microsoft Windows operating system Tip This article on Wikipedia includes examples on how to convert the line endings in your files. After converting the line endings in your source code files, you may also want to check the following resources for help on standardizing the line endings on your repositories and how to configure Git to correctly handle line endings: What's the recommended way to store files in Git? Customizing Git - Formatting and Whitespace Configuring Git to handle line endings Mind the End of Your Line","title":"Error caused by incompatible line endings"},{"location":"faq/troubleshooting/not-a-member-of-the-organization/","text":"Not a member of the organization \u00b6 When you see this message, it means that Codacy can't analyze a commit because the associated email address doesn't belong to any Codacy user. You can check which email address is associated with a commit by hovering the cursor on the name of the contributor on the page for the commit: To verify which email addresses are associated with the Codacy account, the user must click on their avatar on the top right-hand corner, select Your account , and open the page Emails : There may be different reasons for this issue to happen: The user making the commit hasn't signed in to Codacy and joined the organization yet The user must join the organization or, if you're the organization owner, you can add the user instead. The commit email address isn't associated with the account of a Codacy user Codacy automatically associates the email addresses from the Git provider accounts to the Codacy accounts when users sign in to Codacy. Make sure that the user configures the missing email address on their Git provider account, and that the user logs in again on Codacy for the change to take effect. Git isn't configured with your correct email address Unless you explicitly configure your email address , Git automatically uses an email address based on the username and hostname of your workstation, and associates this email address with your commits. To check which email address your local Git installation is using, run the following command on your workstation: git config user.email If the returned email address isn't one of the email addresses associated with your Git provider account, configure Git to use one of those email addresses instead: git config --global user.email you@example.com Important Make sure that your email address doesn't include any extra characters such as quotes ( \"\" or '' ).","title":"Not a member of the organization"},{"location":"faq/troubleshooting/not-a-member-of-the-organization/#not-a-member-of-the-organization","text":"When you see this message, it means that Codacy can't analyze a commit because the associated email address doesn't belong to any Codacy user. You can check which email address is associated with a commit by hovering the cursor on the name of the contributor on the page for the commit: To verify which email addresses are associated with the Codacy account, the user must click on their avatar on the top right-hand corner, select Your account , and open the page Emails : There may be different reasons for this issue to happen: The user making the commit hasn't signed in to Codacy and joined the organization yet The user must join the organization or, if you're the organization owner, you can add the user instead. The commit email address isn't associated with the account of a Codacy user Codacy automatically associates the email addresses from the Git provider accounts to the Codacy accounts when users sign in to Codacy. Make sure that the user configures the missing email address on their Git provider account, and that the user logs in again on Codacy for the change to take effect. Git isn't configured with your correct email address Unless you explicitly configure your email address , Git automatically uses an email address based on the username and hostname of your workstation, and associates this email address with your commits. To check which email address your local Git installation is using, run the following command on your workstation: git config user.email If the returned email address isn't one of the email addresses associated with your Git provider account, configure Git to use one of those email addresses instead: git config --global user.email you@example.com Important Make sure that your email address doesn't include any extra characters such as quotes ( \"\" or '' ).","title":"Not a member of the organization"},{"location":"faq/troubleshooting/we-no-longer-have-access-to-this-repository/","text":"We no longer have access to this repository, check your SSH keys \u00b6 SSH keys are exclusively used for repository cloning. Depending on the level of access that the user configuring the repository on Codacy has on the remote Git provider, the key can be added either: Directly to the repository itself, if the user has permissions to add keys to the repository To the user account, if the user only has permissions to read or commit to the repository For this reason, some changes on the remote Git provider can prevent Codacy from cloning the repository. When this happens, Codacy displays the error message \"Failed to clone the repository\" on the Repository Dashboard page. The repository was renamed or moved \u00b6 If you renamed the repository or moved it to a different account on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Update name . The user that configured the repository no longer has access \u00b6 If the user that initially configured the repository on Codacy was using a user account key but no longer has access to the repository on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Generate New Repository Key (recommended) or Generate New User Key : Generate New Repository Key is the recommended option. It will add a new SSH key to your repository deployment keys. However, this is only possible if the user configuring the integration with the remote Git provider has permissions to add keys to the repository. Otherwise, this operation will fail. Alternatively, you can also do this process manually by copying the SSH key. Generate New User Key should only be used if your repository is using submodules on Codacy . When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . Open the tab Integrations . If you have an integration with your Git provider enabled, remove and re-create the integration.","title":"We no longer have access to this repository, check your SSH keys"},{"location":"faq/troubleshooting/we-no-longer-have-access-to-this-repository/#we-no-longer-have-access-to-this-repository-check-your-ssh-keys","text":"SSH keys are exclusively used for repository cloning. Depending on the level of access that the user configuring the repository on Codacy has on the remote Git provider, the key can be added either: Directly to the repository itself, if the user has permissions to add keys to the repository To the user account, if the user only has permissions to read or commit to the repository For this reason, some changes on the remote Git provider can prevent Codacy from cloning the repository. When this happens, Codacy displays the error message \"Failed to clone the repository\" on the Repository Dashboard page.","title":"We no longer have access to this repository, check your SSH keys"},{"location":"faq/troubleshooting/we-no-longer-have-access-to-this-repository/#the-repository-was-renamed-or-moved","text":"If you renamed the repository or moved it to a different account on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Update name .","title":"The repository was renamed or moved"},{"location":"faq/troubleshooting/we-no-longer-have-access-to-this-repository/#the-user-that-configured-the-repository-no-longer-has-access","text":"If the user that initially configured the repository on Codacy was using a user account key but no longer has access to the repository on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Generate New Repository Key (recommended) or Generate New User Key : Generate New Repository Key is the recommended option. It will add a new SSH key to your repository deployment keys. However, this is only possible if the user configuring the integration with the remote Git provider has permissions to add keys to the repository. Otherwise, this operation will fail. Alternatively, you can also do this process manually by copying the SSH key. Generate New User Key should only be used if your repository is using submodules on Codacy . When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . Open the tab Integrations . If you have an integration with your Git provider enabled, remove and re-create the integration.","title":"The user that configured the repository no longer has access"},{"location":"faq/troubleshooting/why-arent-duplication-metrics-being-calculated/","text":"Why aren't duplication metrics being calculated? \u00b6 For performance reasons, Codacy skips the calculation of code duplication for programming languages that have more than 5000 source code files in a repository. Besides this, if Codacy fails to calculate code duplication for a specific programming language in a repository three times in a row (for example, because the tool calculating the analysis runs out of memory or times out), Codacy stops trying to analyze the metric for that language and repository. When this happens, Codacy doesn't display code duplication metrics for the affected language: The Files page on your repository displays a blank duplication value for files of the affected language. The Commits and Pull Request pages display an empty New Duplication tab. The analysis logs for commits won't display a duplication analysis task for the tool corresponding to the affected language. As a workaround, if you are exceeding the maximum number of source code files: We recommend that you use a Codacy configuration file to exclude source code files of the affected language from your project to decrease the number of files to be analyzed. For example, you may be able to exclude files that are automatically generated from your test suite or files belonging to dependencies that aren't maintained by your team, such as the node_modules folder for JavaScript projects. Reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If the analysis finishes but the code duplication metric wasn't calculated, follow the next steps: If you are using Codacy Self-hosted , open the Admin panel , Repositories , select the repository, tab Settings , and reset the code duplication analysis in Duplication settings . Then, reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If you are analyzing your repository locally with the Codacy Analysis CLI, consider using the flag --tool-timeout to specify a larger timeout for the execution of the tool. If you are using Codacy Cloud or if the steps above didn't solve the issue, please contact us at support@codacy.com .","title":"Why aren't duplication metrics being calculated?"},{"location":"faq/troubleshooting/why-arent-duplication-metrics-being-calculated/#why-arent-duplication-metrics-being-calculated","text":"For performance reasons, Codacy skips the calculation of code duplication for programming languages that have more than 5000 source code files in a repository. Besides this, if Codacy fails to calculate code duplication for a specific programming language in a repository three times in a row (for example, because the tool calculating the analysis runs out of memory or times out), Codacy stops trying to analyze the metric for that language and repository. When this happens, Codacy doesn't display code duplication metrics for the affected language: The Files page on your repository displays a blank duplication value for files of the affected language. The Commits and Pull Request pages display an empty New Duplication tab. The analysis logs for commits won't display a duplication analysis task for the tool corresponding to the affected language. As a workaround, if you are exceeding the maximum number of source code files: We recommend that you use a Codacy configuration file to exclude source code files of the affected language from your project to decrease the number of files to be analyzed. For example, you may be able to exclude files that are automatically generated from your test suite or files belonging to dependencies that aren't maintained by your team, such as the node_modules folder for JavaScript projects. Reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If the analysis finishes but the code duplication metric wasn't calculated, follow the next steps: If you are using Codacy Self-hosted , open the Admin panel , Repositories , select the repository, tab Settings , and reset the code duplication analysis in Duplication settings . Then, reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If you are analyzing your repository locally with the Codacy Analysis CLI, consider using the flag --tool-timeout to specify a larger timeout for the execution of the tool. If you are using Codacy Cloud or if the steps above didn't solve the issue, please contact us at support@codacy.com .","title":"Why aren't duplication metrics being calculated?"},{"location":"faq/troubleshooting/why-cant-i-configure-post-commit-hooks-and-integrations/","text":"Why can't I configure post-commit hooks and integrations? \u00b6 Have you added your repository manually (via URL)? In that case, Codacy won't allow the integration to be added, causing the issue with post-commit hooks. To get this sorted, you will have to remove your repository and re-add it via our wizard page. If you are still unable to configure the integration, please contact us at support@codacy.com .","title":"Why can't I configure post-commit hooks and integrations?"},{"location":"faq/troubleshooting/why-cant-i-configure-post-commit-hooks-and-integrations/#why-cant-i-configure-post-commit-hooks-and-integrations","text":"Have you added your repository manually (via URL)? In that case, Codacy won't allow the integration to be added, causing the issue with post-commit hooks. To get this sorted, you will have to remove your repository and re-add it via our wizard page. If you are still unable to configure the integration, please contact us at support@codacy.com .","title":"Why can't I configure post-commit hooks and integrations?"},{"location":"faq/troubleshooting/why-did-codacy-stop-commenting-on-pull-requests/","text":"Why did Codacy stop commenting on pull requests? \u00b6 Various reasons can cause Codacy to stop commenting on pull requests. The most common is that the user who enabled the integration no longer has permissions on the repository or that the SSH key is no longer valid. To fix the issue, we recommend that a user with administrator permissions on the repository recreates the Git provider integration on Codacy: Enabling the GitHub integration Enabling the GitLab integration Enabling the Bitbucket integration If after recreating the Git provider integration you still have any issues, please contact us at support@codacy.com .","title":"Why did Codacy stop commenting on pull requests?"},{"location":"faq/troubleshooting/why-did-codacy-stop-commenting-on-pull-requests/#why-did-codacy-stop-commenting-on-pull-requests","text":"Various reasons can cause Codacy to stop commenting on pull requests. The most common is that the user who enabled the integration no longer has permissions on the repository or that the SSH key is no longer valid. To fix the issue, we recommend that a user with administrator permissions on the repository recreates the Git provider integration on Codacy: Enabling the GitHub integration Enabling the GitLab integration Enabling the Bitbucket integration If after recreating the Git provider integration you still have any issues, please contact us at support@codacy.com .","title":"Why did Codacy stop commenting on pull requests?"},{"location":"faq/troubleshooting/why-is-my-file-missing/","text":"Why is my file missing? \u00b6 In your repository's Files page you can view all the files that Codacy detected in your repository: While this page should display all the files in your repository, here is a list of reasons why some files might be missing: You are viewing the incorrect branch On the Files page you can select which branch to display, and sometimes not all files exist in all branches. The file might have been ignored The Files page doesn't display ignored files that aren't meant to be analyzed. The file has an extension that is not on the list of supported extensions Codacy has a default list of file extensions that it associates to each language. Files with extensions that aren't on the list don't appear on the Files page. The file might be too big Codacy only displays files up to 150 KB. Read the section below for more information. File size limitation on Codacy Cloud \u00b6 Codacy Cloud currently doesn't analyze files that are above 150 KB in size. Larger files aren't displayed on Codacy nor taken into account when grading your repository. Why is there a limit? \u00b6 As part of our performance improvement measures, we spent time breaking down the total time it takes to analyze a repository and found that a large percentage of time was spent on files that didn't add value to our users. Those files tend to be the biggest in the repository and are typically generated by or dependent on a third-party. It increased analysis time significantly due to the file size and even resulted in time-outs at some point, preventing the flagging of real issues. As a solution to this problem, we placed a size limit to the files that Codacy would analyze. This decreased the average analysis time and the number of timeouts, thus improving the overall performance for our users. What if I need to analyze a file that exceeds this limit? \u00b6 While Codacy will discard your file by default, you can still have it analyzed using the Codacy Analysis CLI and running the analysis locally. CLI doesn't have any limitation on file size, so you will be able to have your files analyzed this way. What about Codacy Self-hosted? \u00b6 By default, Codacy Self-hosted has the same limit of 150 KB as Codacy Cloud. However, the limit is configurable because the resource allocation for on-premise instances is decided by each organization. To update the file size limit: Edit the value of global.workerManager.workers.config.analysis.maxFileSizeBytes in the values-production.yaml file that you used to install Codacy: global : workerManager : workers : config : analysis : maxFileSizeBytes : 150000 Apply the new configuration by performing a Helm upgrade and specifying the Codacy Self-hosted version currently installed. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version <current Codacy Self-hosted version> \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Why is my file missing?"},{"location":"faq/troubleshooting/why-is-my-file-missing/#why-is-my-file-missing","text":"In your repository's Files page you can view all the files that Codacy detected in your repository: While this page should display all the files in your repository, here is a list of reasons why some files might be missing: You are viewing the incorrect branch On the Files page you can select which branch to display, and sometimes not all files exist in all branches. The file might have been ignored The Files page doesn't display ignored files that aren't meant to be analyzed. The file has an extension that is not on the list of supported extensions Codacy has a default list of file extensions that it associates to each language. Files with extensions that aren't on the list don't appear on the Files page. The file might be too big Codacy only displays files up to 150 KB. Read the section below for more information.","title":"Why is my file missing?"},{"location":"faq/troubleshooting/why-is-my-file-missing/#file-size-limitation-on-codacy-cloud","text":"Codacy Cloud currently doesn't analyze files that are above 150 KB in size. Larger files aren't displayed on Codacy nor taken into account when grading your repository.","title":"File size limitation on Codacy Cloud"},{"location":"faq/troubleshooting/why-isnt-my-public-repository-being-analyzed/","text":"Why isn't my public repository being analyzed? \u00b6 Codacy only analyzes open-source repositories if the owner of the repository is a committer to that repository.","title":"Why isn't my public repository being analyzed?"},{"location":"faq/troubleshooting/why-isnt-my-public-repository-being-analyzed/#why-isnt-my-public-repository-being-analyzed","text":"Codacy only analyzes open-source repositories if the owner of the repository is a committer to that repository.","title":"Why isn't my public repository being analyzed?"},{"location":"getting-started/getting-started-with-codacy/","text":"Getting started with Codacy \u00b6 Codacy automatically analyzes your source code and identifies issues as you go, helping you develop software more efficiently with fewer issues down the line. Through static code review analysis, Codacy notifies you of security issues, code coverage, code duplication, and code complexity in every commit and pull request. To get started, head to codacy.com and click Get started . 1. Sign up \u00b6 Sign up with a Git provider such as GitHub, GitLab, or Bitbucket. This links your Codacy user with your Git provider user, making it easier to add repositories to Codacy and invite your teammates. Codacy will request access to your Git provider during the authorization flow. Check the permissions that Codacy requires and why . Codacy will also ask you to fill in a few details about your company so we know a bit more about your use case. 2. Choose an organization \u00b6 Now, you'll need to add or join the organizations that contain your repositories. The organization with the same name as your Git provider username contains your personal repositories. Read more about organizations on Codacy . To start adding your repositories, select one of the organizations. Tip If you can't see the organization you're looking for, follow these troubleshooting instructions . 3. Add repositories \u00b6 Next, add the repositories that you wish to analyze. Codacy begins an initial analysis as soon as you add a repository and sets everything up to ensure your next commits on that repository are analyzed. Tip You can only add repositories on Codacy if you have the necessary permissions on your Git provider . Click the link Go to repository to see the code quality overview of your repository as soon as the initial analysis is complete: 4. Tweak your repository settings \u00b6 Check the static analysis results on the Issues page to explore the initial analysis results . The first analysis is based on Codacy default configurations , so you should tweak and adapt the following configurations to match your preferences and specific scenario: Ignore files that you want to exclude from the Codacy analysis Configure the code patterns that Codacy uses to analyze your repository Configure your quality settings for pull requests You're all set! \ud83c\udf89 \u00b6 Congratulations, your new repository is ready! Optionally, you can also: Add a Codacy badge to your repository displaying the current code quality grade or code coverage Add coverage reports to Codacy","title":"Getting started with Codacy"},{"location":"getting-started/getting-started-with-codacy/#getting-started-with-codacy","text":"Codacy automatically analyzes your source code and identifies issues as you go, helping you develop software more efficiently with fewer issues down the line. Through static code review analysis, Codacy notifies you of security issues, code coverage, code duplication, and code complexity in every commit and pull request. To get started, head to codacy.com and click Get started .","title":"Getting started with Codacy"},{"location":"getting-started/getting-started-with-codacy/#sign-up","text":"Sign up with a Git provider such as GitHub, GitLab, or Bitbucket. This links your Codacy user with your Git provider user, making it easier to add repositories to Codacy and invite your teammates. Codacy will request access to your Git provider during the authorization flow. Check the permissions that Codacy requires and why . Codacy will also ask you to fill in a few details about your company so we know a bit more about your use case.","title":"1. Sign up"},{"location":"getting-started/getting-started-with-codacy/#choose-organization","text":"Now, you'll need to add or join the organizations that contain your repositories. The organization with the same name as your Git provider username contains your personal repositories. Read more about organizations on Codacy . To start adding your repositories, select one of the organizations. Tip If you can't see the organization you're looking for, follow these troubleshooting instructions .","title":"2. Choose an organization"},{"location":"getting-started/getting-started-with-codacy/#add-repositories","text":"Next, add the repositories that you wish to analyze. Codacy begins an initial analysis as soon as you add a repository and sets everything up to ensure your next commits on that repository are analyzed. Tip You can only add repositories on Codacy if you have the necessary permissions on your Git provider . Click the link Go to repository to see the code quality overview of your repository as soon as the initial analysis is complete:","title":"3. Add repositories"},{"location":"getting-started/getting-started-with-codacy/#tweak-settings","text":"Check the static analysis results on the Issues page to explore the initial analysis results . The first analysis is based on Codacy default configurations , so you should tweak and adapt the following configurations to match your preferences and specific scenario: Ignore files that you want to exclude from the Codacy analysis Configure the code patterns that Codacy uses to analyze your repository Configure your quality settings for pull requests","title":"4. Tweak your repository settings"},{"location":"getting-started/getting-started-with-codacy/#all-set","text":"Congratulations, your new repository is ready! Optionally, you can also: Add a Codacy badge to your repository displaying the current code quality grade or code coverage Add coverage reports to Codacy","title":"You're all set! \ud83c\udf89"},{"location":"getting-started/supported-languages-and-tools/","text":"Supported languages and tools \u00b6 For each supported programming language, Codacy generally provides: Static Analysis Code Duplication Code Complexity Test Coverage The table below lists all programming languages that Codacy supports and the corresponding tools that Codacy uses to analyze your source code. Besides this, Codacy uses cloc to calculate the source lines of code for all supported languages, and supports multiple test coverage report formats . Language Static Analysis Suggested fixes Duplication Complexity Apex PMD - - AWS Cloud\u200bFormation Checkov - - Azure Resource Manager Templates Checkov - - C Clang-Tidy 1 , Cppcheck , Flawfinder PMD CPD - C# Sonar C# PMD CPD SonarC# C++ Clang-Tidy 1 , Cppcheck , Flawfinder PMD CPD - CoffeeScript Coffeelint - - Crystal Ameba - - CSS CSSLint , Stylelint - - Dockerfile Hadolint - - Elixir Credo - - Go aligncheck 1 , deadcode 1 , Gosec 1 , Revive , Staticcheck 1 PMD CPD Gocyclo Groovy CodeNarc - - Java Checkstyle , PMD , SpotBugs 1 PMD CPD PMD JavaScript ESLint , JSHint , PMD ESLint \ud83d\udd27 PMD CPD ESLint JSON Jackson Linter - - JSP PMD - - Kotlin Detekt jscpd Detekt Kubernetes Checkov - - Less Stylelint - - Markdown RemarkLint - - Objective-C Faux Pas 1 - - PHP PHP_CodeSniffer , PHP Mess Detector PHPCPD PHP Depend PL/SQL PMD - - PostgreSQL SQLint - - PowerShell PSScriptAnalyser - - Python Bandit , Prospector , Pylint PMD CPD Radon Ruby Brakeman , Bundler Audit , Rubocop Flay Rubocop Sass Stylelint - - Scala Scalameta , Scalastyle , SpotBugs 1 PMD CPD Scalastyle , Scala 2 compiler and standard library Serverless Framework Checkov - - Shell ShellCheck - - Swift SwiftLint , Tailor PMD CPD SwiftLint 2 Terraform Checkov - - Transact-SQL TSQLLint - - TypeScript ESLint , TSLint ESLint \ud83d\udd27 jscpd ESLint Velocity PMD - - Visual Basic SonarVB - - Visualforce PMD - - XML PMD - - XSL PMD - - 1 : Supported as a client-side tool . 2 : Supports reporting warnings or errors on functions above specific complexity thresholds. Enable the rule Cyclomatic Complexity on the Code Patterns page , or use a configuration file to customize the thresholds. \ud83d\udd27 : Supports suggesting fixes for identified issues. See also \u00b6 Getting started with Codacy Client-side tools Codacy plugin tools","title":"Supported languages and tools"},{"location":"getting-started/supported-languages-and-tools/#supported-languages-and-tools","text":"For each supported programming language, Codacy generally provides: Static Analysis Code Duplication Code Complexity Test Coverage The table below lists all programming languages that Codacy supports and the corresponding tools that Codacy uses to analyze your source code. Besides this, Codacy uses cloc to calculate the source lines of code for all supported languages, and supports multiple test coverage report formats . Language Static Analysis Suggested fixes Duplication Complexity Apex PMD - - AWS Cloud\u200bFormation Checkov - - Azure Resource Manager Templates Checkov - - C Clang-Tidy 1 , Cppcheck , Flawfinder PMD CPD - C# Sonar C# PMD CPD SonarC# C++ Clang-Tidy 1 , Cppcheck , Flawfinder PMD CPD - CoffeeScript Coffeelint - - Crystal Ameba - - CSS CSSLint , Stylelint - - Dockerfile Hadolint - - Elixir Credo - - Go aligncheck 1 , deadcode 1 , Gosec 1 , Revive , Staticcheck 1 PMD CPD Gocyclo Groovy CodeNarc - - Java Checkstyle , PMD , SpotBugs 1 PMD CPD PMD JavaScript ESLint , JSHint , PMD ESLint \ud83d\udd27 PMD CPD ESLint JSON Jackson Linter - - JSP PMD - - Kotlin Detekt jscpd Detekt Kubernetes Checkov - - Less Stylelint - - Markdown RemarkLint - - Objective-C Faux Pas 1 - - PHP PHP_CodeSniffer , PHP Mess Detector PHPCPD PHP Depend PL/SQL PMD - - PostgreSQL SQLint - - PowerShell PSScriptAnalyser - - Python Bandit , Prospector , Pylint PMD CPD Radon Ruby Brakeman , Bundler Audit , Rubocop Flay Rubocop Sass Stylelint - - Scala Scalameta , Scalastyle , SpotBugs 1 PMD CPD Scalastyle , Scala 2 compiler and standard library Serverless Framework Checkov - - Shell ShellCheck - - Swift SwiftLint , Tailor PMD CPD SwiftLint 2 Terraform Checkov - - Transact-SQL TSQLLint - - TypeScript ESLint , TSLint ESLint \ud83d\udd27 jscpd ESLint Velocity PMD - - Visual Basic SonarVB - - Visualforce PMD - - XML PMD - - XSL PMD - - 1 : Supported as a client-side tool . 2 : Supports reporting warnings or errors on functions above specific complexity thresholds. Enable the rule Cyclomatic Complexity on the Code Patterns page , or use a configuration file to customize the thresholds. \ud83d\udd27 : Supports suggesting fixes for identified issues.","title":"Supported languages and tools"},{"location":"getting-started/supported-languages-and-tools/#see-also","text":"Getting started with Codacy Client-side tools Codacy plugin tools","title":"See also"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/","text":"Which permissions does Codacy need from my account? \u00b6 Codacy Cloud uses OAuth to handle logins. We support the following providers: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-In Depending on the provider, we may request different permissions due to different OAuth implementations. We strive to request only the necessary permissions. GitHub Cloud \u00b6 If you log in with GitHub, Codacy requires the following app permissions : Repository permissions: Checks: Checks on code - Read & Write Issues: Issues and related comments, assignees, labels, and milestones - Read & Write Metadata: Search repositories, list collaborators, and access repository metadata - Read Only Pull requests: Pull requests and related comments, assignees, labels, milestones, and merges - Read & Write Webhooks: Manage the post-receive hooks for a repository - Read & Write Commit statuses: Commit statuses - Read & Write Administration: Create SSH keys - Read & Write. Codacy creates an SSH key on the repository to allow cloning and integrating with your repository. Organization permissions: Members: Organization members and teams - Read Only Webhooks: Manage the post-receive hooks for an organization - Read & Write User permissions: These permissions are granted on an individual user basis as part of the user authorization flow. They will be also be displayed during account installation for transparency. Email addresses: Manage a user's email addresses - Read Only Git SSH keys: Create SSH keys - Read & Write Note Codacy asks for permissions to create SSH keys because it needs to create an SSH key in your account in the following situations: If your repository uses submodules, so that Codacy can clone the repositories for each submodule If Codacy fails to integrate with a repository using the repository key, so that Codacy can continue to perform analysis Codacy only adds read-only SSH keys to be able to clone repositories and won't have access to any of your existing SSH keys. You have full control over which organizations and repositories Codacy is authorized to access, and you can also revoke the keys created by Codacy at any time . Codacy doesn't change the contents or member privileges of any repository you authorize it to analyze. We understand the desire for security and privacy and find that the SSH protocol is preferable to HTTPS as it separates Codacy's access rights from the one of the users. GitLab Cloud \u00b6 If you sign up with GitLab Cloud, Codacy requires the following permissions/scopes : api permissions to access the authenticated user's API read_user permissions to read the authenticated user's personal information read_repository permissions to read the repositories openid to authenticate using OpenID Connect Bitbucket Cloud \u00b6 If you log in with Bitbucket, Codacy requires the following permissions/scopes : Read and modify your account information Read and modify your repositories' issues Read your workspace's project settings and read repositories contained within your workspace's projects Read and modify your repositories and their pull requests Administer your repositories Read your group membership information Read and modify your repositories' webhooks Google Sign-In \u00b6 If you log in with Google, Codacy requires the following permissions/scopes : Email permission Revoking access to integrations \u00b6 To revoke the access from Codacy to one or more of the OAuth providers: Click on your avatar on the top right-hand corner and select Your Account , tab Access Management . The Access Management page lists all current integrations with Git providers or Google that you used to sign in or log in to Codacy. To revoke access to an integration, click the button Revoke access for the intended integration. To ensure that the integration is removed not only on Codacy but also on the integration side, we recommend that you follow the instructions on how to revoke the Codacy OAuth application on your provider: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-in After revoking an integration, Codacy will no longer be able to access or manipulate resources that require API calls, such as detecting new pull requests or adding comments to pull requests. However, Codacy will still be able to perform operations that only require using the Git protocol either via SSH or HTTPS, such as detecting new commits and calculating diffs. To remove your repositories from Codacy and stop the analysis you must delete them from your Codacy account . If you need to use an integration that you have previously revoked, log in again to Codacy with that integration so that Codacy can request the required permissions from the provider.","title":"Which permissions does Codacy need from my account?"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#which-permissions-does-codacy-need-from-my-account","text":"Codacy Cloud uses OAuth to handle logins. We support the following providers: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-In Depending on the provider, we may request different permissions due to different OAuth implementations. We strive to request only the necessary permissions.","title":"Which permissions does Codacy need from my account?"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#github-cloud","text":"If you log in with GitHub, Codacy requires the following app permissions : Repository permissions: Checks: Checks on code - Read & Write Issues: Issues and related comments, assignees, labels, and milestones - Read & Write Metadata: Search repositories, list collaborators, and access repository metadata - Read Only Pull requests: Pull requests and related comments, assignees, labels, milestones, and merges - Read & Write Webhooks: Manage the post-receive hooks for a repository - Read & Write Commit statuses: Commit statuses - Read & Write Administration: Create SSH keys - Read & Write. Codacy creates an SSH key on the repository to allow cloning and integrating with your repository. Organization permissions: Members: Organization members and teams - Read Only Webhooks: Manage the post-receive hooks for an organization - Read & Write User permissions: These permissions are granted on an individual user basis as part of the user authorization flow. They will be also be displayed during account installation for transparency. Email addresses: Manage a user's email addresses - Read Only Git SSH keys: Create SSH keys - Read & Write Note Codacy asks for permissions to create SSH keys because it needs to create an SSH key in your account in the following situations: If your repository uses submodules, so that Codacy can clone the repositories for each submodule If Codacy fails to integrate with a repository using the repository key, so that Codacy can continue to perform analysis Codacy only adds read-only SSH keys to be able to clone repositories and won't have access to any of your existing SSH keys. You have full control over which organizations and repositories Codacy is authorized to access, and you can also revoke the keys created by Codacy at any time . Codacy doesn't change the contents or member privileges of any repository you authorize it to analyze. We understand the desire for security and privacy and find that the SSH protocol is preferable to HTTPS as it separates Codacy's access rights from the one of the users.","title":"GitHub Cloud"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#gitlab-cloud","text":"If you sign up with GitLab Cloud, Codacy requires the following permissions/scopes : api permissions to access the authenticated user's API read_user permissions to read the authenticated user's personal information read_repository permissions to read the repositories openid to authenticate using OpenID Connect","title":"GitLab Cloud"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#bitbucket-cloud","text":"If you log in with Bitbucket, Codacy requires the following permissions/scopes : Read and modify your account information Read and modify your repositories' issues Read your workspace's project settings and read repositories contained within your workspace's projects Read and modify your repositories and their pull requests Administer your repositories Read your group membership information Read and modify your repositories' webhooks","title":"Bitbucket Cloud"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#google-sign-in","text":"If you log in with Google, Codacy requires the following permissions/scopes : Email permission","title":"Google Sign-In"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#revoking-access-to-integrations","text":"To revoke the access from Codacy to one or more of the OAuth providers: Click on your avatar on the top right-hand corner and select Your Account , tab Access Management . The Access Management page lists all current integrations with Git providers or Google that you used to sign in or log in to Codacy. To revoke access to an integration, click the button Revoke access for the intended integration. To ensure that the integration is removed not only on Codacy but also on the integration side, we recommend that you follow the instructions on how to revoke the Codacy OAuth application on your provider: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-in After revoking an integration, Codacy will no longer be able to access or manipulate resources that require API calls, such as detecting new pull requests or adding comments to pull requests. However, Codacy will still be able to perform operations that only require using the Git protocol either via SSH or HTTPS, such as detecting new commits and calculating diffs. To remove your repositories from Codacy and stop the analysis you must delete them from your Codacy account . If you need to use an integration that you have previously revoked, log in again to Codacy with that integration so that Codacy can request the required permissions from the provider.","title":"Revoking access to integrations"},{"location":"organizations/managing-people/","text":"Managing people \u00b6 Members of an organization can see the details of the repositories in that organization and add new repositories to be analyzed by Codacy. Besides this, Codacy only analyzes commits to private repositories from contributors who are members of the corresponding organization on Codacy. Important Make sure that you invite or ask your team members to join your organization on Codacy so that Codacy analyzes their commits on private repositories. To list and manage the members of your organization, open your organization Settings , page People . This page also shows when the organization members last logged in to Codacy: Joining an organization \u00b6 To become a member of an organization on Codacy you must sign up to Codacy using your Git provider and follow the instructions to either join an existing organization or add a new one. To join or add an organization after having complete the signup process, click Organizations on the top right-hand menu under your avatar: On Codacy Cloud , organization owners can control how team members join their organization by choosing one of the following options on the page Plan and billing of the organization: Allow new people to join immediately: team members with access to the organization on the Git provider can join the organization on Codacy immediately. Review join requests from new people: when team members with access to the organization on the Git provider join the organization on Codacy, an organization owner must manually approve their requests to join on the page People . Team members that have already been invited to join the organization are automatically approved, and you can also skip the approval process for organization owners. Adding people to your organization \u00b6 On Codacy Cloud , organization owners can also invite team members to their organization on Codacy. This is useful to allow Codacy to analyze commits in private repositories by contributors who haven't signed up to Codacy or joined the organization yet. To add members to your organization: Open your organization Settings , page People , and click the button Add people . Select people from the list displaying pending requests to join the organization, as well as recent contributors to the private repositories in your organization. Alternatively, click Add people using email addresses to manually enter the list of email addresses of the people you wish to add. Confirm the updated billing details displayed at the bottom of the window and click the button Add people . Removing people from your organization \u00b6 Members of an organization on Codacy can remove themselves from the organization, and organization owners can also remove other members. When a member leaves an organization: Codacy stops analyzing commits to private repositories in the organization from contributors who are no longer members of the organization on Codacy Codacy stops analyzing repositories that were added by the member Organizations must have at least one owner, so when the last organization owner leaves the organization they must either add someone else as owner or delete the organization To remove members from your organization open your organization Settings , page People , and click the icon next to the members you wish to remove:","title":"Managing people"},{"location":"organizations/managing-people/#managing-people","text":"Members of an organization can see the details of the repositories in that organization and add new repositories to be analyzed by Codacy. Besides this, Codacy only analyzes commits to private repositories from contributors who are members of the corresponding organization on Codacy. Important Make sure that you invite or ask your team members to join your organization on Codacy so that Codacy analyzes their commits on private repositories. To list and manage the members of your organization, open your organization Settings , page People . This page also shows when the organization members last logged in to Codacy:","title":"Managing people"},{"location":"organizations/managing-people/#joining","text":"To become a member of an organization on Codacy you must sign up to Codacy using your Git provider and follow the instructions to either join an existing organization or add a new one. To join or add an organization after having complete the signup process, click Organizations on the top right-hand menu under your avatar: On Codacy Cloud , organization owners can control how team members join their organization by choosing one of the following options on the page Plan and billing of the organization: Allow new people to join immediately: team members with access to the organization on the Git provider can join the organization on Codacy immediately. Review join requests from new people: when team members with access to the organization on the Git provider join the organization on Codacy, an organization owner must manually approve their requests to join on the page People . Team members that have already been invited to join the organization are automatically approved, and you can also skip the approval process for organization owners.","title":"Joining an organization"},{"location":"organizations/managing-people/#adding-people","text":"On Codacy Cloud , organization owners can also invite team members to their organization on Codacy. This is useful to allow Codacy to analyze commits in private repositories by contributors who haven't signed up to Codacy or joined the organization yet. To add members to your organization: Open your organization Settings , page People , and click the button Add people . Select people from the list displaying pending requests to join the organization, as well as recent contributors to the private repositories in your organization. Alternatively, click Add people using email addresses to manually enter the list of email addresses of the people you wish to add. Confirm the updated billing details displayed at the bottom of the window and click the button Add people .","title":"Adding people to your organization"},{"location":"organizations/managing-people/#removing-people","text":"Members of an organization on Codacy can remove themselves from the organization, and organization owners can also remove other members. When a member leaves an organization: Codacy stops analyzing commits to private repositories in the organization from contributors who are no longer members of the organization on Codacy Codacy stops analyzing repositories that were added by the member Organizations must have at least one owner, so when the last organization owner leaves the organization they must either add someone else as owner or delete the organization To remove members from your organization open your organization Settings , page People , and click the icon next to the members you wish to remove:","title":"Removing people from your organization"},{"location":"organizations/managing-repositories/","text":"Managing repositories \u00b6 To see a list of the repositories that Codacy is monitoring, open the page Repositories under your organization. This page lists the repositories that already belong to your organization on Codacy, and provides additional information that allows you to compare the repositories in the list: Grade Issues metric Complexity metric Duplication metric Coverage metric Last updated time The list also displays error messages and troubleshooting guidance for repositories that have an issue, such as when there are no committers added to the organization or when Codacy stopped having access to the repository. If you have many repositories, you can use the search field above the list to quickly find a specific repository. Adding a repository \u00b6 Analyzing private repositories is only available on paid plans To add a new repository to Codacy, click the button Add repository at the top right-hand corner of the page. This opens a window listing the repositories in your Git provider organization that don't belong to your organization on Codacy yet. Important To see your repositories in this list, make sure that you have admin permissions over the repositories on the Git provider and that Codacy has permissions to access the repositories . Add one or multiple repositories to your organization by clicking Add next to the repositories. If you have many repositories, you can use the search field above the list to quickly find a specific repository. After adding repositories, close the window to return to the list of repositories in your organization. Although Codacy will immediately start analyzing the new repositories, they will display empty metrics until the first analysis returns results.","title":"Managing repositories"},{"location":"organizations/managing-repositories/#managing-repositories","text":"To see a list of the repositories that Codacy is monitoring, open the page Repositories under your organization. This page lists the repositories that already belong to your organization on Codacy, and provides additional information that allows you to compare the repositories in the list: Grade Issues metric Complexity metric Duplication metric Coverage metric Last updated time The list also displays error messages and troubleshooting guidance for repositories that have an issue, such as when there are no committers added to the organization or when Codacy stopped having access to the repository. If you have many repositories, you can use the search field above the list to quickly find a specific repository.","title":"Managing repositories"},{"location":"organizations/managing-repositories/#adding-a-repository","text":"Analyzing private repositories is only available on paid plans To add a new repository to Codacy, click the button Add repository at the top right-hand corner of the page. This opens a window listing the repositories in your Git provider organization that don't belong to your organization on Codacy yet. Important To see your repositories in this list, make sure that you have admin permissions over the repositories on the Git provider and that Codacy has permissions to access the repositories . Add one or multiple repositories to your organization by clicking Add next to the repositories. If you have many repositories, you can use the search field above the list to quickly find a specific repository. After adding repositories, close the window to return to the list of repositories in your organization. Although Codacy will immediately start analyzing the new repositories, they will display empty metrics until the first analysis returns results.","title":"Adding a repository"},{"location":"organizations/organization-overview/","text":"Organization Overview \u00b6 This feature is only available on paid plans The Organization Overview provides an overview of repositories that belong to the same Git provider organization. Here you can compare their statuses and check for items that require your attention. Note The Organization Overview calculates metrics and displays data only for the repositories that you have access to. This means that depending on their permissions, two users could see different results on their Organization Overview. To access your Organization Overview, select an organization from the top navigation bar and select Overview on the left navigation sidebar. On the Organization Overview you have three areas to help you monitor your repositories: Overall quality chart Open pull requests Last updated repositories The following sections provide a detailed description of each dashboard area. Overall quality chart \u00b6 The Overall quality chart compares the repositories in your organization regarding grade, issues, complex files, duplication, and coverage. Each tab displays the average value for the corresponding metric across your repositories. Hover the mouse pointer over the bars to see the metrics for the corresponding repositories. Click the bars to navigate directly to the corresponding repository. If you have over 8 repositories, the chart displays your repositories grouped by grade or percentage intervals: Tip If you don't have coverage set up for any of your repositories yet, the coverage tab provides you with instructions on how to add coverage for your repositories . Open pull requests \u00b6 The Most problematic tab displays a short list of the open pull requests that aren't up to standards and have the most potential to negatively affect your code quality. Click directly on each pull request to see more details. The Last updated tab displays open pull requests sorted by the date of update with one of the following status: Not up to standards Up to standards Analysis failed (something went wrong during the analysis) Analyzing (intermediate status while Codacy is analyzing the pull request) Last updated repositories \u00b6 The Last updated repositories list displays the last updated repositories, sorted by reverse date of the last update. Each card displays the date of the last update and the current grade of the repository. Click See all to see all repositories in your organization. Important If you are using Bitbucket Server the list displays the repositories in alphabetical order because Codacy can't obtain the information on when the repositories were last updated from this Git provider.","title":"Organization Overview"},{"location":"organizations/organization-overview/#organization-overview","text":"This feature is only available on paid plans The Organization Overview provides an overview of repositories that belong to the same Git provider organization. Here you can compare their statuses and check for items that require your attention. Note The Organization Overview calculates metrics and displays data only for the repositories that you have access to. This means that depending on their permissions, two users could see different results on their Organization Overview. To access your Organization Overview, select an organization from the top navigation bar and select Overview on the left navigation sidebar. On the Organization Overview you have three areas to help you monitor your repositories: Overall quality chart Open pull requests Last updated repositories The following sections provide a detailed description of each dashboard area.","title":"Organization Overview"},{"location":"organizations/organization-overview/#overall-quality-chart","text":"The Overall quality chart compares the repositories in your organization regarding grade, issues, complex files, duplication, and coverage. Each tab displays the average value for the corresponding metric across your repositories. Hover the mouse pointer over the bars to see the metrics for the corresponding repositories. Click the bars to navigate directly to the corresponding repository. If you have over 8 repositories, the chart displays your repositories grouped by grade or percentage intervals: Tip If you don't have coverage set up for any of your repositories yet, the coverage tab provides you with instructions on how to add coverage for your repositories .","title":"Overall quality chart"},{"location":"organizations/organization-overview/#open-pull-requests","text":"The Most problematic tab displays a short list of the open pull requests that aren't up to standards and have the most potential to negatively affect your code quality. Click directly on each pull request to see more details. The Last updated tab displays open pull requests sorted by the date of update with one of the following status: Not up to standards Up to standards Analysis failed (something went wrong during the analysis) Analyzing (intermediate status while Codacy is analyzing the pull request)","title":"Open pull requests"},{"location":"organizations/organization-overview/#last-updated-repositories","text":"The Last updated repositories list displays the last updated repositories, sorted by reverse date of the last update. Each card displays the date of the last update and the current grade of the repository. Click See all to see all repositories in your organization. Important If you are using Bitbucket Server the list displays the repositories in alphabetical order because Codacy can't obtain the information on when the repositories were last updated from this Git provider.","title":"Last updated repositories"},{"location":"organizations/roles-and-permissions-for-synced-organizations/","text":"Roles and permissions for synced organizations \u00b6 Depending on your role on the Git provider you will have different permissions on Codacy: Provider Role Join organization Ignore issues Add repository Configure repository Configure patterns View repository Invite and accept members Modify billing GitHub Cloud and GitHub Enterprise Outside Collaborator 1 No No No No No No No No Repository Read Yes 2 Configurable No No Configurable Yes No No Repository Triage Yes 2 Configurable No No Configurable Yes No No Repository Write Yes 2 Configurable No Yes Configurable Yes No No Repository Maintain Yes 2 Configurable No Yes Configurable Yes No No Repository Admin Yes 2 Yes 2 Yes Yes Yes 2 Yes No No Organization Owner Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes GitLab Cloud and GitLab Enterprise External User 1 No No No No No No No No Guest Yes 2 Configurable No No Configurable Yes No No Reporter Yes 2 Configurable No No Configurable Yes No No Developer Yes 2 Configurable No No Configurable Yes No No Maintainer Yes 2 Configurable No No Configurable Yes No No Owner Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes Administrator Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes Bitbucket Cloud and Bitbucket Server Read, Write 3 Yes 2 Configurable No No Configurable Yes No No Admin Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes 1 : Outside Collaborators and External Users aren't supported as Members of organizations on Codacy. However, you can add them so that Codacy analyzes their commits to private repositories. 2 : Joining an organization may need an approval depending on your setting for accepting new people . 3 : Codacy can't distinguish the Bitbucket roles Read and Write because of a limitation on the Bitbucket API. See managing people to list and manage the members of your organization. Configuring who can change analysis configurations \u00b6 By default, only users with Write permission on a repository can change analysis configurations. In your Organization's settings, you can find Members privileges where you can define the lowest permission required to ignore issues for your organization and configure your code patterns on your organization. Codacy doesn't allow changing the role of a user, as the roles on Codacy are mirrored from your Git provider and applied to each repository.","title":"Roles and permissions for synced organizations"},{"location":"organizations/roles-and-permissions-for-synced-organizations/#roles-and-permissions-for-synced-organizations","text":"Depending on your role on the Git provider you will have different permissions on Codacy: Provider Role Join organization Ignore issues Add repository Configure repository Configure patterns View repository Invite and accept members Modify billing GitHub Cloud and GitHub Enterprise Outside Collaborator 1 No No No No No No No No Repository Read Yes 2 Configurable No No Configurable Yes No No Repository Triage Yes 2 Configurable No No Configurable Yes No No Repository Write Yes 2 Configurable No Yes Configurable Yes No No Repository Maintain Yes 2 Configurable No Yes Configurable Yes No No Repository Admin Yes 2 Yes 2 Yes Yes Yes 2 Yes No No Organization Owner Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes GitLab Cloud and GitLab Enterprise External User 1 No No No No No No No No Guest Yes 2 Configurable No No Configurable Yes No No Reporter Yes 2 Configurable No No Configurable Yes No No Developer Yes 2 Configurable No No Configurable Yes No No Maintainer Yes 2 Configurable No No Configurable Yes No No Owner Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes Administrator Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes Bitbucket Cloud and Bitbucket Server Read, Write 3 Yes 2 Configurable No No Configurable Yes No No Admin Yes 2 Yes Yes Yes Yes 2 Yes Yes Yes 1 : Outside Collaborators and External Users aren't supported as Members of organizations on Codacy. However, you can add them so that Codacy analyzes their commits to private repositories. 2 : Joining an organization may need an approval depending on your setting for accepting new people . 3 : Codacy can't distinguish the Bitbucket roles Read and Write because of a limitation on the Bitbucket API. See managing people to list and manage the members of your organization.","title":"Roles and permissions for synced organizations"},{"location":"organizations/roles-and-permissions-for-synced-organizations/#change-analysis-configuration","text":"By default, only users with Write permission on a repository can change analysis configurations. In your Organization's settings, you can find Members privileges where you can define the lowest permission required to ignore issues for your organization and configure your code patterns on your organization. Codacy doesn't allow changing the role of a user, as the roles on Codacy are mirrored from your Git provider and applied to each repository.","title":"Configuring who can change analysis configurations"},{"location":"organizations/what-are-synced-organizations/","text":"What are synced organizations \u00b6 Synced organizations let you automatically import your Git provider organizations, repositories (including your personal repositories that don't belong to a Git provider organization), and team members into Codacy with a few clicks. Changes to the organizations, repositories, and team members are synchronized with Codacy in real-time, avoiding the manual management of repositories and teams. Adding an organization \u00b6 To add a new organization to Codacy, select Add organization on the navigation menu. This opens the list of organizations on your Git providers. The organization with the same name as your Git provider username contains your personal repositories. To add a new organization to Codacy, click the link Add for that organization. To join an organization that's already on Codacy, click the link Join for that organization. To add organizations from a Git provider not yet listed on this page, click Add provider and give the necessary permissions for Codacy to sync with the new Git provider and display your organizations. Note If you can't see the organization you are looking for, follow the instructions in the card Adding new organizations or these troubleshooting instructions . Updates on the Git provider \u00b6 In case you change your organization or repository on the Git provider, some changes will be reflected on Codacy. The following cases are supported: Provider Rename repository Change repository visibility Delete repository Rename organization or group Remove member from organization or group Delete organization or group GitHub Cloud Yes Yes Yes Yes Yes Yes GitHub Enterprise Yes Yes Yes Yes Yes Yes GitLab Cloud No No No No No No GitLab Enterprise Yes Yes Yes Yes Yes Yes Bitbucket Cloud Yes Yes No No No No Bitbucket Server Yes Yes No No No No Check out the roles and permission mapping from the Git providers . Deleting an organization \u00b6 Delete an organization to remove that organization and all its repositories from Codacy. To delete an organization, open the Profile page and click the button Delete organization . Note If you're using Codacy Cloud we will ask for your feedback on why you are deleting your organization. See also \u00b6 How does Codacy support GitLab Cloud? How does Codacy support GitLab Enterprise? How does Codacy support Bitbucket Cloud? How does Codacy support Bitbucket Server?","title":"What are synced organizations"},{"location":"organizations/what-are-synced-organizations/#what-are-synced-organizations","text":"Synced organizations let you automatically import your Git provider organizations, repositories (including your personal repositories that don't belong to a Git provider organization), and team members into Codacy with a few clicks. Changes to the organizations, repositories, and team members are synchronized with Codacy in real-time, avoiding the manual management of repositories and teams.","title":"What are synced organizations"},{"location":"organizations/what-are-synced-organizations/#adding-an-organization","text":"To add a new organization to Codacy, select Add organization on the navigation menu. This opens the list of organizations on your Git providers. The organization with the same name as your Git provider username contains your personal repositories. To add a new organization to Codacy, click the link Add for that organization. To join an organization that's already on Codacy, click the link Join for that organization. To add organizations from a Git provider not yet listed on this page, click Add provider and give the necessary permissions for Codacy to sync with the new Git provider and display your organizations. Note If you can't see the organization you are looking for, follow the instructions in the card Adding new organizations or these troubleshooting instructions .","title":"Adding an organization"},{"location":"organizations/what-are-synced-organizations/#updates-on-the-git-provider","text":"In case you change your organization or repository on the Git provider, some changes will be reflected on Codacy. The following cases are supported: Provider Rename repository Change repository visibility Delete repository Rename organization or group Remove member from organization or group Delete organization or group GitHub Cloud Yes Yes Yes Yes Yes Yes GitHub Enterprise Yes Yes Yes Yes Yes Yes GitLab Cloud No No No No No No GitLab Enterprise Yes Yes Yes Yes Yes Yes Bitbucket Cloud Yes Yes No No No No Bitbucket Server Yes Yes No No No No Check out the roles and permission mapping from the Git providers .","title":"Updates on the Git provider"},{"location":"organizations/what-are-synced-organizations/#deleting-an-organization","text":"Delete an organization to remove that organization and all its repositories from Codacy. To delete an organization, open the Profile page and click the button Delete organization . Note If you're using Codacy Cloud we will ask for your feedback on why you are deleting your organization.","title":"Deleting an organization"},{"location":"organizations/what-are-synced-organizations/#see-also","text":"How does Codacy support GitLab Cloud? How does Codacy support GitLab Enterprise? How does Codacy support Bitbucket Cloud? How does Codacy support Bitbucket Server?","title":"See also"},{"location":"organizations/manual-organizations/administrative-permissions/","text":"Administrative permissions \u00b6 Organization permissions allow fine-grained control over your organization's members and repositories. All organizations have an Administrators team. Each member of this team is an administrator of the entire organization, and all repositories in the organization are automatically added to this team. Any member of the Administrators team has full read/write permissions. You can view the actions available per permission level here: Organization Admin Add/Remove members Create/Remove teams Change organization settings Edit Billing information Delete Organization Add/Remove repositories Add/Remove integrations of team repositories Change code patterns Define/Change quality settings See repository issues and metrics For users that don't have Admin permissions, they will need to be added to a team . When adding users to a team, the Administrator can decide the level of permissions each team member should have for the repositories within that team. Team Read See repository issues and metrics Add repositories to the Administrators team (to add repository to a specific team needs to have write permissions) Write Same as Read permissions plus: Add repositories to specific teams Add/Remove integrations of team repositories Change code patterns See repository issues and metrics Ignore issues / remove patterns","title":"Administrative permissions"},{"location":"organizations/manual-organizations/administrative-permissions/#administrative-permissions","text":"Organization permissions allow fine-grained control over your organization's members and repositories. All organizations have an Administrators team. Each member of this team is an administrator of the entire organization, and all repositories in the organization are automatically added to this team. Any member of the Administrators team has full read/write permissions. You can view the actions available per permission level here: Organization Admin Add/Remove members Create/Remove teams Change organization settings Edit Billing information Delete Organization Add/Remove repositories Add/Remove integrations of team repositories Change code patterns Define/Change quality settings See repository issues and metrics For users that don't have Admin permissions, they will need to be added to a team . When adding users to a team, the Administrator can decide the level of permissions each team member should have for the repositories within that team. Team Read See repository issues and metrics Add repositories to the Administrators team (to add repository to a specific team needs to have write permissions) Write Same as Read permissions plus: Add repositories to specific teams Add/Remove integrations of team repositories Change code patterns See repository issues and metrics Ignore issues / remove patterns","title":"Administrative permissions"},{"location":"organizations/manual-organizations/creating-and-managing-teams/","text":"Creating and managing teams \u00b6 You can create and manage teams on the Teams page for your organization: Click your avatar and select Organizations Select the organization whose teams you want to manage Open the organization Settings , page Teams Creating a team \u00b6 On the Teams page: Click Create new team Enter the name of the team and click Create new team or press enter to create the team Managing teams \u00b6 On the Teams page, click: Edit name to rename a team Delete team and confirm the operation to delete a team Adding team members \u00b6 On the Teams page: Click Invite members Enter the email address of the user to invite and select the team for the new user Tip You can add multiple email addresses at once by separating them with commas. Click Invite new member Removing team members \u00b6 On the Teams page: Click the name of the team from where you want to remove the team member Click the X to the left of the team member name","title":"Creating and managing teams"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#creating-and-managing-teams","text":"You can create and manage teams on the Teams page for your organization: Click your avatar and select Organizations Select the organization whose teams you want to manage Open the organization Settings , page Teams","title":"Creating and managing teams"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#creating-a-team","text":"On the Teams page: Click Create new team Enter the name of the team and click Create new team or press enter to create the team","title":"Creating a team"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#managing-teams","text":"On the Teams page, click: Edit name to rename a team Delete team and confirm the operation to delete a team","title":"Managing teams"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#adding-team-members","text":"On the Teams page: Click Invite members Enter the email address of the user to invite and select the team for the new user Tip You can add multiple email addresses at once by separating them with commas. Click Invite new member","title":"Adding team members"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#removing-team-members","text":"On the Teams page: Click the name of the team from where you want to remove the team member Click the X to the left of the team member name","title":"Removing team members"},{"location":"organizations/manual-organizations/creating-and-renaming-an-organization/","text":"Creating and renaming an organization \u00b6 Note From April 3rd, 2020 onward it's no longer possible to create new Manual Organizations on Codacy cloud, although you can continue using your existing Manual Organizations. Please use the improved Synced Organizations instead, since you will no longer be able to add new repositories under Manual Organizations to avoid duplication of repositories. This change doesn't impact Codacy self-hosted. To create an organization, click on your avatar and select Organizations . Type the name in the Create new organization field and click on Create New . Renaming your organization \u00b6 You can always rename an organization but: You won't be able to change it back if someone else registers your original organization name. This may break all your repository URLs. To ease the migration process, your original URLs will be valid for at least 15 days.","title":"Creating and renaming an organization"},{"location":"organizations/manual-organizations/creating-and-renaming-an-organization/#creating-and-renaming-an-organization","text":"Note From April 3rd, 2020 onward it's no longer possible to create new Manual Organizations on Codacy cloud, although you can continue using your existing Manual Organizations. Please use the improved Synced Organizations instead, since you will no longer be able to add new repositories under Manual Organizations to avoid duplication of repositories. This change doesn't impact Codacy self-hosted. To create an organization, click on your avatar and select Organizations . Type the name in the Create new organization field and click on Create New .","title":"Creating and renaming an organization"},{"location":"organizations/manual-organizations/creating-and-renaming-an-organization/#renaming-your-organization","text":"You can always rename an organization but: You won't be able to change it back if someone else registers your original organization name. This may break all your repository URLs. To ease the migration process, your original URLs will be valid for at least 15 days.","title":"Renaming your organization"},{"location":"organizations/manual-organizations/managing-team-repositories/","text":"Managing team repositories \u00b6 You will be able to add and remove repositories from a team after it has been added to your organization. Adding a repository to your team \u00b6 First, import a repository from your Git provider into your own account. Go to your organization menu, select the team, then select the repository from the drop-down menu, and click on Add repository . This will make your organization the owner of this repository. Removing a repository from your team \u00b6 Click on your avatar and select Organizations. Select the Organization and then the Team that your repository belongs to. Click on the \"X\" and confirm the prompt to delete the repository.","title":"Managing team repositories"},{"location":"organizations/manual-organizations/managing-team-repositories/#managing-team-repositories","text":"You will be able to add and remove repositories from a team after it has been added to your organization.","title":"Managing team repositories"},{"location":"organizations/manual-organizations/managing-team-repositories/#adding-a-repository-to-your-team","text":"First, import a repository from your Git provider into your own account. Go to your organization menu, select the team, then select the repository from the drop-down menu, and click on Add repository . This will make your organization the owner of this repository.","title":"Adding a repository to your team"},{"location":"organizations/manual-organizations/managing-team-repositories/#removing-a-repository-from-your-team","text":"Click on your avatar and select Organizations. Select the Organization and then the Team that your repository belongs to. Click on the \"X\" and confirm the prompt to delete the repository.","title":"Removing a repository from your team"},{"location":"organizations/manual-organizations/share-your-repository-with-a-non-codacy-user/","text":"Share your repository with a non-Codacy user \u00b6 If you are a Codacy Cloud user, you can share your Repository Dashboard with a non-Codacy user by using a link that doesn't require a login. To do this, click Share at the top of your Repository Dashboard. Codacy generates a link that you can copy and share anywhere. Alternatively, you can share the link to Twitter. You can revoke access to shared links in the Repository Settings. Revoking a link removes access to the repository dashboard for everyone you shared the link with. Revoke Access: will revoke the link you generated for that repository. Revoke Access for all: an admin will revoke all links generated by anyone for that repository. Recipients of the share through email will get the following email:","title":"Share your repository with a non-Codacy user"},{"location":"organizations/manual-organizations/share-your-repository-with-a-non-codacy-user/#share-your-repository-with-a-non-codacy-user","text":"If you are a Codacy Cloud user, you can share your Repository Dashboard with a non-Codacy user by using a link that doesn't require a login. To do this, click Share at the top of your Repository Dashboard. Codacy generates a link that you can copy and share anywhere. Alternatively, you can share the link to Twitter. You can revoke access to shared links in the Repository Settings. Revoking a link removes access to the repository dashboard for everyone you shared the link with. Revoke Access: will revoke the link you generated for that repository. Revoke Access for all: an admin will revoke all links generated by anyone for that repository. Recipients of the share through email will get the following email:","title":"Share your repository with a non-Codacy user"},{"location":"related-tools/codacy-api-tokens/","text":"Codacy API tokens \u00b6 API tokens allow you to authenticate when using the Codacy API by including them in the headers of your API calls. See how to authenticate using the Codacy API v2 and API v3 . You also need an API token when uploading coverage data to Codacy or uploading the results of running local analysis . Codacy provides two types of API tokens: Account API tokens are defined at the Codacy user account level. Each account API token authorizes access to the same organizations and repositories as the owner of the account. Project API tokens are defined on individual repositories. Each project API token only authorizes access to the corresponding repository. The sections below provide detailed instructions on how to generate and revoke API tokens. Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. Account API tokens \u00b6 To generate an account API token: Open your account, tab Access management . Click the button Create API token : To revoke an account API token, click the cross next to the token. After this, all applications or services using that token to access the Codacy API will fail to authenticate and will receive the reply {\"error\":\"not found\"} . Tip You can create multiple account API tokens. This can be useful to have a more flexible control by revoking only a specific token. Project API tokens \u00b6 To generate a project API token: Open your repository Settings , tab Integrations . Click the button Add integration and add a Project API integration. Click the button Settings on the Project API integration and copy the project API token. To revoke a project API token, click the trash can icon for the corresponding Project API integration. After this, all applications or services using that token to access the Codacy API will fail to authenticate and will receive the reply {\"error\":\"not found\"} . Tip You can create multiple project API tokens. This can be useful to have a more flexible control by revoking only a specific token. See also \u00b6 Adding coverage to your repository Running local analysis Client-side tools","title":"Codacy API tokens"},{"location":"related-tools/codacy-api-tokens/#codacy-api-tokens","text":"API tokens allow you to authenticate when using the Codacy API by including them in the headers of your API calls. See how to authenticate using the Codacy API v2 and API v3 . You also need an API token when uploading coverage data to Codacy or uploading the results of running local analysis . Codacy provides two types of API tokens: Account API tokens are defined at the Codacy user account level. Each account API token authorizes access to the same organizations and repositories as the owner of the account. Project API tokens are defined on individual repositories. Each project API token only authorizes access to the corresponding repository. The sections below provide detailed instructions on how to generate and revoke API tokens. Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this.","title":"Codacy API tokens"},{"location":"related-tools/codacy-api-tokens/#account-api-tokens","text":"To generate an account API token: Open your account, tab Access management . Click the button Create API token : To revoke an account API token, click the cross next to the token. After this, all applications or services using that token to access the Codacy API will fail to authenticate and will receive the reply {\"error\":\"not found\"} . Tip You can create multiple account API tokens. This can be useful to have a more flexible control by revoking only a specific token.","title":"Account API tokens"},{"location":"related-tools/codacy-api-tokens/#project-api-tokens","text":"To generate a project API token: Open your repository Settings , tab Integrations . Click the button Add integration and add a Project API integration. Click the button Settings on the Project API integration and copy the project API token. To revoke a project API token, click the trash can icon for the corresponding Project API integration. After this, all applications or services using that token to access the Codacy API will fail to authenticate and will receive the reply {\"error\":\"not found\"} . Tip You can create multiple project API tokens. This can be useful to have a more flexible control by revoking only a specific token.","title":"Project API tokens"},{"location":"related-tools/codacy-api-tokens/#see-also","text":"Adding coverage to your repository Running local analysis Client-side tools","title":"See also"},{"location":"related-tools/codacy-plugin-tools/","text":"Codacy plugin tools \u00b6 Codacy uses a system of plugin tools to extend the scope of analyses on your repositories, allowing support for new languages and tools every day. The Codacy GitHub repositories list the version and extra plugins supported by each plugin tool. You can also submit GitHub issues on these repositories. Tool name Codacy GitHub repository aligncheck codacy/codacy-aligncheck Ameba codacy/codacy-ameba Bandit codacy/codacy-bandit Brakeman codacy/codacy-brakeman Bundler Audit codacy/codacy-bundler-audit Checkstyle codacy/codacy-checkstyle Checkov codacy/codacy-checkov Clang-Tidy codacy/codacy-clang-tidy Codacy Scalameta Pro codacy/codacy-scalameta Faux Pas codacy/codacy-faux-pas Gosec codacy/codacy-gosec deadcode codacy/codacy-deadcode CodeNarc codacy/codacy-codenarc Coffeelint codacy/codacy-coffeelint Cppcheck codacy/codacy-cppcheck Credo codacy/codacy-credo CSSLint codacy/codacy-csslint Detekt codacy/codacy-detekt ESLint codacy/codacy-eslint Flawfinder codacy/codacy-flawfinder Revive codacy/codacy-gorevive Hadolint codacy/codacy-hadolint Jackson Linter codacy/codacy-jackson-linter JSHint codacy/codacy-jshint PHP_CodeSniffer codacy/codacy-codesniffer PHP Mess Detector codacy/codacy-phpmd PMD codacy/codacy-pmd Prospector codacy/codacy-prospector PSScriptAnalyser codacy/codacy-psscriptanalyzer Pylint codacy/codacy-pylint RemarkLint codacy/codacy-remark-lint Rubocop codacy/codacy-rubocop Scalastyle codacy/codacy-scalastyle ShellCheck codacy/codacy-shellcheck SonarC# codacy/codacy-sonar-csharp SonarVB codacy/codacy-sonar-visual-basic SpotBugs codacy/codacy-spotbugs SQLint codacy/codacy-sqlint Staticcheck codacy/codacy-staticcheck Stylelint codacy/codacy-stylelint SwiftLint codacy/codacy-swiftlint Tailor codacy/codacy-tailor TSLint codacy/codacy-tslint TSQLLint codacy/codacy-tsqllint","title":"Codacy plugin tools"},{"location":"related-tools/codacy-plugin-tools/#codacy-plugin-tools","text":"Codacy uses a system of plugin tools to extend the scope of analyses on your repositories, allowing support for new languages and tools every day. The Codacy GitHub repositories list the version and extra plugins supported by each plugin tool. You can also submit GitHub issues on these repositories. Tool name Codacy GitHub repository aligncheck codacy/codacy-aligncheck Ameba codacy/codacy-ameba Bandit codacy/codacy-bandit Brakeman codacy/codacy-brakeman Bundler Audit codacy/codacy-bundler-audit Checkstyle codacy/codacy-checkstyle Checkov codacy/codacy-checkov Clang-Tidy codacy/codacy-clang-tidy Codacy Scalameta Pro codacy/codacy-scalameta Faux Pas codacy/codacy-faux-pas Gosec codacy/codacy-gosec deadcode codacy/codacy-deadcode CodeNarc codacy/codacy-codenarc Coffeelint codacy/codacy-coffeelint Cppcheck codacy/codacy-cppcheck Credo codacy/codacy-credo CSSLint codacy/codacy-csslint Detekt codacy/codacy-detekt ESLint codacy/codacy-eslint Flawfinder codacy/codacy-flawfinder Revive codacy/codacy-gorevive Hadolint codacy/codacy-hadolint Jackson Linter codacy/codacy-jackson-linter JSHint codacy/codacy-jshint PHP_CodeSniffer codacy/codacy-codesniffer PHP Mess Detector codacy/codacy-phpmd PMD codacy/codacy-pmd Prospector codacy/codacy-prospector PSScriptAnalyser codacy/codacy-psscriptanalyzer Pylint codacy/codacy-pylint RemarkLint codacy/codacy-remark-lint Rubocop codacy/codacy-rubocop Scalastyle codacy/codacy-scalastyle ShellCheck codacy/codacy-shellcheck SonarC# codacy/codacy-sonar-csharp SonarVB codacy/codacy-sonar-visual-basic SpotBugs codacy/codacy-spotbugs SQLint codacy/codacy-sqlint Staticcheck codacy/codacy-staticcheck Stylelint codacy/codacy-stylelint SwiftLint codacy/codacy-swiftlint Tailor codacy/codacy-tailor TSLint codacy/codacy-tslint TSQLLint codacy/codacy-tsqllint","title":"Codacy plugin tools"},{"location":"related-tools/local-analysis/client-side-tools/","text":"Client-side tools \u00b6 Client-side tools enable you to run analysis either locally or as part of your CI process and integrating the results into your Codacy workflow. This way, Codacy presents the analysis information reported by your local tools alongside all other code quality information on the Codacy dashboards. Codacy supports client-side tools in two ways: Standalone tools Codacy provides auxiliary converters that parse the output of third-party tools and convert to a format that you then upload to Codacy using the API. You must download, configure, and run the third-party tools yourself. You can't configure these tools on the Codacy UI, since you manage their configuration locally. Containerized tools Codacy provides a Docker image for the tools, and you run the images using the Codacy Analysis CLI . The Codacy Analysis CLI automatically fetches the code pattern settings that you define on the Codacy UI and applies them when running these tools. Follow the instructions on how to run the supported client-side tools: aligncheck (Containerized) Clang-Tidy (Standalone) deadcode (Containerized) Faux Pas (Standalone) Gosec (Standalone) SpotBugs (Containerized) Staticcheck (Standalone) See also \u00b6 See the full list of supported languages and tools to check the programming languages that the client-side tools can analyze.","title":"Client-side tools"},{"location":"related-tools/local-analysis/client-side-tools/#client-side-tools","text":"Client-side tools enable you to run analysis either locally or as part of your CI process and integrating the results into your Codacy workflow. This way, Codacy presents the analysis information reported by your local tools alongside all other code quality information on the Codacy dashboards. Codacy supports client-side tools in two ways: Standalone tools Codacy provides auxiliary converters that parse the output of third-party tools and convert to a format that you then upload to Codacy using the API. You must download, configure, and run the third-party tools yourself. You can't configure these tools on the Codacy UI, since you manage their configuration locally. Containerized tools Codacy provides a Docker image for the tools, and you run the images using the Codacy Analysis CLI . The Codacy Analysis CLI automatically fetches the code pattern settings that you define on the Codacy UI and applies them when running these tools. Follow the instructions on how to run the supported client-side tools: aligncheck (Containerized) Clang-Tidy (Standalone) deadcode (Containerized) Faux Pas (Standalone) Gosec (Standalone) SpotBugs (Containerized) Staticcheck (Standalone)","title":"Client-side tools"},{"location":"related-tools/local-analysis/client-side-tools/#see-also","text":"See the full list of supported languages and tools to check the programming languages that the client-side tools can analyze.","title":"See also"},{"location":"related-tools/local-analysis/running-aligncheck/","text":"Running aligncheck \u00b6 To run aligncheck as a client-side tool : Enable Run analysis through build server in your repository Settings , tab General , Repository analysis . This setting enables Codacy to wait for the results of the local analysis before resuming the analysis of your commits. Obtain a project API token for your repository. You need the project API token to allow the Codacy Analysis CLI to authenticate to Codacy when reporting the analysis results. Set the following environment variable to specify your project API token: export CODACY_PROJECT_TOKEN = <your project API token> Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Download and run the Codacy Analysis CLI on the root of the repository, specifying the tool aligncheck. codacy-analysis-cli analyze --tool aligncheck \\ --allow-network \\ --upload \\ --verbose The Codacy Analysis CLI runs aligncheck on your repository and uploads the results to Codacy so you can use them in your workflow.","title":"Running aligncheck"},{"location":"related-tools/local-analysis/running-aligncheck/#running-aligncheck","text":"To run aligncheck as a client-side tool : Enable Run analysis through build server in your repository Settings , tab General , Repository analysis . This setting enables Codacy to wait for the results of the local analysis before resuming the analysis of your commits. Obtain a project API token for your repository. You need the project API token to allow the Codacy Analysis CLI to authenticate to Codacy when reporting the analysis results. Set the following environment variable to specify your project API token: export CODACY_PROJECT_TOKEN = <your project API token> Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Download and run the Codacy Analysis CLI on the root of the repository, specifying the tool aligncheck. codacy-analysis-cli analyze --tool aligncheck \\ --allow-network \\ --upload \\ --verbose The Codacy Analysis CLI runs aligncheck on your repository and uploads the results to Codacy so you can use them in your workflow.","title":"Running aligncheck"},{"location":"related-tools/local-analysis/running-deadcode/","text":"Running deadcode \u00b6 To run deadcode as a client-side tool : Enable Run analysis through build server in your repository Settings , tab General , Repository analysis . This setting enables Codacy to wait for the results of the local analysis before resuming the analysis of your commits. Obtain a project API token for your repository. You need the project API token to allow the Codacy Analysis CLI to authenticate to Codacy when reporting the analysis results. Set the following environment variable to specify your project API token: export CODACY_PROJECT_TOKEN = <your project API token> Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Download and run the Codacy Analysis CLI on the root of the repository, specifying the tool deadcode. codacy-analysis-cli analyze --tool deadcode \\ --allow-network \\ --upload \\ --verbose The Codacy Analysis CLI runs deadcode on your repository and uploads the results to Codacy so you can use them in your workflow.","title":"Running deadcode"},{"location":"related-tools/local-analysis/running-deadcode/#running-deadcode","text":"To run deadcode as a client-side tool : Enable Run analysis through build server in your repository Settings , tab General , Repository analysis . This setting enables Codacy to wait for the results of the local analysis before resuming the analysis of your commits. Obtain a project API token for your repository. You need the project API token to allow the Codacy Analysis CLI to authenticate to Codacy when reporting the analysis results. Set the following environment variable to specify your project API token: export CODACY_PROJECT_TOKEN = <your project API token> Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Download and run the Codacy Analysis CLI on the root of the repository, specifying the tool deadcode. codacy-analysis-cli analyze --tool deadcode \\ --allow-network \\ --upload \\ --verbose The Codacy Analysis CLI runs deadcode on your repository and uploads the results to Codacy so you can use them in your workflow.","title":"Running deadcode"},{"location":"related-tools/local-analysis/running-local-analysis/","text":"Running local analysis \u00b6 Set up the Codacy Analysis CLI \u00b6 Follow the installation guide to get the codacy-analysis-cli executable running on your build server. Running an analysis with the CLI \u00b6 At the moment, the CLI still requires to retrieve the configuration from Codacy to perform an analysis. In order to access the repository, you will have to obtain a Project Token as explained in the CLI documentation . Then, you can invoke the CLI to get a report with all the issues: Important If you're using Codacy Self-hosted you must also specify the endpoint where the Codacy instance is running either by using the flag --codacy-api-base-url or the environment variable CODACY_API_BASE_URL . codacy-analysis-cli analyze --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --verbose \\ --upload If you don't specify the tool, the analysis will run as Codacy does in the backend. To obtain results for a particular tool , specify the tool with --tool . Advanced configuration \u00b6 For advanced configuration details, check all the CLI flags in the CLI documentation . Some flags you might be interested in: --allow-network - to run the tools that require compilation like SpotBugs, FindBugs, FindSecBugs --max-allowed-issues - returns a non-zero exit code when a certain number of issues is exceeded --fail-if-incomplete - to return a non-zero exit code when any tool fails to run successfully Notes on ignored issues \u00b6 If you have ignored issues on Codacy be aware that the CLI won't respect those ignored issues when printing the results locally. However, if you upload the results, the ignored issues will be reflected on the Codacy UI after the analysis is complete.","title":"Running local analysis"},{"location":"related-tools/local-analysis/running-local-analysis/#running-local-analysis","text":"","title":"Running local analysis"},{"location":"related-tools/local-analysis/running-local-analysis/#set-up-the-codacy-analysis-cli","text":"Follow the installation guide to get the codacy-analysis-cli executable running on your build server.","title":"Set up the Codacy Analysis CLI"},{"location":"related-tools/local-analysis/running-local-analysis/#running-an-analysis-with-the-cli","text":"At the moment, the CLI still requires to retrieve the configuration from Codacy to perform an analysis. In order to access the repository, you will have to obtain a Project Token as explained in the CLI documentation . Then, you can invoke the CLI to get a report with all the issues: Important If you're using Codacy Self-hosted you must also specify the endpoint where the Codacy instance is running either by using the flag --codacy-api-base-url or the environment variable CODACY_API_BASE_URL . codacy-analysis-cli analyze --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --verbose \\ --upload If you don't specify the tool, the analysis will run as Codacy does in the backend. To obtain results for a particular tool , specify the tool with --tool .","title":"Running an analysis with the CLI"},{"location":"related-tools/local-analysis/running-local-analysis/#notes-on-ignored-issues","text":"If you have ignored issues on Codacy be aware that the CLI won't respect those ignored issues when printing the results locally. However, if you upload the results, the ignored issues will be reflected on the Codacy UI after the analysis is complete.","title":"Notes on ignored issues"},{"location":"related-tools/local-analysis/running-spotbugs/","text":"Running SpotBugs \u00b6 To run SpotBugs as a client-side tool : Enable Run analysis through build server in your repository Settings , tab General , Repository analysis . This setting enables Codacy to wait for the results of the local analysis before resuming the analysis of your commits. Obtain a project API token for your repository. You need the project API token to allow the Codacy Analysis CLI to authenticate to Codacy when reporting the analysis results. Set the following environment variable to specify your project API token: export CODACY_PROJECT_TOKEN = <your project API token> Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Compile your Java or Scala repository on your build server, as you would normally do. Download and run the Codacy Analysis CLI on the root of the repository, specifying the tool SpotBugs. codacy-analysis-cli analyze --tool spotbugs \\ --allow-network \\ --upload \\ --verbose The Codacy Analysis CLI runs SpotBugs on the compiled classes of your repository and uploads the results to Codacy so you can use them in your workflow. Detecting sources and compiled classes \u00b6 The Codacy Analysis CLI tries to find the compiled classes and map results to the source files automatically. If you use Maven, Gradle, or sbt the Codacy Analysis CLI also detects the default layouts automatically. If there is an issue with detection, you can configure these paths manually by adding a .codacy.yml Codacy configuration file to the root of the repository: --- engines: spotbugs: modules: - classesDirectories: [ \"core/target/classes\" ] sourceDirectories: [ \"core/src/main\" ] - classesDirectories: [ \"api/target/classes\" ] sourceDirectories: [ \"api/src/main\" ] Increasing the timeout to run SpotBugs \u00b6 When running SpotBugs on the compiled classes of larger projects, the default execution timeout of 15 minutes may not be enough for SpotBugs to complete the analysis. To increase the timeout that SpotBugs has to execute, use the option --tool-timeout when running the Codacy Analysis CLI. For example, use --tool-timeout 1hour to set the timeout to one hour.","title":"Running SpotBugs"},{"location":"related-tools/local-analysis/running-spotbugs/#running-spotbugs","text":"To run SpotBugs as a client-side tool : Enable Run analysis through build server in your repository Settings , tab General , Repository analysis . This setting enables Codacy to wait for the results of the local analysis before resuming the analysis of your commits. Obtain a project API token for your repository. You need the project API token to allow the Codacy Analysis CLI to authenticate to Codacy when reporting the analysis results. Set the following environment variable to specify your project API token: export CODACY_PROJECT_TOKEN = <your project API token> Warning Never write API tokens on your configuration files and keep your API tokens well protected, as they grant owner permissions to your projects. We recommend that you set API tokens as environment variables. Check the documentation of your CI/CD platform on how to do this. If you are using Codacy Self-hosted set the following environment variable to specify your Codacy instance URL: export CODACY_API_BASE_URL = <your Codacy instance URL> Compile your Java or Scala repository on your build server, as you would normally do. Download and run the Codacy Analysis CLI on the root of the repository, specifying the tool SpotBugs. codacy-analysis-cli analyze --tool spotbugs \\ --allow-network \\ --upload \\ --verbose The Codacy Analysis CLI runs SpotBugs on the compiled classes of your repository and uploads the results to Codacy so you can use them in your workflow.","title":"Running SpotBugs"},{"location":"related-tools/local-analysis/running-spotbugs/#detecting-sources-and-compiled-classes","text":"The Codacy Analysis CLI tries to find the compiled classes and map results to the source files automatically. If you use Maven, Gradle, or sbt the Codacy Analysis CLI also detects the default layouts automatically. If there is an issue with detection, you can configure these paths manually by adding a .codacy.yml Codacy configuration file to the root of the repository: --- engines: spotbugs: modules: - classesDirectories: [ \"core/target/classes\" ] sourceDirectories: [ \"core/src/main\" ] - classesDirectories: [ \"api/target/classes\" ] sourceDirectories: [ \"api/src/main\" ]","title":"Detecting sources and compiled classes"},{"location":"related-tools/local-analysis/running-spotbugs/#increasing-the-timeout-to-run-spotbugs","text":"When running SpotBugs on the compiled classes of larger projects, the default execution timeout of 15 minutes may not be enough for SpotBugs to complete the analysis. To increase the timeout that SpotBugs has to execute, use the option --tool-timeout when running the Codacy Analysis CLI. For example, use --tool-timeout 1hour to set the timeout to one hour.","title":"Increasing the timeout to run SpotBugs"},{"location":"release-notes/","text":"Release notes \u00b6 This section contains the release notes for Codacy Cloud and Codacy Self-hosted. For product updates that are in progress or planned, see Codacy's public roadmap instead. Codacy Cloud release notes \u00b6 \ud83d\udea7 Regular release notes for Codacy Cloud will be available soon. Deprecating HTTP headers for API tokens (April 2020) Removal of NodeSecurity, GoLint, and SCSSLint (March 2020) Codacy now supports GitHub Apps (February 2020) Codacy Self-hosted release notes \u00b6 v3.4.0 (March 12, 2021) v3.3.0 (February 12, 2021) v3.2.0 (December 17, 2020) v3.1.0 (December 10, 2020) v3.0.0 (November 2, 2020) v2.2.1 (October 22, 2020) v2.2.0 (October 8, 2020) v2.1.1 (September 24, 2020) v2.1.0 (September 16, 2020) v2.0.0 (August 18, 2020) v1.5.0 (July 20, 2020) v1.4.0 (June 23, 2020) v1.3.0 (June 12, 2020) v1.2.0 (June 4, 2020) v1.1.0 (May 26, 2020) v1.0.1 (May 21, 2020) v1.0.0 (May 18, 2020)","title":"Release notes"},{"location":"release-notes/#release-notes","text":"This section contains the release notes for Codacy Cloud and Codacy Self-hosted. For product updates that are in progress or planned, see Codacy's public roadmap instead.","title":"Release notes"},{"location":"release-notes/#codacy-cloud-release-notes","text":"\ud83d\udea7 Regular release notes for Codacy Cloud will be available soon. Deprecating HTTP headers for API tokens (April 2020) Removal of NodeSecurity, GoLint, and SCSSLint (March 2020) Codacy now supports GitHub Apps (February 2020)","title":"Codacy Cloud release notes"},{"location":"release-notes/#codacy-self-hosted-release-notes","text":"v3.4.0 (March 12, 2021) v3.3.0 (February 12, 2021) v3.2.0 (December 17, 2020) v3.1.0 (December 10, 2020) v3.0.0 (November 2, 2020) v2.2.1 (October 22, 2020) v2.2.0 (October 8, 2020) v2.1.1 (September 24, 2020) v2.1.0 (September 16, 2020) v2.0.0 (August 18, 2020) v1.5.0 (July 20, 2020) v1.4.0 (June 23, 2020) v1.3.0 (June 12, 2020) v1.2.0 (June 4, 2020) v1.1.0 (May 26, 2020) v1.0.1 (May 21, 2020) v1.0.0 (May 18, 2020)","title":"Codacy Self-hosted release notes"},{"location":"release-notes/cloud/bitbucket-changes/","text":"Bitbucket changes \u00b6 We're making some changes on February 18, 2019 that will cause all existing integrations with Bitbucket to stop working . What exactly are we doing? \u00b6 We're reducing the permissions requested when authenticating with Bitbucket. While we currently ask for all permissions, after this we will no longer require: Write access for Teams Write access for Projects Delete access for Repositories Full access to Wikis, Snippets, and Pipelines Why? \u00b6 Previously, we were using OAuth 1, which forced us to request all permissions. This level of permissions requested to integrate with Bitbucket has been flagged as a concern by several of our users. We've now migrated to OAuth 2, which allows us to reduce the level of permissions required. What do you need to do if you have Bitbucket repositories? \u00b6 The original user who set up your Bitbucket integration will need to log in to Codacy to confirm the new permissions. Otherwise, Codacy will no longer be able to detect new Pull Requests, and existing repositories will stop receiving Pull Request status and comments on Bitbucket. If the original user who set up your Bitbucket integration isn't available, someone who has Admin permissions in both Codacy and Bitbucket to re-do the integration in Codacy. You can log in with Bitbucket through https://www.codacy.com/login-with/bitbucket .","title":"Bitbucket changes"},{"location":"release-notes/cloud/bitbucket-changes/#bitbucket-changes","text":"We're making some changes on February 18, 2019 that will cause all existing integrations with Bitbucket to stop working .","title":"Bitbucket changes"},{"location":"release-notes/cloud/bitbucket-changes/#what-exactly-are-we-doing","text":"We're reducing the permissions requested when authenticating with Bitbucket. While we currently ask for all permissions, after this we will no longer require: Write access for Teams Write access for Projects Delete access for Repositories Full access to Wikis, Snippets, and Pipelines","title":"What exactly are we doing?"},{"location":"release-notes/cloud/bitbucket-changes/#why","text":"Previously, we were using OAuth 1, which forced us to request all permissions. This level of permissions requested to integrate with Bitbucket has been flagged as a concern by several of our users. We've now migrated to OAuth 2, which allows us to reduce the level of permissions required.","title":"Why?"},{"location":"release-notes/cloud/bitbucket-changes/#what-do-you-need-to-do-if-you-have-bitbucket-repositories","text":"The original user who set up your Bitbucket integration will need to log in to Codacy to confirm the new permissions. Otherwise, Codacy will no longer be able to detect new Pull Requests, and existing repositories will stop receiving Pull Request status and comments on Bitbucket. If the original user who set up your Bitbucket integration isn't available, someone who has Admin permissions in both Codacy and Bitbucket to re-do the integration in Codacy. You can log in with Bitbucket through https://www.codacy.com/login-with/bitbucket .","title":"What do you need to do if you have Bitbucket repositories?"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-january-2019/","text":"Cloud Release Notes | January 2, 2019 \u00b6 Product enhancements \u00b6 We updated the following tools to newer versions: eslint-plugin-vue to version 5.0.0 eslint-config-react-app to version 3.0.5 eslint-plugin-react to version 7.11.1 And added the below new plugins for eslint-plugin-ember-suave v.1.0.0 tslint-angular v.1.1.2 Improved the UI message when a file is ignored to clarify that the changes will only be applied in the next analysis Bug fixes \u00b6 Fixed a bug where it wasn't possible to select certain projects in the Team Dashboard Fixed a bug where an issue showed the error message repeated in the block of code, instead of the source code line Fixed a bug that was showing nonexistent Stylelint patterns in the UI","title":"Cloud Release Notes | January 2, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-january-2019/#cloud-release-notes-january-2-2019","text":"","title":"Cloud Release Notes | January 2, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-january-2019/#product-enhancements","text":"We updated the following tools to newer versions: eslint-plugin-vue to version 5.0.0 eslint-config-react-app to version 3.0.5 eslint-plugin-react to version 7.11.1 And added the below new plugins for eslint-plugin-ember-suave v.1.0.0 tslint-angular v.1.1.2 Improved the UI message when a file is ignored to clarify that the changes will only be applied in the next analysis","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-january-2019/#bug-fixes","text":"Fixed a bug where it wasn't possible to select certain projects in the Team Dashboard Fixed a bug where an issue showed the error message repeated in the block of code, instead of the source code line Fixed a bug that was showing nonexistent Stylelint patterns in the UI","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-november-2018/","text":"Cloud Release Notes | November 2, 2018 \u00b6 Product enhancements \u00b6 Improved Issues Breakdown UI on the dashboard: Removed project\u2019s number of lines of code making it easier to understand the issue split percentage. Bug fixes \u00b6 Fixed a bug in which Pylint wasn\u2019t generating issues. Fixed a bug in which private projects returned a blank page for unauthorized users instead of a 404 error page. Tool updates \u00b6 Updated Rubocop to version v0.59.2 Updated ESLint to version v5.7.0 Added support to TSLint 5 Previous versions are no longer supported. New tools \u00b6 Added SwiftLint to Codacy.","title":"Cloud Release Notes | November 2, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-november-2018/#cloud-release-notes-november-2-2018","text":"","title":"Cloud Release Notes | November 2, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-november-2018/#product-enhancements","text":"Improved Issues Breakdown UI on the dashboard: Removed project\u2019s number of lines of code making it easier to understand the issue split percentage.","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-november-2018/#bug-fixes","text":"Fixed a bug in which Pylint wasn\u2019t generating issues. Fixed a bug in which private projects returned a blank page for unauthorized users instead of a 404 error page.","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-november-2018/#tool-updates","text":"Updated Rubocop to version v0.59.2 Updated ESLint to version v5.7.0 Added support to TSLint 5 Previous versions are no longer supported.","title":"Tool updates"},{"location":"release-notes/cloud/cloud-release-notes-%7C-02-november-2018/#new-tools","text":"Added SwiftLint to Codacy.","title":"New tools"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-may-2019/","text":"Cloud Release Notes | May 5, 2019 \u00b6 Product enhancements \u00b6 We added the following plugins for ESLint: typescript-eslint/eslint-plugin eslint-plugin-relay Bug fixes \u00b6 Fixed a bug that was preventing accounts from being reactivated Fixed a bug where we couldn't import any projects from a Bitbucket organization if there were problems with one team Fixed a bug that forced the user to log in with Bitbucket to be able to see the Bitbucket projects. Now the user can log in with Bitbucket or GitHub and still be able to add projects from the other provider.","title":"Cloud Release Notes | May 5, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-may-2019/#cloud-release-notes-may-5-2019","text":"","title":"Cloud Release Notes | May 5, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-may-2019/#product-enhancements","text":"We added the following plugins for ESLint: typescript-eslint/eslint-plugin eslint-plugin-relay","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-may-2019/#bug-fixes","text":"Fixed a bug that was preventing accounts from being reactivated Fixed a bug where we couldn't import any projects from a Bitbucket organization if there were problems with one team Fixed a bug that forced the user to log in with Bitbucket to be able to see the Bitbucket projects. Now the user can log in with Bitbucket or GitHub and still be able to add projects from the other provider.","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-set-2019/","text":"Cloud Release Notes | September 5, 2019 \u00b6 Product enhancements \u00b6 Bitbucket integration improvement: Non-admins will no longer be able to add projects to Codacy to avoid setting up integrations that don't work. Codacy's Coverage Reporter now supports scrutinizer-ci and semaphoreci New tools: Pylint version 2.3.1 to support Python 3 (up to 3.7 ). This version isn't enabled by default Updated tools: SonarC# has been updated from version 5.10.1.1411 to 7.16.0.8981 Pylint has been updated to version 1.9.5 with cross support for both Python 2 (up to 2.7) and Python 3 (up to 3.6) Stylelint has been updated to 10.1.0 Checkstyle has been updated to 8.23 Added new patterns to Scalastyle Added support for the following plugins: stylelint-config-css-modules stylelint-prettier stylelint-config-standard-scss stylelint-config-recommended-scss eslint-plugin-xss Bug fixes \u00b6 Fixed a bug that stopped users from copying the API token while using Firefox Fixed a bug that kept the pull requests page from loading at times Fixed a bug that stopped Hotspots from loading on the PR screen if there were too many changes Fixed a bug that caused the coverage upload to sometimes give a timeout error Fixed a bug where Complexity reported by ESLint would not be displayed correctly in the dashboard","title":"Cloud Release Notes | September 5, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-set-2019/#cloud-release-notes-september-5-2019","text":"","title":"Cloud Release Notes | September 5, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-set-2019/#product-enhancements","text":"Bitbucket integration improvement: Non-admins will no longer be able to add projects to Codacy to avoid setting up integrations that don't work. Codacy's Coverage Reporter now supports scrutinizer-ci and semaphoreci New tools: Pylint version 2.3.1 to support Python 3 (up to 3.7 ). This version isn't enabled by default Updated tools: SonarC# has been updated from version 5.10.1.1411 to 7.16.0.8981 Pylint has been updated to version 1.9.5 with cross support for both Python 2 (up to 2.7) and Python 3 (up to 3.6) Stylelint has been updated to 10.1.0 Checkstyle has been updated to 8.23 Added new patterns to Scalastyle Added support for the following plugins: stylelint-config-css-modules stylelint-prettier stylelint-config-standard-scss stylelint-config-recommended-scss eslint-plugin-xss","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-05-set-2019/#bug-fixes","text":"Fixed a bug that stopped users from copying the API token while using Firefox Fixed a bug that kept the pull requests page from loading at times Fixed a bug that stopped Hotspots from loading on the PR screen if there were too many changes Fixed a bug that caused the coverage upload to sometimes give a timeout error Fixed a bug where Complexity reported by ESLint would not be displayed correctly in the dashboard","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-07-aug-2019/","text":"Cloud Release Notes | August 7, 2019 \u00b6 Product enhancements \u00b6 New plugins available for ESLint: eslint-config-standard-jsx eslint-plugin-compat eslint-plugin-chai-friendly Updated BundlerAudit to v0.6.1 Updated ESLint to v5.16.0 Updated Rubocop to v0.71.0 Keeping in line with the Git providers, Codacy will now ignore branches with names longer than 254 characters Added new list view of team members under organizations called People Bug fixes \u00b6 Fixed bug that, in some projects, was causing Complexity and Duplication to be incorrectly calculated Fixed a bug where Complexity could show different results in different branches when the value should be the same Fixed a bug where some issues could be found but not listed on the Pull Request Fixed a bug that could cause the dashboards to not load correctly","title":"Cloud Release Notes | August 7, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-07-aug-2019/#cloud-release-notes-august-7-2019","text":"","title":"Cloud Release Notes | August 7, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-07-aug-2019/#product-enhancements","text":"New plugins available for ESLint: eslint-config-standard-jsx eslint-plugin-compat eslint-plugin-chai-friendly Updated BundlerAudit to v0.6.1 Updated ESLint to v5.16.0 Updated Rubocop to v0.71.0 Keeping in line with the Git providers, Codacy will now ignore branches with names longer than 254 characters Added new list view of team members under organizations called People","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-07-aug-2019/#bug-fixes","text":"Fixed bug that, in some projects, was causing Complexity and Duplication to be incorrectly calculated Fixed a bug where Complexity could show different results in different branches when the value should be the same Fixed a bug where some issues could be found but not listed on the Pull Request Fixed a bug that could cause the dashboards to not load correctly","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-08-april-2019/","text":"Cloud Release Notes | April 8, 2019 \u00b6 Bug fixes \u00b6 Fixed a bug where some users weren't able to login to Codacy when using GitHub. This was related to the \"Email permission\" that was missing. With the fix, if that permission is missing users will now get redirected to GitHub to request for the missing permissions (\"read email\"), and upon authorizing they will be able to log in. Fixed a bug that was causing TSLint analysis to fail due to an invalid configuration syntax.","title":"Cloud Release Notes | April 8, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-08-april-2019/#cloud-release-notes-april-8-2019","text":"","title":"Cloud Release Notes | April 8, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-08-april-2019/#bug-fixes","text":"Fixed a bug where some users weren't able to login to Codacy when using GitHub. This was related to the \"Email permission\" that was missing. With the fix, if that permission is missing users will now get redirected to GitHub to request for the missing permissions (\"read email\"), and upon authorizing they will be able to log in. Fixed a bug that was causing TSLint analysis to fail due to an invalid configuration syntax.","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-15-nov-2019/","text":"Cloud Release Notes | November 15, 2019 \u00b6 Product Enhancements \u00b6 Synced organizations for GitHub are live! This feature will allow for easier integration with GitHub and organization management. Here you can find our documentation on the new features and how to use them . As a consequence, the next time you log in to Codacy you will see a window asking for one additional permission on GitHub with this information: This will allow us to create an organization hook on GitHub for the new Synced organizations that will notify us whenever changes occur on GitHub.","title":"Cloud Release Notes | November 15, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-15-nov-2019/#cloud-release-notes-november-15-2019","text":"","title":"Cloud Release Notes | November 15, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-15-nov-2019/#product-enhancements","text":"Synced organizations for GitHub are live! This feature will allow for easier integration with GitHub and organization management. Here you can find our documentation on the new features and how to use them . As a consequence, the next time you log in to Codacy you will see a window asking for one additional permission on GitHub with this information: This will allow us to create an organization hook on GitHub for the new Synced organizations that will notify us whenever changes occur on GitHub.","title":"Product Enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-16-november-2018/","text":"Cloud Release Notes | November 16, 2018 \u00b6 Product enhancements \u00b6 We now support PowerShell language using PSScriptAnalyzer . Created default patterns for Flawfinder. Now when you add a project to Codacy, Flawfinder will run by default. We updated the following tools to newer versions: Rubocop to v0.60.0 ESLint to v5.8.0 ESLint plugin airbnb-eslint-config to v17.1.0 ESLint plugin babel-eslint to v10.0.1 ESLint plugin-jsx-a11y to v.6.1.2 And added the following new plugins for ESLint: eslint-config-standard-react .prettierrc.js extension prodigy eslint profile Bug fixes \u00b6 Fixed a bug in which the GitHub login button was trying to use Bitbucket credentials and vice versa. Fixed a bug that was adding projects from a deleted organization to an organization admin. Now all projects associated with a deleted organization will also be permanently deleted","title":"Cloud Release Notes | November 16, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-16-november-2018/#cloud-release-notes-november-16-2018","text":"","title":"Cloud Release Notes | November 16, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-16-november-2018/#product-enhancements","text":"We now support PowerShell language using PSScriptAnalyzer . Created default patterns for Flawfinder. Now when you add a project to Codacy, Flawfinder will run by default. We updated the following tools to newer versions: Rubocop to v0.60.0 ESLint to v5.8.0 ESLint plugin airbnb-eslint-config to v17.1.0 ESLint plugin babel-eslint to v10.0.1 ESLint plugin-jsx-a11y to v.6.1.2 And added the following new plugins for ESLint: eslint-config-standard-react .prettierrc.js extension prodigy eslint profile","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-16-november-2018/#bug-fixes","text":"Fixed a bug in which the GitHub login button was trying to use Bitbucket credentials and vice versa. Fixed a bug that was adding projects from a deleted organization to an organization admin. Now all projects associated with a deleted organization will also be permanently deleted","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-18-jun-2019/","text":"Cloud Release Notes | June 18, 2019 \u00b6 Product enhancements \u00b6 New plugin available for ESLint: eslint-config-kentcdodds Bug fixes \u00b6 Fixed bug where Duplication would show incorrect values if the branch was changed","title":"Cloud Release Notes | June 18, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-18-jun-2019/#cloud-release-notes-june-18-2019","text":"","title":"Cloud Release Notes | June 18, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-18-jun-2019/#product-enhancements","text":"New plugin available for ESLint: eslint-config-kentcdodds","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-18-jun-2019/#bug-fixes","text":"Fixed bug where Duplication would show incorrect values if the branch was changed","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-19-october-2018/","text":"Cloud Release Notes | October 19, 2018 \u00b6 Product enhancements \u00b6 Improved the coverage UI on the project dashboard: The value in the graph for coverage is now also displayed below, in the coverage issues breakdown. Added color scheme dependent on project quality settings: from red to green depending on your settings, and blue if your coverage is set to be ignored. Added tooltip explanations for issues related to coverage. We updated the following tools: Scalameta now supports Scala 2.12 Credo version 0.10.2 Checkstyle version 8.13 Bandit version 1.5.1 PHP_CodeSniffer version 3.1 Bugs \u00b6 Fixed a bug on https://security.codacy.com/ that highlighted the wrong section on the sidebar when scrolling down. Fixed Pylint broken build. Fixed a bug preventing new commits from showing on a branch.","title":"Cloud Release Notes | October 19, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-19-october-2018/#cloud-release-notes-october-19-2018","text":"","title":"Cloud Release Notes | October 19, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-19-october-2018/#product-enhancements","text":"Improved the coverage UI on the project dashboard: The value in the graph for coverage is now also displayed below, in the coverage issues breakdown. Added color scheme dependent on project quality settings: from red to green depending on your settings, and blue if your coverage is set to be ignored. Added tooltip explanations for issues related to coverage. We updated the following tools: Scalameta now supports Scala 2.12 Credo version 0.10.2 Checkstyle version 8.13 Bandit version 1.5.1 PHP_CodeSniffer version 3.1","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-19-october-2018/#bugs","text":"Fixed a bug on https://security.codacy.com/ that highlighted the wrong section on the sidebar when scrolling down. Fixed Pylint broken build. Fixed a bug preventing new commits from showing on a branch.","title":"Bugs"},{"location":"release-notes/cloud/cloud-release-notes-%7C-20-may-2019/","text":"Cloud Release Notes | May 20, 2019 \u00b6 Product enhancements \u00b6 As a way of improving performance and provide faster analysis, Codacy will no longer check for new updates in projects that don't have post-commit hooks enabled. Bug fixes \u00b6 Fixed a bug where Go tools weren't reporting any issues in the first analysis.","title":"Cloud Release Notes | May 20, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-20-may-2019/#cloud-release-notes-may-20-2019","text":"","title":"Cloud Release Notes | May 20, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-20-may-2019/#product-enhancements","text":"As a way of improving performance and provide faster analysis, Codacy will no longer check for new updates in projects that don't have post-commit hooks enabled.","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-20-may-2019/#bug-fixes","text":"Fixed a bug where Go tools weren't reporting any issues in the first analysis.","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-23-july-2018/","text":"Cloud Release Notes | July 23, 2018 \u00b6 New release \u00b6 Added ability to copy project badge from the project dashboard Improvements \u00b6 Added new documentation on: SSH Keys Bug fixes \u00b6 Fixed Pylint pattern Enforce naming conventions that had stopped providing results You can import certain modules in your ESLint configuration files","title":"Cloud Release Notes | July 23, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-23-july-2018/#cloud-release-notes-july-23-2018","text":"","title":"Cloud Release Notes | July 23, 2018"},{"location":"release-notes/cloud/cloud-release-notes-%7C-23-july-2018/#new-release","text":"Added ability to copy project badge from the project dashboard","title":"New release"},{"location":"release-notes/cloud/cloud-release-notes-%7C-23-july-2018/#improvements","text":"Added new documentation on: SSH Keys","title":"Improvements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-23-july-2018/#bug-fixes","text":"Fixed Pylint pattern Enforce naming conventions that had stopped providing results You can import certain modules in your ESLint configuration files","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-29-march-2019/","text":"Cloud Release Notes | March 29, 2019 \u00b6 Product enhancements \u00b6 We now integrate with Bitbucket using OAuth2 . This has allowed us to reduce the level of permissions we require when you integrate Codacy with your Bitbucket account. We updated TSLint to version 5.14.0 . As a way of improving performance, we've stopped analysis for inactive, free, and open-source accounts and we've communicated to those impacted by this measure. This was done so we could allocate more resources to people that are actively using Codacy. We removed the option to add projects using a Git URL. Projects that were added before February 12, 2019, will continue to be analyzed as usual. As part of our performance improvement measures, we've implemented an upper limit of 150 Kb for file sizes that should be considered for analysis. This means that: These files won't show in the UI as ignored Some projects that weren't analyzing before will now be able to analyze Some projects will take less time to analyze Some projects will have fewer issues as third party libraries issues covered by this limit won't show Some projects will have more issues because the analysis batch in which they're inserted won't fail Although most of the files that are now being ignored will be third-party dependencies and generated files, there is still the chance that some files that are actually development code and should be analyzed won't be. This is a global setting and is currently not customizable per-client (that option is only available for Self-hosted customers) Bug fixes \u00b6 Fixed a bug where it wasn't possible to unignore a file Fixed a bug where it wasn't possible to add Bitbucket integration in the project Settings -> Integrations page Fixed a bug where pull requests weren't analyzing when a branch was renamed Fixed a bug where the \" Unignore issue\" button wasn't working Fixed a bug where webhook notifications were being sent with incomplete information Fixed a bug that prevented users to save changes in project Settings when using Firefox 61 Fixed a bug with PHP_CodeSniffer \"PHPCS_Internal\" pattern that was generating false positives Fixed a bug with PHP_CodeSniffer deprecated parameters customSanitizingFunctions property and WordPress.CSRF.NonceVerification that were generating false positives Fixed a bug that was causing Cppcheck to fail analysis Fixed a bug where the Merged Pull Requests view was showing a blank page Fixed a bug where it wasn't possible to invite new team members from the Commit page Fixed a bug where the Codacy status page link was broken Fixed a bug where it wasn't possible to remove a user from an organization if the user had a special character in the name Fixed a bug where some links in the https://security.codacy.com/ page were broken Fixed a bug where a user was having to confirm access to their Bitbucket account every time they logged in to Codacy Fixed a bug where the link to \"See all files\" on the coverage applet in the project dashboard wasn't clickable Fixed a typo in the Pull Requests page in the \"possible fixed issues\" message","title":"Cloud Release Notes | March 29, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-29-march-2019/#cloud-release-notes-march-29-2019","text":"","title":"Cloud Release Notes | March 29, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-29-march-2019/#product-enhancements","text":"We now integrate with Bitbucket using OAuth2 . This has allowed us to reduce the level of permissions we require when you integrate Codacy with your Bitbucket account. We updated TSLint to version 5.14.0 . As a way of improving performance, we've stopped analysis for inactive, free, and open-source accounts and we've communicated to those impacted by this measure. This was done so we could allocate more resources to people that are actively using Codacy. We removed the option to add projects using a Git URL. Projects that were added before February 12, 2019, will continue to be analyzed as usual. As part of our performance improvement measures, we've implemented an upper limit of 150 Kb for file sizes that should be considered for analysis. This means that: These files won't show in the UI as ignored Some projects that weren't analyzing before will now be able to analyze Some projects will take less time to analyze Some projects will have fewer issues as third party libraries issues covered by this limit won't show Some projects will have more issues because the analysis batch in which they're inserted won't fail Although most of the files that are now being ignored will be third-party dependencies and generated files, there is still the chance that some files that are actually development code and should be analyzed won't be. This is a global setting and is currently not customizable per-client (that option is only available for Self-hosted customers)","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-29-march-2019/#bug-fixes","text":"Fixed a bug where it wasn't possible to unignore a file Fixed a bug where it wasn't possible to add Bitbucket integration in the project Settings -> Integrations page Fixed a bug where pull requests weren't analyzing when a branch was renamed Fixed a bug where the \" Unignore issue\" button wasn't working Fixed a bug where webhook notifications were being sent with incomplete information Fixed a bug that prevented users to save changes in project Settings when using Firefox 61 Fixed a bug with PHP_CodeSniffer \"PHPCS_Internal\" pattern that was generating false positives Fixed a bug with PHP_CodeSniffer deprecated parameters customSanitizingFunctions property and WordPress.CSRF.NonceVerification that were generating false positives Fixed a bug that was causing Cppcheck to fail analysis Fixed a bug where the Merged Pull Requests view was showing a blank page Fixed a bug where it wasn't possible to invite new team members from the Commit page Fixed a bug where the Codacy status page link was broken Fixed a bug where it wasn't possible to remove a user from an organization if the user had a special character in the name Fixed a bug where some links in the https://security.codacy.com/ page were broken Fixed a bug where a user was having to confirm access to their Bitbucket account every time they logged in to Codacy Fixed a bug where the link to \"See all files\" on the coverage applet in the project dashboard wasn't clickable Fixed a typo in the Pull Requests page in the \"possible fixed issues\" message","title":"Bug fixes"},{"location":"release-notes/cloud/cloud-release-notes-%7C-30-oct-2019/","text":"Cloud Release Notes | October 30, 2019 \u00b6 Product enhancements \u00b6 Improved Coverage support for C# by adding a dedicated tool to upload coverage Codacy Coverage Reporter now supports LCOV making it easier to upload coverage for JavaScript, Typescript and C. Updated tools: Remark-lint has been updated to 6.0.4 ShellCheck has been updated to 0.7.0 Stylelint has been updated to 11.1.1 Detekt has been updated to 1.0.1 Sonar C# has been updated to 7.17 PMD has been updated to 6.18.0 Default patterns for PMD Added support for the following plugins: Rubocop-rails eslint-plugin-wdio vue-eslint-parser Bug fixes \u00b6 Fixed patterns that were causing false positives for Scalameta Pro Fixed broken links in patterns descriptions Fixed a bug causing an intermittent error screen when users tried to log out Fixed several vulnerabilities related to Cross-site Scripting Fixed bug causing \"Error dividing by Zero\" error when trying to upload a coverage report Fixed a bug that was stopping Checkstyle from returning results if certain patterns were enabled Fixed bug where Pylint would not analyze Django projects","title":"Cloud Release Notes | October 30, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-30-oct-2019/#cloud-release-notes-october-30-2019","text":"","title":"Cloud Release Notes | October 30, 2019"},{"location":"release-notes/cloud/cloud-release-notes-%7C-30-oct-2019/#product-enhancements","text":"Improved Coverage support for C# by adding a dedicated tool to upload coverage Codacy Coverage Reporter now supports LCOV making it easier to upload coverage for JavaScript, Typescript and C. Updated tools: Remark-lint has been updated to 6.0.4 ShellCheck has been updated to 0.7.0 Stylelint has been updated to 11.1.1 Detekt has been updated to 1.0.1 Sonar C# has been updated to 7.17 PMD has been updated to 6.18.0 Default patterns for PMD Added support for the following plugins: Rubocop-rails eslint-plugin-wdio vue-eslint-parser","title":"Product enhancements"},{"location":"release-notes/cloud/cloud-release-notes-%7C-30-oct-2019/#bug-fixes","text":"Fixed patterns that were causing false positives for Scalameta Pro Fixed broken links in patterns descriptions Fixed a bug causing an intermittent error screen when users tried to log out Fixed several vulnerabilities related to Cross-site Scripting Fixed bug causing \"Error dividing by Zero\" error when trying to upload a coverage report Fixed a bug that was stopping Checkstyle from returning results if certain patterns were enabled Fixed bug where Pylint would not analyze Django projects","title":"Bug fixes"},{"location":"release-notes/cloud/codacy-now-supports-github-apps/","text":"Codacy now supports GitHub Apps \u00b6 We're changing the way you authenticate to Codacy with GitHub: Starting February 2020, when you sign in, you'll be prompted to use GitHub Apps. GitHub Apps are the new preferred way of building products that work with GitHub repositories. Unlike right now, where you must grant access to everything in your account, with Apps you'll be able to select which accounts, organizations, and repositories Codacy has access to. You can also grant access to more later. If you previously wanted to grant access to only one of your organizations or only a specific repository, Apps will have you covered. Using Apps also unlocks access to new APIs, like GitHub Checks for creating better pull request reviews. To migrate to Apps all you have to do is sign out, sign in to Codacy and follow the wizard requesting the new permissions. Existing integrations will continue to work.","title":"Codacy now supports GitHub Apps"},{"location":"release-notes/cloud/codacy-now-supports-github-apps/#codacy-now-supports-github-apps","text":"We're changing the way you authenticate to Codacy with GitHub: Starting February 2020, when you sign in, you'll be prompted to use GitHub Apps. GitHub Apps are the new preferred way of building products that work with GitHub repositories. Unlike right now, where you must grant access to everything in your account, with Apps you'll be able to select which accounts, organizations, and repositories Codacy has access to. You can also grant access to more later. If you previously wanted to grant access to only one of your organizations or only a specific repository, Apps will have you covered. Using Apps also unlocks access to new APIs, like GitHub Checks for creating better pull request reviews. To migrate to Apps all you have to do is sign out, sign in to Codacy and follow the wizard requesting the new permissions. Existing integrations will continue to work.","title":"Codacy now supports GitHub Apps"},{"location":"release-notes/cloud/deprecating-http-headers-for-api-tokens/","text":"Deprecating HTTP headers for API tokens | April 1, 2020 \u00b6 On April 1st, 2020 we're deprecating the following HTTP headers used to authenticate to the Codacy API using either an API token or project token: api_token project_token From this date onward, use the following HTTP headers instead: api-token project-token How does this change impact me? \u00b6 We will support the new and old HTTP headers simultaneously for some time. However, we intend to drop the support for the old HTTP headers in the future. As such, to avoid downtime in your operations, we recommend that you do the following as soon as possible : Update the Codacy Coverage Reporter to version 7.6.6 or later Update the Codacy Analysis CLI to version 3.0.0 or later If you have any custom tools or scripts that integrate with the Codacy API, update them to use the new HTTP headers. Background information \u00b6 By default, NGINX silently drops HTTP headers containing underscores . With the old HTTP headers, this would require an extra configuration step during the Codacy installation process. We decided to avoid this extra complexity by changing to the new HTTP headers that don't include underscores.","title":"Deprecating HTTP headers for API tokens | April 1, 2020"},{"location":"release-notes/cloud/deprecating-http-headers-for-api-tokens/#deprecating-http-headers-for-api-tokens-april-1-2020","text":"On April 1st, 2020 we're deprecating the following HTTP headers used to authenticate to the Codacy API using either an API token or project token: api_token project_token From this date onward, use the following HTTP headers instead: api-token project-token","title":"Deprecating HTTP headers for API tokens | April 1, 2020"},{"location":"release-notes/cloud/deprecating-http-headers-for-api-tokens/#how-does-this-change-impact-me","text":"We will support the new and old HTTP headers simultaneously for some time. However, we intend to drop the support for the old HTTP headers in the future. As such, to avoid downtime in your operations, we recommend that you do the following as soon as possible : Update the Codacy Coverage Reporter to version 7.6.6 or later Update the Codacy Analysis CLI to version 3.0.0 or later If you have any custom tools or scripts that integrate with the Codacy API, update them to use the new HTTP headers.","title":"How does this change impact me?"},{"location":"release-notes/cloud/deprecating-http-headers-for-api-tokens/#background-information","text":"By default, NGINX silently drops HTTP headers containing underscores . With the old HTTP headers, this would require an extra configuration step during the Codacy installation process. We decided to avoid this extra complexity by changing to the new HTTP headers that don't include underscores.","title":"Background information"},{"location":"release-notes/cloud/removal-of-nodesecurity-golint-and-scsslint/","text":"Removal of NodeSecurity, GoLint, and SCSSLint \u00b6 On the week of March 9th 2020, we'll be removing some tools from Codacy. Those tools are NodeSecurity, GoLint, and SCSSLint. These tools have become deprecated or stopped being updated by their maintainers and started providing a bad experience for Codacy users either by reporting false positives or causing other unexpected issues. We've been working on alternatives for each tool. Continue reading to find out how you can replace each of the removed tools: NodeSecurity : This tool detects outdated NPM dependencies. It stopped being maintained two years ago when it was acquired and replaced by NPM itself. Since it stopped being updated it will no longer find new vulnerabilities, thus becoming useless and only providing a false sense of security. Recommendation: If you have an NPM repository you now have this functionality out-of-the-box. GoLint : Last month we launched a new Go tool - Revive - which is a drop-in replacement for GoLint supporting all of its rules and even more. Recommendation: Revive was enabled by default for your Go repositories with GoLint's. Check that the default patterns make sense for your team. SCSSLint : This tool is now unmaintained for four years with the old maintainers suggesting that users migrate to Stylelint which is already supported by Codacy for quite some time. Recommendation: Check that the Stylelint is enabled and its default patterns make sense for your team.","title":"Removal of NodeSecurity, GoLint, and SCSSLint"},{"location":"release-notes/cloud/removal-of-nodesecurity-golint-and-scsslint/#removal-of-nodesecurity-golint-and-scsslint","text":"On the week of March 9th 2020, we'll be removing some tools from Codacy. Those tools are NodeSecurity, GoLint, and SCSSLint. These tools have become deprecated or stopped being updated by their maintainers and started providing a bad experience for Codacy users either by reporting false positives or causing other unexpected issues. We've been working on alternatives for each tool. Continue reading to find out how you can replace each of the removed tools: NodeSecurity : This tool detects outdated NPM dependencies. It stopped being maintained two years ago when it was acquired and replaced by NPM itself. Since it stopped being updated it will no longer find new vulnerabilities, thus becoming useless and only providing a false sense of security. Recommendation: If you have an NPM repository you now have this functionality out-of-the-box. GoLint : Last month we launched a new Go tool - Revive - which is a drop-in replacement for GoLint supporting all of its rules and even more. Recommendation: Revive was enabled by default for your Go repositories with GoLint's. Check that the default patterns make sense for your team. SCSSLint : This tool is now unmaintained for four years with the old maintainers suggesting that users migrate to Stylelint which is already supported by Codacy for quite some time. Recommendation: Check that the Stylelint is enabled and its default patterns make sense for your team.","title":"Removal of NodeSecurity, GoLint, and SCSSLint"},{"location":"release-notes/self-hosted/self-hosted-v1.0.0/","text":"Self-hosted v1.0.0 \u00b6 These release notes are for Codacy Self-hosted v1.0.0 , released on May 18, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 Streamlined the configuration of Git providers and improved the onboarding flow that guides the user while performing the initial Codacy setup. (CY-468) Bug fixes \u00b6 Fixed an issue that could cause pull requests to not be analyzed by improving the robustness of how Codacy fetches Git repositories. (CY-1542) Fixed an issue that caused Codacy to fail to display the information for the pull request tabs Hotspots and Diff . (CY-1690) Fixed an issue that prevented Codacy from analyzing repositories in synced organizations if the repositories had the state OwnerNotCommiter . (CY-1611) Fixed an issue that prevented using the Codacy configuration file to exclude files from the coverage analysis. (CY-229)","title":"Self-hosted v1.0.0"},{"location":"release-notes/self-hosted/self-hosted-v1.0.0/#self-hosted-v100","text":"These release notes are for Codacy Self-hosted v1.0.0 , released on May 18, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.0.0"},{"location":"release-notes/self-hosted/self-hosted-v1.0.0/#product-enhancements","text":"Streamlined the configuration of Git providers and improved the onboarding flow that guides the user while performing the initial Codacy setup. (CY-468)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v1.0.0/#bug-fixes","text":"Fixed an issue that could cause pull requests to not be analyzed by improving the robustness of how Codacy fetches Git repositories. (CY-1542) Fixed an issue that caused Codacy to fail to display the information for the pull request tabs Hotspots and Diff . (CY-1690) Fixed an issue that prevented Codacy from analyzing repositories in synced organizations if the repositories had the state OwnerNotCommiter . (CY-1611) Fixed an issue that prevented using the Codacy configuration file to exclude files from the coverage analysis. (CY-229)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v1.0.1/","text":"Self-hosted v1.0.1 \u00b6 These release notes are for Codacy Self-hosted v1.0.1 , released on May 21, 2020. To upgrade Codacy, follow these instructions . Bug fixes \u00b6 Fixed an issue that caused the Helm deployment to time out because the Fluentd pods failed to start. (CY-1761)","title":"Self-hosted v1.0.1"},{"location":"release-notes/self-hosted/self-hosted-v1.0.1/#self-hosted-v101","text":"These release notes are for Codacy Self-hosted v1.0.1 , released on May 21, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.0.1"},{"location":"release-notes/self-hosted/self-hosted-v1.0.1/#bug-fixes","text":"Fixed an issue that caused the Helm deployment to time out because the Fluentd pods failed to start. (CY-1761)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v1.1.0/","text":"Self-hosted v1.1.0 \u00b6 These release notes are for Codacy Self-hosted v1.1.0 , released on May 26, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 The Profile and Access Management pages are now built using the React framework. (CY-83) It's now possible to define custom values for the analysis inactivity timeout, analysis task timeout, and maximum analysis file size. (CY-1298) Bug fixes \u00b6 Fixed an issue that sometimes caused logging into Codacy with GitLab Cloud to fail. (CY-1772) Fixed an issue that caused the deletion of an account in Codacy to fail. (CY-1720) Fixed an issue that could block Bitbucket Cloud and Bitbucket Server repositories from being added to Codacy if they contained spaces in the name. (CY-1717) Fixed an issue that prevented pull request notification emails from being sent to the pull request authors. (CY-1678)","title":"Self-hosted v1.1.0"},{"location":"release-notes/self-hosted/self-hosted-v1.1.0/#self-hosted-v110","text":"These release notes are for Codacy Self-hosted v1.1.0 , released on May 26, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.1.0"},{"location":"release-notes/self-hosted/self-hosted-v1.1.0/#product-enhancements","text":"The Profile and Access Management pages are now built using the React framework. (CY-83) It's now possible to define custom values for the analysis inactivity timeout, analysis task timeout, and maximum analysis file size. (CY-1298)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v1.1.0/#bug-fixes","text":"Fixed an issue that sometimes caused logging into Codacy with GitLab Cloud to fail. (CY-1772) Fixed an issue that caused the deletion of an account in Codacy to fail. (CY-1720) Fixed an issue that could block Bitbucket Cloud and Bitbucket Server repositories from being added to Codacy if they contained spaces in the name. (CY-1717) Fixed an issue that prevented pull request notification emails from being sent to the pull request authors. (CY-1678)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v1.2.0/","text":"Self-hosted v1.2.0 \u00b6 These release notes are for Codacy Self-hosted v1.2.0 , released on June 4, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 To avoid downtime, Codacy now automatically rolls the deployment when performing an Help upgrade. (CY-1420) Now, Codacy doesn't allow the last Codacy administrator to delete its own account. (CY-1768) Bug fixes \u00b6 Fixed an issue that prevented the correct removal of repositories from Codacy when the repositories were deleted on GitHub. (CY-1820)","title":"Self-hosted v1.2.0"},{"location":"release-notes/self-hosted/self-hosted-v1.2.0/#self-hosted-v120","text":"These release notes are for Codacy Self-hosted v1.2.0 , released on June 4, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.2.0"},{"location":"release-notes/self-hosted/self-hosted-v1.2.0/#product-enhancements","text":"To avoid downtime, Codacy now automatically rolls the deployment when performing an Help upgrade. (CY-1420) Now, Codacy doesn't allow the last Codacy administrator to delete its own account. (CY-1768)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v1.2.0/#bug-fixes","text":"Fixed an issue that prevented the correct removal of repositories from Codacy when the repositories were deleted on GitHub. (CY-1820)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v1.3.0/","text":"Self-hosted v1.3.0 \u00b6 These release notes are for Codacy Self-hosted v1.3.0 , released on June 12, 2020. To upgrade Codacy, follow these instructions . Bug fixes \u00b6 Fixed misaligned organization cards in the onboarding screen UI. (CY-1864) Fixed an issue to improve the security of the OAuth 2.0 access token when making calls to the Bitbucket Cloud API. (CY-1856) Fixed alignment and wrong color of Git provider buttons when adding a new Git provider using Safari. (CY-1284)","title":"Self-hosted v1.3.0"},{"location":"release-notes/self-hosted/self-hosted-v1.3.0/#self-hosted-v130","text":"These release notes are for Codacy Self-hosted v1.3.0 , released on June 12, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.3.0"},{"location":"release-notes/self-hosted/self-hosted-v1.3.0/#bug-fixes","text":"Fixed misaligned organization cards in the onboarding screen UI. (CY-1864) Fixed an issue to improve the security of the OAuth 2.0 access token when making calls to the Bitbucket Cloud API. (CY-1856) Fixed alignment and wrong color of Git provider buttons when adding a new Git provider using Safari. (CY-1284)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v1.4.0/","text":"Self-hosted v1.4.0 \u00b6 These release notes are for Codacy Self-hosted v1.4.0 , released on June 23, 2020. To upgrade Codacy, follow these instructions . Bug fixes \u00b6 Fixed an issue that could cause the list of repositories in an organization to display the repositories in the incorrect order. (CY-1940) Fixed an issue that could prevent pull requests from being analyzed if they were created while Codacy was already performing an analysis. (CY-1902) Fixed a UI issue affecting the Country drop-down box in the Plan and Billing page. (CY-1896) Fixed broken layout of Codacy comments on pull requests by removing the Codacy logo. (CY-1819) Fixed an UI issue affecting the list of default patterns under the account settings. (CY-522) Improved the feedback message provided by Codacy when deactivating a pattern that already has detected issues. (CY-117) Fixed an issue preventing the coverage information tab to be displayed in the page for specific files in the repository if the coverage was 0%. (CY-118)","title":"Self-hosted v1.4.0"},{"location":"release-notes/self-hosted/self-hosted-v1.4.0/#self-hosted-v140","text":"These release notes are for Codacy Self-hosted v1.4.0 , released on June 23, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.4.0"},{"location":"release-notes/self-hosted/self-hosted-v1.4.0/#bug-fixes","text":"Fixed an issue that could cause the list of repositories in an organization to display the repositories in the incorrect order. (CY-1940) Fixed an issue that could prevent pull requests from being analyzed if they were created while Codacy was already performing an analysis. (CY-1902) Fixed a UI issue affecting the Country drop-down box in the Plan and Billing page. (CY-1896) Fixed broken layout of Codacy comments on pull requests by removing the Codacy logo. (CY-1819) Fixed an UI issue affecting the list of default patterns under the account settings. (CY-522) Improved the feedback message provided by Codacy when deactivating a pattern that already has detected issues. (CY-117) Fixed an issue preventing the coverage information tab to be displayed in the page for specific files in the repository if the coverage was 0%. (CY-118)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v1.5.0/","text":"Self-hosted v1.5.0 \u00b6 These release notes are for Codacy Self-hosted v1.5.0 , released on July 20, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 Added support for Gosec, the Golang Security Checker, as a client-side tool . It's now possible to add repositories to Codacy programmatically with the new API v3 endpoint addRepository . (CY-1877) Streamlined the configuration of Git providers and improved the onboarding flow that guides the user while performing the initial Codacy setup. (CY-468) Added support for GitLab Enterprise synced organizations. (CY-68) Bug fixes \u00b6 Codacy no longer displays a banner asking to add the user to the list of authors for commits with no associated email address. (CY-2020) Fixed an issue that prevented Codacy from automatically removing GitHub organizations with the GitHub Marketplace plan when they were deleted on the Git provider. (CY-1989) Fixed an issue that allowed users with access to a repository on the Git provider but who didn't belong to the organization on Codacy to change settings for that repository on the Codacy UI. (CY-1985) Added missing redirect from the login page to the repositories list page when the user is already logged in. (CY-1946) Fixed an issue that prevented Codacy from reporting the Complexity metric on TypeScript repositories. (CY-1824) Fixed an issue related to the expiration of the session cookie that caused the Codacy API to return 401 Unauthorized errors when the user was correctly logged in. (CY-1815)","title":"Self-hosted v1.5.0"},{"location":"release-notes/self-hosted/self-hosted-v1.5.0/#self-hosted-v150","text":"These release notes are for Codacy Self-hosted v1.5.0 , released on July 20, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v1.5.0"},{"location":"release-notes/self-hosted/self-hosted-v1.5.0/#product-enhancements","text":"Added support for Gosec, the Golang Security Checker, as a client-side tool . It's now possible to add repositories to Codacy programmatically with the new API v3 endpoint addRepository . (CY-1877) Streamlined the configuration of Git providers and improved the onboarding flow that guides the user while performing the initial Codacy setup. (CY-468) Added support for GitLab Enterprise synced organizations. (CY-68)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v1.5.0/#bug-fixes","text":"Codacy no longer displays a banner asking to add the user to the list of authors for commits with no associated email address. (CY-2020) Fixed an issue that prevented Codacy from automatically removing GitHub organizations with the GitHub Marketplace plan when they were deleted on the Git provider. (CY-1989) Fixed an issue that allowed users with access to a repository on the Git provider but who didn't belong to the organization on Codacy to change settings for that repository on the Codacy UI. (CY-1985) Added missing redirect from the login page to the repositories list page when the user is already logged in. (CY-1946) Fixed an issue that prevented Codacy from reporting the Complexity metric on TypeScript repositories. (CY-1824) Fixed an issue related to the expiration of the session cookie that caused the Codacy API to return 401 Unauthorized errors when the user was correctly logged in. (CY-1815)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v2.0.0/","text":"Self-hosted v2.0.0 \u00b6 These release notes are for Codacy Self-hosted v2.0.0 , released on August 18, 2020. To upgrade Codacy, follow these instructions . Breaking changes \u00b6 This version of Codacy Self-hosted introduces the following breaking changes: You must manually delete the existing RabbitMQ PVCs before upgrading Codacy. To do this, start by removing the RabbitMQ statefulset : kubectl delete sts/codacy-rabbitmq-ha -n codacy Confirm the name of the PVCs that were created by RabbitMQ: kubectl get pvc -n codacy Finally, delete all the PVCs related to RabbitMQ. You should have three replicas which was the default for versions older than 2.0.0: kubectl delete pvc data-codacy-rabbitmq-ha-0 -n codacy kubectl delete pvc data-codacy-rabbitmq-ha-1 -n codacy kubectl delete pvc data-codacy-rabbitmq-ha-2 -n codacy Important After you upgrade Codacy, our chart will install a new version of RabbitMQ with the new default of one replica . The structure of the file values-production.yaml changed. You must update your version of the file to match the structure of the new file: The following analysis workers configuration values moved from: worker-manager : config : workers : [ ... ] workerResources : [ ... ] pluginResources : [ ... ] To: global : workerManager : workers : config : [ ... ] workerResources : [ ... ] pluginResources : [ ... ] The following database configuration values moved from: hotspots-api : hotspotsdb : [ ... ] activities : activitiesdb : [ ... ] crow : crowdb : [ ... ] To: global : hotspotsdb : [ ... ] activitiesdb : [ ... ] crowdb : [ ... ] The following Erlang cookie configuration was added to the RabbitMQ configuration values: rabbitmq-ha : rabbitmqErlangCookie : <--- erlang-cookie ---> # Generate one with `cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1` [ ... ] When you previously installed Codacy, this cookie was automatically set to a random value. We recommend that you keep the same cookie to help ensure that the Codacy upgrade runs smoothly. Run the following command to retrieve the current cookie value and define it explicitly in the new configuration: kubectl get secrets -n codacy codacy-rabbitmq-ha -o jsonpath = \"{.data.rabbitmq-erlang-cookie}\" | base64 --decode Product enhancements \u00b6 The chart for Codacy Self-hosted now supports Helm 3.3 . Updated the RabbitMQ chart to version 7.5.7 from the Bitnami Helm chart repository. Updated the MinIO chart to version 5.0.33 from the stable Helm chart repository. Bug fixes \u00b6 Now, Codacy provides feedback if the Country field is empty while updating the invoice details for an organization. (CY-2600) Fixed an issue that prevented users from finishing the onboarding process unless they added a Git provider organization. (CY-2580) Fixed an issue that prevented Codacy from loading the organization data from the Git provider during the onboarding process. (CY-2572) Fixed an issue that prevented Codacy from sending commit and pull request notification emails to members of an organization. (CY-2467) Fixed an issue that could cause Codacy to display an HTTP 404 error page instead of the Repositories page for an organization. (CY-2356) Fixed an issue that could cause Codacy to stop syncing Bitbucket Cloud repositories and updating pull requests in those repositories. (CY-2355) Fixed an issue that could prevent new users from starting the onboarding wizard. (CY-2288) Now, Codacy automatically navigates to the Organizations page after deleting an organization. (CY-2278) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba: 0.13.1 (updated from 0.12.0) Bandit: 1.6.2 Brakeman: 4.3.1 Bundler Audit: 0.6.1 Checkstyle: 8.34 CodeNarc: 1.6 (updated from 1.5) Coffeelint: 2.1.0 Cppcheck: 2.1 (updated from 1.90) Credo: 1.3.0 CSSLint: 1.0.5 Detekt: 1.10.0 (updated from 1.8.0) ESLint: 7.6.0 (updated from 6.8.0) Flawfinder: 2.0.11 Gorevive: 1.0.2 Gosec: v2.3.0 Hadolint: 1.17.5 Jackson Linter: 2.10.2 JSHint: 2.10.2 PHP_CodeSniffer: 3.5.6 (updated from 3.5.5) Phpmd: 2.8.1 PMD (Legacy): 5.8.1 PMD: 6.25.0 Prospector: 1.2.0 PSScriptAnalyser: 1.18.3 Pylint Python3: 2.5.3 Pylint: 1.9.5 Remark Lint: 7.0.0 Rubocop: 0.82.0 Scalastyle: 1.0.0 ShellCheck: v0.7.0 Sonar C#: 8.10 (updated from 8.9) Sonar Visual Basic: 8.10 (updated from 8.9) SpotBugs: 4.0.1 (updated from 4.0.0) SQLint: 0.1.9 Staticcheck: 2017.2.2 Stylelint: 13.6.1 SwiftLint: 0.39.2 (updated from 0.36.0) Tailor: 0.12.0 TSLint: 5.14.0 TSQLLint: 1.11.1","title":"Self-hosted v2.0.0"},{"location":"release-notes/self-hosted/self-hosted-v2.0.0/#self-hosted-v200","text":"These release notes are for Codacy Self-hosted v2.0.0 , released on August 18, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v2.0.0"},{"location":"release-notes/self-hosted/self-hosted-v2.0.0/#breaking-changes","text":"This version of Codacy Self-hosted introduces the following breaking changes: You must manually delete the existing RabbitMQ PVCs before upgrading Codacy. To do this, start by removing the RabbitMQ statefulset : kubectl delete sts/codacy-rabbitmq-ha -n codacy Confirm the name of the PVCs that were created by RabbitMQ: kubectl get pvc -n codacy Finally, delete all the PVCs related to RabbitMQ. You should have three replicas which was the default for versions older than 2.0.0: kubectl delete pvc data-codacy-rabbitmq-ha-0 -n codacy kubectl delete pvc data-codacy-rabbitmq-ha-1 -n codacy kubectl delete pvc data-codacy-rabbitmq-ha-2 -n codacy Important After you upgrade Codacy, our chart will install a new version of RabbitMQ with the new default of one replica . The structure of the file values-production.yaml changed. You must update your version of the file to match the structure of the new file: The following analysis workers configuration values moved from: worker-manager : config : workers : [ ... ] workerResources : [ ... ] pluginResources : [ ... ] To: global : workerManager : workers : config : [ ... ] workerResources : [ ... ] pluginResources : [ ... ] The following database configuration values moved from: hotspots-api : hotspotsdb : [ ... ] activities : activitiesdb : [ ... ] crow : crowdb : [ ... ] To: global : hotspotsdb : [ ... ] activitiesdb : [ ... ] crowdb : [ ... ] The following Erlang cookie configuration was added to the RabbitMQ configuration values: rabbitmq-ha : rabbitmqErlangCookie : <--- erlang-cookie ---> # Generate one with `cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1` [ ... ] When you previously installed Codacy, this cookie was automatically set to a random value. We recommend that you keep the same cookie to help ensure that the Codacy upgrade runs smoothly. Run the following command to retrieve the current cookie value and define it explicitly in the new configuration: kubectl get secrets -n codacy codacy-rabbitmq-ha -o jsonpath = \"{.data.rabbitmq-erlang-cookie}\" | base64 --decode","title":"Breaking changes"},{"location":"release-notes/self-hosted/self-hosted-v2.0.0/#product-enhancements","text":"The chart for Codacy Self-hosted now supports Helm 3.3 . Updated the RabbitMQ chart to version 7.5.7 from the Bitnami Helm chart repository. Updated the MinIO chart to version 5.0.33 from the stable Helm chart repository.","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v2.0.0/#bug-fixes","text":"Now, Codacy provides feedback if the Country field is empty while updating the invoice details for an organization. (CY-2600) Fixed an issue that prevented users from finishing the onboarding process unless they added a Git provider organization. (CY-2580) Fixed an issue that prevented Codacy from loading the organization data from the Git provider during the onboarding process. (CY-2572) Fixed an issue that prevented Codacy from sending commit and pull request notification emails to members of an organization. (CY-2467) Fixed an issue that could cause Codacy to display an HTTP 404 error page instead of the Repositories page for an organization. (CY-2356) Fixed an issue that could cause Codacy to stop syncing Bitbucket Cloud repositories and updating pull requests in those repositories. (CY-2355) Fixed an issue that could prevent new users from starting the onboarding wizard. (CY-2288) Now, Codacy automatically navigates to the Organizations page after deleting an organization. (CY-2278)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v2.0.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba: 0.13.1 (updated from 0.12.0) Bandit: 1.6.2 Brakeman: 4.3.1 Bundler Audit: 0.6.1 Checkstyle: 8.34 CodeNarc: 1.6 (updated from 1.5) Coffeelint: 2.1.0 Cppcheck: 2.1 (updated from 1.90) Credo: 1.3.0 CSSLint: 1.0.5 Detekt: 1.10.0 (updated from 1.8.0) ESLint: 7.6.0 (updated from 6.8.0) Flawfinder: 2.0.11 Gorevive: 1.0.2 Gosec: v2.3.0 Hadolint: 1.17.5 Jackson Linter: 2.10.2 JSHint: 2.10.2 PHP_CodeSniffer: 3.5.6 (updated from 3.5.5) Phpmd: 2.8.1 PMD (Legacy): 5.8.1 PMD: 6.25.0 Prospector: 1.2.0 PSScriptAnalyser: 1.18.3 Pylint Python3: 2.5.3 Pylint: 1.9.5 Remark Lint: 7.0.0 Rubocop: 0.82.0 Scalastyle: 1.0.0 ShellCheck: v0.7.0 Sonar C#: 8.10 (updated from 8.9) Sonar Visual Basic: 8.10 (updated from 8.9) SpotBugs: 4.0.1 (updated from 4.0.0) SQLint: 0.1.9 Staticcheck: 2017.2.2 Stylelint: 13.6.1 SwiftLint: 0.39.2 (updated from 0.36.0) Tailor: 0.12.0 TSLint: 5.14.0 TSQLLint: 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v2.1.0/","text":"Self-hosted v2.1.0 \u00b6 These release notes are for Codacy Self-hosted v2.1.0 , released on September 16, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 Improved the repositories list page to streamline managing the repositories in an organization and display metrics for each repository. (CY-1847) Bug fixes \u00b6 Fixed an issue that prevented analyzing private repositories in organizations that had upgraded from trial to the Pro plan. (CY-2716) Fixed an issue that prevented changes to GitHub Marketplace subscriptions to be reflected accordingly on Codacy. (CY-2712) Fixed an issue that caused repository dashboards to show empty charts for the last 8 commits. (CY-2699) Fixed an issue that caused the code patterns page to incorrectly display the configuration file option selected for tools that didn't have a configuration file in the repository. (CY-2697) Fixed an issue that caused repository dashboards to show empty charts instead of the last 8 commits if the repositories didn't have enough historical data. (CY-2694) Fixed an issue that could prevent Codacy from displaying organizations and repositories that the user had access to on GitLab Cloud or GitLab Enterprise. (CY-2685) Fixed an issue that could cause the quality evolution chart in repository dashboards to display historical data only for the last 8 commits instead of for the last 31 or 7 days. (CY-2670) When trying to add a repository that already exists in a different organization, Codacy now provides a more detailed error message that includes the name of the organization that already contains the repository. (CY-2620) If the duplication metric isn't calculated, the repository dashboards now provide clear error messages that include instructions on how to solve the issue. (CY-2436) Fixed an error when opening an empty repository list on GitHub Enterprise organizations. (CY-2361) Fixed the text alignment in the repositories screen empty state. (CY-2074) Fixed an issue that caused Codacy to send spurious email notifications to users who had enabled repository notifications only for their activity. (CY-1932) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 Bundler Audit 0.6.1 Checkstyle 8.34 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.1 Credo 1.3.0 CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.8.1 (updated from 7.6.0) Flawfinder 2.0.11 Gorevive 1.0.2 Gosec v2.3.0 Hadolint 1.17.5 Jackson Linter 2.10.2 JSHint 2.10.2 PHP_CodeSniffer 3.5.6 PHP Mess Detector 2.8.1 Pmd 6.27.0 (updated from 6.25.0) Pmdjava 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint Python3 2.6.0 (updated from 2.5.3) Remark Lint 7.0.0 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 (updated from v0.7.0) Sonar C# 8.12 (updated from 8.10) Sonar Visual Basic 8.12 (updated from 8.10) SpotBugs 4.1.2 (updated from 4.0.1) SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.0 (updated from 13.6.1) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v2.1.0"},{"location":"release-notes/self-hosted/self-hosted-v2.1.0/#self-hosted-v210","text":"These release notes are for Codacy Self-hosted v2.1.0 , released on September 16, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v2.1.0"},{"location":"release-notes/self-hosted/self-hosted-v2.1.0/#product-enhancements","text":"Improved the repositories list page to streamline managing the repositories in an organization and display metrics for each repository. (CY-1847)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v2.1.0/#bug-fixes","text":"Fixed an issue that prevented analyzing private repositories in organizations that had upgraded from trial to the Pro plan. (CY-2716) Fixed an issue that prevented changes to GitHub Marketplace subscriptions to be reflected accordingly on Codacy. (CY-2712) Fixed an issue that caused repository dashboards to show empty charts for the last 8 commits. (CY-2699) Fixed an issue that caused the code patterns page to incorrectly display the configuration file option selected for tools that didn't have a configuration file in the repository. (CY-2697) Fixed an issue that caused repository dashboards to show empty charts instead of the last 8 commits if the repositories didn't have enough historical data. (CY-2694) Fixed an issue that could prevent Codacy from displaying organizations and repositories that the user had access to on GitLab Cloud or GitLab Enterprise. (CY-2685) Fixed an issue that could cause the quality evolution chart in repository dashboards to display historical data only for the last 8 commits instead of for the last 31 or 7 days. (CY-2670) When trying to add a repository that already exists in a different organization, Codacy now provides a more detailed error message that includes the name of the organization that already contains the repository. (CY-2620) If the duplication metric isn't calculated, the repository dashboards now provide clear error messages that include instructions on how to solve the issue. (CY-2436) Fixed an error when opening an empty repository list on GitHub Enterprise organizations. (CY-2361) Fixed the text alignment in the repositories screen empty state. (CY-2074) Fixed an issue that caused Codacy to send spurious email notifications to users who had enabled repository notifications only for their activity. (CY-1932)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v2.1.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 Bundler Audit 0.6.1 Checkstyle 8.34 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.1 Credo 1.3.0 CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.8.1 (updated from 7.6.0) Flawfinder 2.0.11 Gorevive 1.0.2 Gosec v2.3.0 Hadolint 1.17.5 Jackson Linter 2.10.2 JSHint 2.10.2 PHP_CodeSniffer 3.5.6 PHP Mess Detector 2.8.1 Pmd 6.27.0 (updated from 6.25.0) Pmdjava 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint Python3 2.6.0 (updated from 2.5.3) Remark Lint 7.0.0 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 (updated from v0.7.0) Sonar C# 8.12 (updated from 8.10) Sonar Visual Basic 8.12 (updated from 8.10) SpotBugs 4.1.2 (updated from 4.0.1) SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.0 (updated from 13.6.1) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v2.1.1/","text":"Self-hosted v2.1.1 \u00b6 These release notes are for Codacy Self-hosted v2.1.1 , released on September 24, 2020. To upgrade Codacy, follow these instructions . Bug fixes \u00b6 Fixed an issue that prevented Codacy from detecting and analyzing new commits and pull requests in repositories belonging to synced organizations. This issue only affected repositories that didn't have a post-commit hook enabled and required Codacy to poll for changes. (CY-2781) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 Bundler Audit 0.6.1 Checkstyle 8.34 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.1 Credo 1.3.0 CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.8.1 Flawfinder 2.0.11 Gorevive 1.0.2 Gosec v2.3.0 Hadolint 1.17.5 Jackson Linter 2.10.2 JSHint 2.10.2 PHP_CodeSniffer 3.5.6 Phpmd 2.8.1 PMD 6.27.0 Pmdjava 5.8.1 Prospector 1.2.0 PSScriptAnalyser 1.18.3 Pylint 1.9.5 Pylint Python3 2.6.0 Remark Lint 7.0.0 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.12 Sonar Visual Basic 8.12 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.0 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v2.1.1"},{"location":"release-notes/self-hosted/self-hosted-v2.1.1/#self-hosted-v211","text":"These release notes are for Codacy Self-hosted v2.1.1 , released on September 24, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v2.1.1"},{"location":"release-notes/self-hosted/self-hosted-v2.1.1/#bug-fixes","text":"Fixed an issue that prevented Codacy from detecting and analyzing new commits and pull requests in repositories belonging to synced organizations. This issue only affected repositories that didn't have a post-commit hook enabled and required Codacy to poll for changes. (CY-2781)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v2.1.1/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 Bundler Audit 0.6.1 Checkstyle 8.34 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.1 Credo 1.3.0 CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.8.1 Flawfinder 2.0.11 Gorevive 1.0.2 Gosec v2.3.0 Hadolint 1.17.5 Jackson Linter 2.10.2 JSHint 2.10.2 PHP_CodeSniffer 3.5.6 Phpmd 2.8.1 PMD 6.27.0 Pmdjava 5.8.1 Prospector 1.2.0 PSScriptAnalyser 1.18.3 Pylint 1.9.5 Pylint Python3 2.6.0 Remark Lint 7.0.0 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.12 Sonar Visual Basic 8.12 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.0 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v2.2.0/","text":"Self-hosted v2.2.0 \u00b6 These release notes are for Codacy Self-hosted v2.2.0 , released on October 8, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 You can now use the Codacy Analysis CLI GitHub Action to analyze each commit and pull request. (CY-2663) You can now use personal organizations to manage your personal repositories. (CY-1802) Updated the Organization and Repository dashboards with a cleaner user experience and better performance. (CY-1733) Bug fixes \u00b6 Fixed an issue that could cause worker pods to stay alive indefinitely, consuming unneeded resources. (CY-2932) Now, Codacy lists 100 organizations for each Git provider on the Organizations page. (CY-2853) Fixed an issue that caused the error No instant converter found for type: java.time.Instant while trying to open some pages in legacy manual organizations. (CY-2852) Now, the Repositories list page allows opening repositories in a new browser tab using either Ctrl + Click or right-clicking the repository names. (CY-2604) Fixed an issue that caused Content Security Policy console errors while opening the Repositories list page. (CY-2494) Fixed a UI glitch on the Plan and billing page that was visible when upgrading to the Pro plan. (CY-1977) Now, the tab Without Owner on the page Admin / Projects correctly lists projects without an owner for synced organizations. (CY-224) Fixed an issue that caused the button Load More on the page Admin / Search to load random results. (CY-220) Fixed a UI glitch on the modal window asking for confirmation to ignore a file that was visible for long file names. (CY-92) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.34 Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.1 Credo 1.4.0 (updated from 1.3.0) CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.10.0 (updated from 7.8.1) Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.17.5 JacksonLinter 2.10.2 JSHint 2.12.0 (updated from 2.10.2) PHP_CodeSniffer 3.5.6 PHP Mess Detector 2.8.1 PMD (Legacy) 5.8.1 PMD 6.27.0 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint (Python 3) 2.6.0 Pylint 1.9.5 RemarkLint 7.0.1 (updated from 7.0.0) Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.13 (updated from 8.12) Sonar Visual Basic 8.13 (updated from 8.12) SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.2 (updated from 13.7.0) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v2.2.0"},{"location":"release-notes/self-hosted/self-hosted-v2.2.0/#self-hosted-v220","text":"These release notes are for Codacy Self-hosted v2.2.0 , released on October 8, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v2.2.0"},{"location":"release-notes/self-hosted/self-hosted-v2.2.0/#product-enhancements","text":"You can now use the Codacy Analysis CLI GitHub Action to analyze each commit and pull request. (CY-2663) You can now use personal organizations to manage your personal repositories. (CY-1802) Updated the Organization and Repository dashboards with a cleaner user experience and better performance. (CY-1733)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v2.2.0/#bug-fixes","text":"Fixed an issue that could cause worker pods to stay alive indefinitely, consuming unneeded resources. (CY-2932) Now, Codacy lists 100 organizations for each Git provider on the Organizations page. (CY-2853) Fixed an issue that caused the error No instant converter found for type: java.time.Instant while trying to open some pages in legacy manual organizations. (CY-2852) Now, the Repositories list page allows opening repositories in a new browser tab using either Ctrl + Click or right-clicking the repository names. (CY-2604) Fixed an issue that caused Content Security Policy console errors while opening the Repositories list page. (CY-2494) Fixed a UI glitch on the Plan and billing page that was visible when upgrading to the Pro plan. (CY-1977) Now, the tab Without Owner on the page Admin / Projects correctly lists projects without an owner for synced organizations. (CY-224) Fixed an issue that caused the button Load More on the page Admin / Search to load random results. (CY-220) Fixed a UI glitch on the modal window asking for confirmation to ignore a file that was visible for long file names. (CY-92)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v2.2.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.34 Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.1 Credo 1.4.0 (updated from 1.3.0) CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.10.0 (updated from 7.8.1) Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.17.5 JacksonLinter 2.10.2 JSHint 2.12.0 (updated from 2.10.2) PHP_CodeSniffer 3.5.6 PHP Mess Detector 2.8.1 PMD (Legacy) 5.8.1 PMD 6.27.0 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint (Python 3) 2.6.0 Pylint 1.9.5 RemarkLint 7.0.1 (updated from 7.0.0) Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.13 (updated from 8.12) Sonar Visual Basic 8.13 (updated from 8.12) SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.2 (updated from 13.7.0) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v2.2.1/","text":"Self-hosted v2.2.1 \u00b6 These release notes are for Codacy Self-hosted v2.2.1 , released on October 22, 2020. To upgrade Codacy, follow these instructions . After that, restart the Fluentd pods by running the following command, replacing <namespace> with the namespace in which Codacy was installed: daemonset = $( kubectl get daemonsets --namespace <namespace> -o jsonpath = '{.items[*].metadata.name}' ) && \\ kubectl rollout restart daemonset $daemonset --namespace <namespace> && \\ kubectl rollout status daemonset $daemonset --namespace <namespace> --watch Bug fixes \u00b6 Fixed an issue that caused the script that collects logs from a Codacy instance to return an empty archive. (CY-3068) Fixed a UI glitch that prevented enabling Git provider integrations in the repository settings. (CY-3049) Fixed an issue that prevented Codacy from displaying repositories in Bitbucket organizations. (CY-3048) Fixed an issue that prevented Codacy from displaying repositories in GitHub organizations. (CY-3002) Fixed an issue that caused deployments of the codacy-tools pod to fail. (CY-2990) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.34 Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 (updated from 2.1) Credo 1.4.0 CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.10.0 Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.17.5 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.6 PHP Mess Detector 2.8.1 PMD (Legacy) 5.8.1 PMD 6.27.0 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint (Python 3) 2.6.0 Pylint 1.9.5 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.13 Sonar Visual Basic 8.13 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.2 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v2.2.1"},{"location":"release-notes/self-hosted/self-hosted-v2.2.1/#self-hosted-v221","text":"These release notes are for Codacy Self-hosted v2.2.1 , released on October 22, 2020. To upgrade Codacy, follow these instructions . After that, restart the Fluentd pods by running the following command, replacing <namespace> with the namespace in which Codacy was installed: daemonset = $( kubectl get daemonsets --namespace <namespace> -o jsonpath = '{.items[*].metadata.name}' ) && \\ kubectl rollout restart daemonset $daemonset --namespace <namespace> && \\ kubectl rollout status daemonset $daemonset --namespace <namespace> --watch","title":"Self-hosted v2.2.1"},{"location":"release-notes/self-hosted/self-hosted-v2.2.1/#bug-fixes","text":"Fixed an issue that caused the script that collects logs from a Codacy instance to return an empty archive. (CY-3068) Fixed a UI glitch that prevented enabling Git provider integrations in the repository settings. (CY-3049) Fixed an issue that prevented Codacy from displaying repositories in Bitbucket organizations. (CY-3048) Fixed an issue that prevented Codacy from displaying repositories in GitHub organizations. (CY-3002) Fixed an issue that caused deployments of the codacy-tools pod to fail. (CY-2990)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v2.2.1/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.34 Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 (updated from 2.1) Credo 1.4.0 CSSLint 1.0.5 Detekt 1.10.0 ESLint 7.10.0 Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.17.5 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.6 PHP Mess Detector 2.8.1 PMD (Legacy) 5.8.1 PMD 6.27.0 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint (Python 3) 2.6.0 Pylint 1.9.5 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.13 Sonar Visual Basic 8.13 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.2 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v3.0.0/","text":"Self-hosted v3.0.0 \u00b6 These release notes are for Codacy Self-hosted v3.0.0 , released on November 2, 2020. To upgrade Codacy, follow these instructions . Breaking changes \u00b6 If you are using GitHub and require Codacy pull request status to pass before merging pull requests you must manually re-enable the required status check on your repositories. To do this: Wait until there is a new status check from Codacy on your repositories using the new GitHub Checks integration: Follow the instructions to require the Codacy status check to pass before merging pull requests on your GitHub branch protection rules. Product enhancements \u00b6 Codacy now supports the integration with GitHub Checks. From now on, all Codacy analysis information on pull requests will show up under the Checks tab on the GitHub pull request pages. For private repositories, the annotations will appear as authored by Codacy instead of the user who configured the integration. (CY-46) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.34 Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.10.0 Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.18.2 (updated from 1.17.5) JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 (updated from 3.5.6) PHP Mess Detector 2.8.1 PMD (Legacy) 5.8.1 PMD 6.28.0 (updated from 6.27.0) Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint (Python 3) 2.6.0 Pylint 1.9.5 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.14 (updated from 8.13) Sonar Visual Basic 8.14 (updated from 8.13) SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.2 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v3.0.0"},{"location":"release-notes/self-hosted/self-hosted-v3.0.0/#self-hosted-v300","text":"These release notes are for Codacy Self-hosted v3.0.0 , released on November 2, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v3.0.0"},{"location":"release-notes/self-hosted/self-hosted-v3.0.0/#breaking-changes","text":"If you are using GitHub and require Codacy pull request status to pass before merging pull requests you must manually re-enable the required status check on your repositories. To do this: Wait until there is a new status check from Codacy on your repositories using the new GitHub Checks integration: Follow the instructions to require the Codacy status check to pass before merging pull requests on your GitHub branch protection rules.","title":"Breaking changes"},{"location":"release-notes/self-hosted/self-hosted-v3.0.0/#product-enhancements","text":"Codacy now supports the integration with GitHub Checks. From now on, all Codacy analysis information on pull requests will show up under the Checks tab on the GitHub pull request pages. For private repositories, the annotations will appear as authored by Codacy instead of the user who configured the integration. (CY-46)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v3.0.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.34 Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.10.0 Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.18.2 (updated from 1.17.5) JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 (updated from 3.5.6) PHP Mess Detector 2.8.1 PMD (Legacy) 5.8.1 PMD 6.28.0 (updated from 6.27.0) Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint (Python 3) 2.6.0 Pylint 1.9.5 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.14 (updated from 8.13) Sonar Visual Basic 8.14 (updated from 8.13) SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2017.2.2 Stylelint 13.7.2 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v3.1.0/","text":"Self-hosted v3.1.0 \u00b6 These release notes are for Codacy Self-hosted v3.1.0 , released on December 10, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 Now, Codacy stores the date when users are removed so that this information is available when using codacy-usage-report . (CY-3194) Improvements to the supported languages and tools : Added static analysis support for Objective-C with the tool Faux Pas. Expanded static analysis support for Go with the client-side tools aligncheck, deadcode, and Staticcheck. Added duplication and complexity support for Kotlin with the tools jscpd and Detekt. (CY-3003) Bug fixes \u00b6 Fixed onboarding error message while adding a repository on an organization where the GitHub App isn't installed. (CY-3317) Fixed a broken link in the commit page to the corresponding GitLab Enterprise commit. (CY-3285) Now, Codacy blocks GitLab merge requests until the analysis is complete by displaying a pending pipeline. (CY-3235) Fixed an issue that could cause users to receive emails about the analysis of repositories in organizations they don't belong to. (CY-3228) Fixed building the URLs for the Codacy Self-hosted documentation. (CY-3018) Now, Codacy displays an error message if the command git diff fails to obtain the deltas for a commit because of incompatible line endings . (CY-2799) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: aligncheck (new) Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 (updated from 8.34) Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 deadcode (new) Detekt 1.14.2 (updated from 1.10.0) ESLint 7.14.0 (updated from 7.11.0) Faux Pas 1.7.2 (new) Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.15 (updated from 8.14) Sonar Visual Basic 8.15 (updated from 8.14) SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 (new) Stylelint 13.8.0 (updated from 13.7.2) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v3.1.0"},{"location":"release-notes/self-hosted/self-hosted-v3.1.0/#self-hosted-v310","text":"These release notes are for Codacy Self-hosted v3.1.0 , released on December 10, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v3.1.0"},{"location":"release-notes/self-hosted/self-hosted-v3.1.0/#product-enhancements","text":"Now, Codacy stores the date when users are removed so that this information is available when using codacy-usage-report . (CY-3194) Improvements to the supported languages and tools : Added static analysis support for Objective-C with the tool Faux Pas. Expanded static analysis support for Go with the client-side tools aligncheck, deadcode, and Staticcheck. Added duplication and complexity support for Kotlin with the tools jscpd and Detekt. (CY-3003)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v3.1.0/#bug-fixes","text":"Fixed onboarding error message while adding a repository on an organization where the GitHub App isn't installed. (CY-3317) Fixed a broken link in the commit page to the corresponding GitLab Enterprise commit. (CY-3285) Now, Codacy blocks GitLab merge requests until the analysis is complete by displaying a pending pipeline. (CY-3235) Fixed an issue that could cause users to receive emails about the analysis of repositories in organizations they don't belong to. (CY-3228) Fixed building the URLs for the Codacy Self-hosted documentation. (CY-3018) Now, Codacy displays an error message if the command git diff fails to obtain the deltas for a commit because of incompatible line endings . (CY-2799)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v3.1.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: aligncheck (new) Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 (updated from 8.34) Clang-Tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 deadcode (new) Detekt 1.14.2 (updated from 1.10.0) ESLint 7.14.0 (updated from 7.11.0) Faux Pas 1.7.2 (new) Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.15 (updated from 8.14) Sonar Visual Basic 8.15 (updated from 8.14) SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 (new) Stylelint 13.8.0 (updated from 13.7.2) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v3.2.0/","text":"Self-hosted v3.2.0 \u00b6 These release notes are for Codacy Self-hosted v3.2.0 , released on December 17, 2020. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 To overcome timeouts when loading the repositories list page on Codacy Self-hosted, it's now possible to configure how many repositories to load at a time. To do this, set a value lower than the default of 100 by configuring codacy-spa.config.codacy.pagination.repositoriesLimit on your values-production.yml configuration file. (CY-3352) Now, Codacy has an improved user experience to add and manage organizations that supports displaying an indefinite number of organizations per Git provider. (CY-1938) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 Clang-tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.14.2 ESLint 7.15.0 (updated from 7.14.0) Faux-Pas 1.7.2 Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.15 Sonar Visual Basic 8.15 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 Stylelint 13.8.0 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Self-hosted v3.2.0"},{"location":"release-notes/self-hosted/self-hosted-v3.2.0/#self-hosted-v320","text":"These release notes are for Codacy Self-hosted v3.2.0 , released on December 17, 2020. To upgrade Codacy, follow these instructions .","title":"Self-hosted v3.2.0"},{"location":"release-notes/self-hosted/self-hosted-v3.2.0/#product-enhancements","text":"To overcome timeouts when loading the repositories list page on Codacy Self-hosted, it's now possible to configure how many repositories to load at a time. To do this, set a value lower than the default of 100 by configuring codacy-spa.config.codacy.pagination.repositoriesLimit on your values-production.yml configuration file. (CY-3352) Now, Codacy has an improved user experience to add and manage organizations that supports displaying an indefinite number of organizations per Git provider. (CY-1938)","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v3.2.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.6.2 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 Clang-tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.14.2 ESLint 7.15.0 (updated from 7.14.0) Faux-Pas 1.7.2 Flawfinder 2.0.11 Gosec v2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 0.82.0 Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.15 Sonar Visual Basic 8.15 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 Stylelint 13.8.0 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 5.14.0 TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v3.3.0/","text":"Self-hosted v3.3.0 \u00b6 These release notes are for Codacy Self-hosted v3.3.0 , released on February 12, 2021. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 The Codacy top navigation bar now includes a link to the recently launched Codacy Community . Join us there! (CY-3462) It's now possible to import tool and pattern configurations from another repository to make it easier to set up new repositories and have consistent rules across repositories. (CY-3162) Codacy Self-hosted now supports Kubernetes version 1.20.* . Bug fixes \u00b6 Fixed an issue while fetching groups from GitLab if the user owned more than 100 groups with similar names. (CY-3506) The Codacy API endpoint getUserPermissionOnOrganization now correctly returns the permission author for people who have been invited to an organization. (CY-3471) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.7.0 (updated from 1.6.2) Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 Clang-tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.14.2 ESLint 7.18.0 (updated from 7.15.0) Faux-Pas 1.7.2 Flawfinder 2.0.11 Gosec 2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 1.9.1 (updated from 0.82.0) Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.15 Sonar Visual Basic 8.15 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 Stylelint 13.8.0 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 6.1.3 (updated from 5.14.0) TSQLLint 1.11.1","title":"Self-hosted v3.3.0"},{"location":"release-notes/self-hosted/self-hosted-v3.3.0/#self-hosted-v330","text":"These release notes are for Codacy Self-hosted v3.3.0 , released on February 12, 2021. To upgrade Codacy, follow these instructions .","title":"Self-hosted v3.3.0"},{"location":"release-notes/self-hosted/self-hosted-v3.3.0/#product-enhancements","text":"The Codacy top navigation bar now includes a link to the recently launched Codacy Community . Join us there! (CY-3462) It's now possible to import tool and pattern configurations from another repository to make it easier to set up new repositories and have consistent rules across repositories. (CY-3162) Codacy Self-hosted now supports Kubernetes version 1.20.* .","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v3.3.0/#bug-fixes","text":"Fixed an issue while fetching groups from GitLab if the user owned more than 100 groups with similar names. (CY-3506) The Codacy API endpoint getUserPermissionOnOrganization now correctly returns the permission author for people who have been invited to an organization. (CY-3471)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v3.3.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.7.0 (updated from 1.6.2) Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 Clang-tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.14.2 ESLint 7.18.0 (updated from 7.15.0) Faux-Pas 1.7.2 Flawfinder 2.0.11 Gosec 2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.2.0 PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 1.9.1 (updated from 0.82.0) Scalastyle 1.0.0 ShellCheck v0.7.1 Sonar C# 8.15 Sonar Visual Basic 8.15 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 Stylelint 13.8.0 SwiftLint 0.39.2 Tailor 0.12.0 TSLint 6.1.3 (updated from 5.14.0) TSQLLint 1.11.1","title":"Tool versions"},{"location":"release-notes/self-hosted/self-hosted-v3.4.0/","text":"Self-hosted v3.4.0 \u00b6 These release notes are for Codacy Self-hosted v3.4.0 , released on March 12, 2021. To upgrade Codacy, follow these instructions . Product enhancements \u00b6 It's now possible to see the current Codacy Self-hosted version under the avatar menu. (CY-3767) Now, Codacy allows configuring who is allowed to ignore issues on all supported Git providers. (CY-3581) Now, the Code patterns page allows you to enable or disable all code patterns in a category with a single click. (CY-3527) Added the following Codacy API endpoints: listFiles returns the most recent analysis information for the files in a repository as available on the Files page . (CY-3540) searchRepositoryIssues returns information about the issues that Codacy found in a repository as available on the Issues page . (CY-3468) searchRepositoryIgnoredIssues returns information about the issues that Codacy found in a repository and were ignored on the Codacy UI . (CY-3498) You can now activate automatic GitHub fix suggestions to issues identified by ESLint. This way, instead of having to do most fixes by themselves, your team members can save time by approving the suggestion to have the code automatically updated and merged. (CY-3439) Improved the onboarding flow for new users to simplify adding organizations and repositories and help troubleshoot common issues. (CY-3405) Now, the Repository Dashboard and Issues page include links to the corresponding documentation to help you make the most from the code quality information provided by Codacy and to assist you in configuring your repository settings. (CY-3303) Now, Codacy has an improved user experience to manage people in organizations. (CY-2954) Now, the Repositories list automatically suggests repositories that you haven't added to Codacy yet when you search for a repository . (CY-2363) Codacy Self-hosted now supports MicroK8s version 1.20.* . Bug fixes \u00b6 Fixed wrong message when disabling patterns on the Issues page. (CY-3745) Fixed an issue that caused the configuration value containing the username of the metrics database to be used as the username for jobsdb . (CY-3697) Fixed an issue that caused the security dashboard to allow enabling patterns for tools using a configuration file. (CY-3684) Fixed an issue that caused Sonar C# to detect issues related to patterns not enabled in the configuration. (CY-3607) Tool versions \u00b6 This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.7.0 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 Clang-tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.14.2 ESLint 7.18.0 Faux-Pas 1.7.2 Flawfinder 2.0.11 Gosec 2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.3.1 (updated from 1.2.0) PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 1.11.0 (updated from 1.9.1) ScalaStyle 1.5.0 (updated from 1.0.0, adds support for Scala 2.13) ShellCheck v0.7.1 Sonar C# 8.13 (updated from 8.15) Sonar Visual Basic 8.15 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 Stylelint 13.11.0 (updated from 13.8.0) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 6.1.3 TSQLLint 1.11.1","title":"Self-hosted v3.4.0"},{"location":"release-notes/self-hosted/self-hosted-v3.4.0/#self-hosted-v340","text":"These release notes are for Codacy Self-hosted v3.4.0 , released on March 12, 2021. To upgrade Codacy, follow these instructions .","title":"Self-hosted v3.4.0"},{"location":"release-notes/self-hosted/self-hosted-v3.4.0/#product-enhancements","text":"It's now possible to see the current Codacy Self-hosted version under the avatar menu. (CY-3767) Now, Codacy allows configuring who is allowed to ignore issues on all supported Git providers. (CY-3581) Now, the Code patterns page allows you to enable or disable all code patterns in a category with a single click. (CY-3527) Added the following Codacy API endpoints: listFiles returns the most recent analysis information for the files in a repository as available on the Files page . (CY-3540) searchRepositoryIssues returns information about the issues that Codacy found in a repository as available on the Issues page . (CY-3468) searchRepositoryIgnoredIssues returns information about the issues that Codacy found in a repository and were ignored on the Codacy UI . (CY-3498) You can now activate automatic GitHub fix suggestions to issues identified by ESLint. This way, instead of having to do most fixes by themselves, your team members can save time by approving the suggestion to have the code automatically updated and merged. (CY-3439) Improved the onboarding flow for new users to simplify adding organizations and repositories and help troubleshoot common issues. (CY-3405) Now, the Repository Dashboard and Issues page include links to the corresponding documentation to help you make the most from the code quality information provided by Codacy and to assist you in configuring your repository settings. (CY-3303) Now, Codacy has an improved user experience to manage people in organizations. (CY-2954) Now, the Repositories list automatically suggests repositories that you haven't added to Codacy yet when you search for a repository . (CY-2363) Codacy Self-hosted now supports MicroK8s version 1.20.* .","title":"Product enhancements"},{"location":"release-notes/self-hosted/self-hosted-v3.4.0/#bug-fixes","text":"Fixed wrong message when disabling patterns on the Issues page. (CY-3745) Fixed an issue that caused the configuration value containing the username of the metrics database to be used as the username for jobsdb . (CY-3697) Fixed an issue that caused the security dashboard to allow enabling patterns for tools using a configuration file. (CY-3684) Fixed an issue that caused Sonar C# to detect issues related to patterns not enabled in the configuration. (CY-3607)","title":"Bug fixes"},{"location":"release-notes/self-hosted/self-hosted-v3.4.0/#tool-versions","text":"This version of Codacy Self-hosted includes the tool versions below. The tools that were updated on this version are highlighted in bold: Ameba 0.13.1 Bandit 1.7.0 Brakeman 4.3.1 BundlerAudit 0.6.1 Checkstyle 8.37 Clang-tidy 10.0.1 CodeNarc 1.6 Coffeelint 2.1.0 Cppcheck 2.2 Credo 1.4.0 CSSLint 1.0.5 Detekt 1.14.2 ESLint 7.18.0 Faux-Pas 1.7.2 Flawfinder 2.0.11 Gosec 2.3.0 Hadolint 1.18.2 JacksonLinter 2.10.2 JSHint 2.12.0 PHP_CodeSniffer 3.5.8 PHP Mess Detector 2.8.1 PMD 6.28.0 PMD (Legacy) 5.8.1 Prospector 1.3.1 (updated from 1.2.0) PSScriptAnalyzer 1.18.3 Pylint 1.9.5 Pylint (Python 3) 2.6.0 RemarkLint 7.0.1 Revive 1.0.2 Rubocop 1.11.0 (updated from 1.9.1) ScalaStyle 1.5.0 (updated from 1.0.0, adds support for Scala 2.13) ShellCheck v0.7.1 Sonar C# 8.13 (updated from 8.15) Sonar Visual Basic 8.15 SpotBugs 4.1.2 SQLint 0.1.9 Staticcheck 2020.1.6 Stylelint 13.11.0 (updated from 13.8.0) SwiftLint 0.39.2 Tailor 0.12.0 TSLint 6.1.3 TSQLLint 1.11.1","title":"Tool versions"},{"location":"repositories/badges/","text":"Badges \u00b6 You can add a Codacy badge to the README of your repository to display the current code quality grade or code coverage. To obtain your Codacy badge, open your repository Settings , tab General , select the markup language, and copy the generated code to your README file. If you have set up code coverage for your repository, you can also add a badge for your coverage. If you want the Codacy badge to display information for a different branch, specify the name of the branch by appending the query parameter branch=<branch_name> to the URL of the badge. For example: https://app.codacy.com/project/badge/Grade/cba8fd0874ac4f569f4f880e473cbac9?branch=dev","title":"Badges"},{"location":"repositories/badges/#badges","text":"You can add a Codacy badge to the README of your repository to display the current code quality grade or code coverage. To obtain your Codacy badge, open your repository Settings , tab General , select the markup language, and copy the generated code to your README file. If you have set up code coverage for your repository, you can also add a badge for your coverage. If you want the Codacy badge to display information for a different branch, specify the name of the branch by appending the query parameter branch=<branch_name> to the URL of the badge. For example: https://app.codacy.com/project/badge/Grade/cba8fd0874ac4f569f4f880e473cbac9?branch=dev","title":"Badges"},{"location":"repositories/commits/","text":"Commits page \u00b6 1. Commit list \u00b6 This list is meant to give you an overview of the repository's commits, providing valuable information about changes and quality improvements. Click on the row to see more details. Visualization of the commits defaults to the main branch of the repository. This can be changed by selecting another branch on the combo box. When viewing the commits list, some commits may still not have been analyzed, either because the analysis is still running or belongs to a branch that hasn't been selected for analysis. These can be easily identified by the status column. Just hover the icon to get some extra info. If any commit created or fixed any issue on the repository, that information will be displayed on the right-hand side of the list, allowing for a quick overview of the repository quality evolutions. 2. Commit detail \u00b6 The commit detail will show you an overview of what changed in that particular commit, showing all the differences that were introduced. A detailed issue delta information is always available, showing exactly which issues were fixed or created in each commit. By expanding an issue, you can find information on why it's an issue, how to solve it, and links to community sources on the problem found. You will also find a few additional options, including Ignore issue , Remove pattern , Ignore file , and also integrations you may have enabled. The changed files can also be reviewed using a diff visualizer, helping achieve a quick and easy code review.","title":"Commits page"},{"location":"repositories/commits/#commits-page","text":"","title":"Commits page"},{"location":"repositories/commits/#1-commit-list","text":"This list is meant to give you an overview of the repository's commits, providing valuable information about changes and quality improvements. Click on the row to see more details. Visualization of the commits defaults to the main branch of the repository. This can be changed by selecting another branch on the combo box. When viewing the commits list, some commits may still not have been analyzed, either because the analysis is still running or belongs to a branch that hasn't been selected for analysis. These can be easily identified by the status column. Just hover the icon to get some extra info. If any commit created or fixed any issue on the repository, that information will be displayed on the right-hand side of the list, allowing for a quick overview of the repository quality evolutions.","title":"1. Commit list"},{"location":"repositories/commits/#2-commit-detail","text":"The commit detail will show you an overview of what changed in that particular commit, showing all the differences that were introduced. A detailed issue delta information is always available, showing exactly which issues were fixed or created in each commit. By expanding an issue, you can find information on why it's an issue, how to solve it, and links to community sources on the problem found. You will also find a few additional options, including Ignore issue , Remove pattern , Ignore file , and also integrations you may have enabled. The changed files can also be reviewed using a diff visualizer, helping achieve a quick and easy code review.","title":"2. Commit detail"},{"location":"repositories/files/","text":"Files page \u00b6 The file list shows all the files in your repository, sortable by six different columns: Grade Filename Number of issues Code duplication Complexity Code coverage There is also a search filter available. This allows you to keep track or focus some of your time on files with low coverage, high complexity, too many issues, or simply a lot of duplication that could be refactored. Clicking on a filename opens the File detail. The file detail starts with a header where you can see a lot of statistical information on the file: Below that header you will find a tab selector for further information on issues, coverage, and duplication. By default you will see the list of issues in the file. On the right-hand side you can toggle between a list view and the annotated source code. You can open each issue to get more information on it. For more information about Issues, please check the Issues page . The coverage tab shows you which lines are covered by tests and which aren't. As for the duplication tab, here you can find duplicated code and links to its clones.","title":"Files page"},{"location":"repositories/files/#files-page","text":"The file list shows all the files in your repository, sortable by six different columns: Grade Filename Number of issues Code duplication Complexity Code coverage There is also a search filter available. This allows you to keep track or focus some of your time on files with low coverage, high complexity, too many issues, or simply a lot of duplication that could be refactored. Clicking on a filename opens the File detail. The file detail starts with a header where you can see a lot of statistical information on the file: Below that header you will find a tab selector for further information on issues, coverage, and duplication. By default you will see the list of issues in the file. On the right-hand side you can toggle between a list view and the annotated source code. You can open each issue to get more information on it. For more information about Issues, please check the Issues page . The coverage tab shows you which lines are covered by tests and which aren't. As for the duplication tab, here you can find duplicated code and links to its clones.","title":"Files page"},{"location":"repositories/issues/","text":"Issues page \u00b6 The Issues page lists all the issues that Codacy detected in your repository. By default, the page lists the issues on the main branch of your repository but if you have more than one branch enabled you can use the drop-down list at the top of the page to display issues on other branches. Click the title of an issue to see the following information: The contributor and date of the commit that introduced the issue The tool that reported the issue and the estimated time to fix it What's the issue and how to solve it The programming language and category of the issue Filtering issues \u00b6 Filter the list of issues to find particular issues, such as the issues with the highest severity or security issues: You can define one or more of the following filters: Language : Programming language of the file where the issues were detected Issue category : One of the following types of issue: Code Style: Code formatting and syntax problems, such as variable names style and enforcing the use of brackets and quotation marks Error Prone: Code that may hide bugs and language keywords that should be used with caution, such as the operator == in JavaScript or Option.get in Scala Code Complexity: High complexity methods and classes that should be refactored Performance: Code that can have performance problems Compatibility: Mainly for frontend code, compatibility problems across different browser versions Unused Code: Unused variables and methods, code that can't be reached Security: All security problems Documentation: Methods and classes that don't have the correct comment annotations Severity level : Potential impact of the issues: Error (red): The most dangerous issues that you should prioritize fixing since they identify code that's susceptible to serious problems regarding security and compatibility Warning (yellow): You should check out these issues, as they're based on code standards and conventions Info (blue): The least critical issues, such as code style issues Pattern : Code pattern that detected the issue Author : Commit author that introduced the issue on the code Note Each code pattern has a pre-defined severity level and at the moment Codacy doesn't support customizing that information. Ignoring and managing issues \u00b6 Use the options in the cogwheel menu of each issue to: Ignore the issue and hide it from the list. Codacy will no longer report the issue after the next analysis of your repository. For example, you can ignore issues that you disagree with because: Your team won't tackle the issues in the immediate future The issue isn't relevant in the specific context of your code The issue is a false positive See how to restore ignored issues . Tip Organization owners can configure who is allowed to ignore issues . Disable the code pattern that detected the issue. Codacy will stop using that pattern after the next analysis of your repository, so be sure that you're no longer interested in identifying similar issues. To re-enable patterns use the Code patterns page . Note If you're using a custom configuration file , you must manage patterns manually on your configuration file. Ignore the file where the issue was detected. Codacy will no longer analyze that file on your repository, so be sure that you're no longer interested in identifying any type of issues on that file. To remove an ignored file use the Ignored Files tab in your repository settings. The menu can include more options depending on the features that you enable on your GitHub or Bitbucket integration: GitHub integration Bitbucket integration Restoring ignored issues \u00b6 To see the list of ignored issues, click Current Issues and select Ignored Issues . To restore an ignored issue, click the button Unignore next to the issue title:","title":"Issues page"},{"location":"repositories/issues/#issues-page","text":"The Issues page lists all the issues that Codacy detected in your repository. By default, the page lists the issues on the main branch of your repository but if you have more than one branch enabled you can use the drop-down list at the top of the page to display issues on other branches. Click the title of an issue to see the following information: The contributor and date of the commit that introduced the issue The tool that reported the issue and the estimated time to fix it What's the issue and how to solve it The programming language and category of the issue","title":"Issues page"},{"location":"repositories/issues/#filtering-issues","text":"Filter the list of issues to find particular issues, such as the issues with the highest severity or security issues: You can define one or more of the following filters: Language : Programming language of the file where the issues were detected Issue category : One of the following types of issue: Code Style: Code formatting and syntax problems, such as variable names style and enforcing the use of brackets and quotation marks Error Prone: Code that may hide bugs and language keywords that should be used with caution, such as the operator == in JavaScript or Option.get in Scala Code Complexity: High complexity methods and classes that should be refactored Performance: Code that can have performance problems Compatibility: Mainly for frontend code, compatibility problems across different browser versions Unused Code: Unused variables and methods, code that can't be reached Security: All security problems Documentation: Methods and classes that don't have the correct comment annotations Severity level : Potential impact of the issues: Error (red): The most dangerous issues that you should prioritize fixing since they identify code that's susceptible to serious problems regarding security and compatibility Warning (yellow): You should check out these issues, as they're based on code standards and conventions Info (blue): The least critical issues, such as code style issues Pattern : Code pattern that detected the issue Author : Commit author that introduced the issue on the code Note Each code pattern has a pre-defined severity level and at the moment Codacy doesn't support customizing that information.","title":"Filtering issues"},{"location":"repositories/issues/#ignoring-and-managing-issues","text":"Use the options in the cogwheel menu of each issue to: Ignore the issue and hide it from the list. Codacy will no longer report the issue after the next analysis of your repository. For example, you can ignore issues that you disagree with because: Your team won't tackle the issues in the immediate future The issue isn't relevant in the specific context of your code The issue is a false positive See how to restore ignored issues . Tip Organization owners can configure who is allowed to ignore issues . Disable the code pattern that detected the issue. Codacy will stop using that pattern after the next analysis of your repository, so be sure that you're no longer interested in identifying similar issues. To re-enable patterns use the Code patterns page . Note If you're using a custom configuration file , you must manage patterns manually on your configuration file. Ignore the file where the issue was detected. Codacy will no longer analyze that file on your repository, so be sure that you're no longer interested in identifying any type of issues on that file. To remove an ignored file use the Ignored Files tab in your repository settings. The menu can include more options depending on the features that you enable on your GitHub or Bitbucket integration: GitHub integration Bitbucket integration","title":"Ignoring and managing issues"},{"location":"repositories/issues/#restoring-ignored-issues","text":"To see the list of ignored issues, click Current Issues and select Ignored Issues . To restore an ignored issue, click the button Unignore next to the issue title:","title":"Restoring ignored issues"},{"location":"repositories/repository-dashboard/","text":"Repository Dashboard \u00b6 The Repository Dashboard provides an overview of the repository code quality and items that require your attention. To access your Repository Dashboard, select a repository from the Organization Dashboard or open a repository on any other page and select Dashboard on the left navigation sidebar. Tip You can share the URL of the Repository Dashboard for your public repositories to allow other people to see your repository code quality metrics, even if they aren't registered on Codacy. The top of the Repository Dashboard displays: The name and code quality grade of the repository A drop-down list that selects which branch of your repository to display on the dashboard On the Repository Dashboard you have four areas to help you monitor your repository: Quality evolution chart Issues breakdown Coverage Open pull requests The following sections provide a detailed overview of each dashboard area. Quality evolution chart \u00b6 The Quality evolution chart displays the evolution of the repository code quality regarding issues, complex files, duplication, and coverage. Click on Last 3 months , Last 31 days , or Last 7 days to select the time interval of the historical data to display on the chart. Each tab displays the following information for the corresponding metric: A green or red indicator depending if the metric is within the acceptable quality level or not The current value The variation of the value introduced by the last commit Note The coverage tab only displays a value if Codacy received coverage data for the most recent commit. This is because one commit can easily change the size or number of files on the repository, or even remove some of the files that had coverage information. The chart also displays the trendline based on the past behavior and the quality standard defined on the repository quality settings . Issues breakdown \u00b6 The Issues breakdown area displays the total number of issues found on the selected branch, as well as the distribution of issues across each code quality issue category. Click See all issues to see the full list of issues found, or click a category to see the issues in that category. Coverage \u00b6 The Coverage area displays the percentage of lines of code on the selected branch that are covered by tests versus the quality settings defined for the repository, as well as the number of files: Without coverage With coverage not up to standards (based on your repository quality settings) With coverage up to standards (based on your repository quality settings) Click See all files to open the list of files in the repository. Tip If you don't have coverage set up for your repository yet, the Coverage area provides you with instructions on how to add coverage for your repository . Open pull requests \u00b6 The Open pull requests area displays the number of open pull requests in the repository and the split between the following status: Not up to standards Up to standards Analyzing (intermediate status while Codacy is analyzing the pull request) Click See all pull requests to open the list of pull requests in the repository.","title":"Repository Dashboard"},{"location":"repositories/repository-dashboard/#repository-dashboard","text":"The Repository Dashboard provides an overview of the repository code quality and items that require your attention. To access your Repository Dashboard, select a repository from the Organization Dashboard or open a repository on any other page and select Dashboard on the left navigation sidebar. Tip You can share the URL of the Repository Dashboard for your public repositories to allow other people to see your repository code quality metrics, even if they aren't registered on Codacy. The top of the Repository Dashboard displays: The name and code quality grade of the repository A drop-down list that selects which branch of your repository to display on the dashboard On the Repository Dashboard you have four areas to help you monitor your repository: Quality evolution chart Issues breakdown Coverage Open pull requests The following sections provide a detailed overview of each dashboard area.","title":"Repository Dashboard"},{"location":"repositories/repository-dashboard/#quality-evolution-chart","text":"The Quality evolution chart displays the evolution of the repository code quality regarding issues, complex files, duplication, and coverage. Click on Last 3 months , Last 31 days , or Last 7 days to select the time interval of the historical data to display on the chart. Each tab displays the following information for the corresponding metric: A green or red indicator depending if the metric is within the acceptable quality level or not The current value The variation of the value introduced by the last commit Note The coverage tab only displays a value if Codacy received coverage data for the most recent commit. This is because one commit can easily change the size or number of files on the repository, or even remove some of the files that had coverage information. The chart also displays the trendline based on the past behavior and the quality standard defined on the repository quality settings .","title":"Quality evolution chart"},{"location":"repositories/repository-dashboard/#issues-breakdown","text":"The Issues breakdown area displays the total number of issues found on the selected branch, as well as the distribution of issues across each code quality issue category. Click See all issues to see the full list of issues found, or click a category to see the issues in that category.","title":"Issues breakdown"},{"location":"repositories/repository-dashboard/#coverage","text":"The Coverage area displays the percentage of lines of code on the selected branch that are covered by tests versus the quality settings defined for the repository, as well as the number of files: Without coverage With coverage not up to standards (based on your repository quality settings) With coverage up to standards (based on your repository quality settings) Click See all files to open the list of files in the repository. Tip If you don't have coverage set up for your repository yet, the Coverage area provides you with instructions on how to add coverage for your repository .","title":"Coverage"},{"location":"repositories/repository-dashboard/#open-pull-requests","text":"The Open pull requests area displays the number of open pull requests in the repository and the split between the following status: Not up to standards Up to standards Analyzing (intermediate status while Codacy is analyzing the pull request) Click See all pull requests to open the list of pull requests in the repository.","title":"Open pull requests"},{"location":"repositories/security-monitor/","text":"Security Monitor \u00b6 This feature is only available on paid plans The Security Monitor provides an overview of all current security alerts. Supported languages \u00b6 The Security Monitor is available for the following languages: Apex C# Java JavaScript Python Ruby Scala PHP C C++ Shell script Dockerfile Visual Basic Elixir PowerShell TSQL Groovy Tools \u00b6 The Security Monitor displays issues using security patterns from: Bandit Brakeman Codacy Scalameta Pro ESLint (also: 1 , 2 , 3 and 4 ) SpotBugs (includes the plugin Find Security Bugs ) Sonar C# Sonar VB.NET PMD PHP Mess Detector Pylint (Python 2) Pylint (Python 3) Rubocop Cppcheck ShellCheck PHP CodeSniffer Hadolint Prospector Bundler-audit Credo Flawfinder PSScriptAnalyzer TSQLLint CodeNarc Supported categories \u00b6 XSS: XSS enables attackers to inject client-side scripts into web pages viewed by other users. Input validation: Input not validated may originate SQL Injection attacks for instance. File access: An attacker may use special paths to access files that shouldn't be accessible. HTTP: HTTP headers are a common attack vector for malign users. Cookies: An HTTP cookie is a small piece of data sent from a website and stored on the user's computer by the browser while the user is browsing. Unexpected behaviour: Assigning values to private APIs might lead to unexpected behavior. Mass assignment: Mass assignment is a feature of Rails which allows an application to create a record from the values of a hash. Insecure storage: Storing sensitive data using these APIs isn't safe. Insecure modules/libraries: Consider possible security implications associated with some modules. Visibility: Fields shouldn't have public accessibility. CSRF: Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. Android: Android-specific issues. Malicious code: Exposed internal APIs can be accessed or changed by malicious code or by accident from another package. Cryptography: Cryptography is a security technique widely used and there are several cryptographic functions, but not all of them are secure. Command injection: Command injection is an attack in which the goal is the execution of arbitrary commands on the host operating system. Firefox OS: Sensitive APIs of Firefox OS. Auth: Authentication is present in almost all web applications nowadays. DoS: The Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. SQL injection: A SQL injection attack consists of insertion or \"injection\" of a SQL query via the input data from the client to the application. Routes: Badly configured routes can give unintended access to an attacker. Regex: Regex can be used in a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach heavy computation situations that cause them to work very slowly (exponentially related to input size). SSL: Simply using SSL isn't enough to ensure the data you are sending is secure. Man in the middle attacks are well known and widely used. Other: Other language-specific security issues. Category states \u00b6 Each security category listed on the left-hand side of the dashboard has one of four states: State Description Everything is OK for this category All the security patterns in this category are enabled, and no security issues have been found. There are security patterns in this category that are disabled You should enable the patterns in this category so it's verified. To enable all security patterns on the repository, click the button More and select Turn on all security patterns . If you're using configuration files, you must manually enable the listed patterns on your configuration files. There are security issues identified for this category Codacy can't determine if all the security patterns in this category are enabled or not This happens when you're using configuration files to control which patterns are enabled. Ensure that you manually enable the listed patterns on your configuration files.","title":"Security Monitor"},{"location":"repositories/security-monitor/#security-monitor","text":"This feature is only available on paid plans The Security Monitor provides an overview of all current security alerts.","title":"Security Monitor"},{"location":"repositories/security-monitor/#supported-languages","text":"The Security Monitor is available for the following languages: Apex C# Java JavaScript Python Ruby Scala PHP C C++ Shell script Dockerfile Visual Basic Elixir PowerShell TSQL Groovy","title":"Supported languages"},{"location":"repositories/security-monitor/#tools","text":"The Security Monitor displays issues using security patterns from: Bandit Brakeman Codacy Scalameta Pro ESLint (also: 1 , 2 , 3 and 4 ) SpotBugs (includes the plugin Find Security Bugs ) Sonar C# Sonar VB.NET PMD PHP Mess Detector Pylint (Python 2) Pylint (Python 3) Rubocop Cppcheck ShellCheck PHP CodeSniffer Hadolint Prospector Bundler-audit Credo Flawfinder PSScriptAnalyzer TSQLLint CodeNarc","title":"Tools"},{"location":"repositories/security-monitor/#supported-categories","text":"XSS: XSS enables attackers to inject client-side scripts into web pages viewed by other users. Input validation: Input not validated may originate SQL Injection attacks for instance. File access: An attacker may use special paths to access files that shouldn't be accessible. HTTP: HTTP headers are a common attack vector for malign users. Cookies: An HTTP cookie is a small piece of data sent from a website and stored on the user's computer by the browser while the user is browsing. Unexpected behaviour: Assigning values to private APIs might lead to unexpected behavior. Mass assignment: Mass assignment is a feature of Rails which allows an application to create a record from the values of a hash. Insecure storage: Storing sensitive data using these APIs isn't safe. Insecure modules/libraries: Consider possible security implications associated with some modules. Visibility: Fields shouldn't have public accessibility. CSRF: Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. Android: Android-specific issues. Malicious code: Exposed internal APIs can be accessed or changed by malicious code or by accident from another package. Cryptography: Cryptography is a security technique widely used and there are several cryptographic functions, but not all of them are secure. Command injection: Command injection is an attack in which the goal is the execution of arbitrary commands on the host operating system. Firefox OS: Sensitive APIs of Firefox OS. Auth: Authentication is present in almost all web applications nowadays. DoS: The Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. SQL injection: A SQL injection attack consists of insertion or \"injection\" of a SQL query via the input data from the client to the application. Routes: Badly configured routes can give unintended access to an attacker. Regex: Regex can be used in a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach heavy computation situations that cause them to work very slowly (exponentially related to input size). SSL: Simply using SSL isn't enough to ensure the data you are sending is secure. Man in the middle attacks are well known and widely used. Other: Other language-specific security issues.","title":"Supported categories"},{"location":"repositories/security-monitor/#category-states","text":"Each security category listed on the left-hand side of the dashboard has one of four states: State Description Everything is OK for this category All the security patterns in this category are enabled, and no security issues have been found. There are security patterns in this category that are disabled You should enable the patterns in this category so it's verified. To enable all security patterns on the repository, click the button More and select Turn on all security patterns . If you're using configuration files, you must manually enable the listed patterns on your configuration files. There are security issues identified for this category Codacy can't determine if all the security patterns in this category are enabled or not This happens when you're using configuration files to control which patterns are enabled. Ensure that you manually enable the listed patterns on your configuration files.","title":"Category states"},{"location":"repositories-configure/codacy-configuration-file/","text":"Codacy configuration file \u00b6 Codacy supports configuring certain advanced features through a configuration file: Ignoring files globally, for duplication, or a specific tool Configuring a specific repository directory on which to start the analysis Adding custom extensions to languages, keeping in mind that some tools might not work out of the box with those extensions Note If a Codacy configuration file exists in your repository, the Ignored Files settings in the Codacy UI don't apply. To disable a tool you must use the Code Patterns page instead. To use a Codacy configuration file: Create a text file with the name .codacy.yml or .codacy.yaml on the root of your repository. Add your settings to the configuration file based on the example template below. Important The configuration file must start with a line containing a triple dash ( --- ). --- engines : rubocop : exclude_paths : - \"config/test.yml\" base_sub_dir : \"test/baseDir\" duplication : exclude_paths : - \"config/test.yml\" config : languages : - \"ruby\" languages : css : extensions : - \"-css.resource\" exclude_paths : - \".bundle/**\" - \"spec/**/*\" - \"benchmarks/**/*\" - \"**.min.js\" - \"**/tests/**\" Optionally, validate the syntax of your configuration file with the Codacy Analysis CLI by running the following command in the same folder as the Codacy configuration file: codacy-analysis-cli validate-configuration --directory ` pwd ` Syntax for excluding files \u00b6 To ignore files, you must use the Java glob syntax to define one or more exclude_paths patterns. For example: Example pattern Ignored files test/README.md The file test/README.md test/* All files in the root of test test/** All files and directories inside test test/**/* All files inside sub-directories of test **.resource All .resource files across all your repository **/*.resource All .resource files in all directories and sub-directories Which tools can be configured and which name should I use? \u00b6 You can configure all tools supported by Codacy using the configuration file. The following are the tool names that must be used in the Codacy configuration file: ameba bandit brakeman bundleraudit checkstyle codacy-scalameta-pro codenarc coffeelint cppcheck credo csslint detekt eslint findbugs findbugssec flawfinder golint govet hadolint jacksonlinter jshint nsp phpcs phpmd pmd-legacy pmd prospector psscriptanalyzer pylint pylintpython3 remark-lint rubocop scalastyle scsslint shellcheck sonarscharp spotbugs SQLint stylelint swiftlint tailor tslint tsqllint Tool-specific configurations \u00b6 Although Codacy tries to detect which language is used on each source code file, some false positives may occur. The tools below support specific configurations to specify the language or language version used in the source code files that you're analyzing. Cppcheck \u00b6 If you're using Cppcheck to analyze C or C++ source code files, add the following configuration to your Codacy configuration file to define the programming language you're using. The supported languages are c and c++ : --- engines : cppcheck : language : c++ PHP CodeSniffer \u00b6 If you're using the PHP Compatibility coding standard for PHP_CodeSniffer, add the following configuration to your Codacy configuration file to define the PHP version you're using: --- engines : phpcs : php_version : 5.5 Legacy Pylint 1.9.* \u00b6 If you're using the legacy Pylint 1.9.* to analyze Python source code files, add the following configuration to your Codacy configuration file to define the Python language version you're using. The supported versions are 2 and 3 : --- engines : pylint : python_version : 2 Tip If you're using Python 3.4.* or later as your programming language, we recommend that you disable the tool Pylint and enable the tool Pylint (Python 3) on your repository Code patterns page instead. For more information see What's New in Pylint 2.0 . If you have questions about the Codacy configuration file, please contact us at support@codacy.com .","title":"Codacy configuration file"},{"location":"repositories-configure/codacy-configuration-file/#codacy-configuration-file","text":"Codacy supports configuring certain advanced features through a configuration file: Ignoring files globally, for duplication, or a specific tool Configuring a specific repository directory on which to start the analysis Adding custom extensions to languages, keeping in mind that some tools might not work out of the box with those extensions Note If a Codacy configuration file exists in your repository, the Ignored Files settings in the Codacy UI don't apply. To disable a tool you must use the Code Patterns page instead. To use a Codacy configuration file: Create a text file with the name .codacy.yml or .codacy.yaml on the root of your repository. Add your settings to the configuration file based on the example template below. Important The configuration file must start with a line containing a triple dash ( --- ). --- engines : rubocop : exclude_paths : - \"config/test.yml\" base_sub_dir : \"test/baseDir\" duplication : exclude_paths : - \"config/test.yml\" config : languages : - \"ruby\" languages : css : extensions : - \"-css.resource\" exclude_paths : - \".bundle/**\" - \"spec/**/*\" - \"benchmarks/**/*\" - \"**.min.js\" - \"**/tests/**\" Optionally, validate the syntax of your configuration file with the Codacy Analysis CLI by running the following command in the same folder as the Codacy configuration file: codacy-analysis-cli validate-configuration --directory ` pwd `","title":"Codacy configuration file"},{"location":"repositories-configure/codacy-configuration-file/#syntax-for-excluding-files","text":"To ignore files, you must use the Java glob syntax to define one or more exclude_paths patterns. For example: Example pattern Ignored files test/README.md The file test/README.md test/* All files in the root of test test/** All files and directories inside test test/**/* All files inside sub-directories of test **.resource All .resource files across all your repository **/*.resource All .resource files in all directories and sub-directories","title":"Syntax for excluding files"},{"location":"repositories-configure/codacy-configuration-file/#which-tools-can-be-configured-and-which-name-should-i-use","text":"You can configure all tools supported by Codacy using the configuration file. The following are the tool names that must be used in the Codacy configuration file: ameba bandit brakeman bundleraudit checkstyle codacy-scalameta-pro codenarc coffeelint cppcheck credo csslint detekt eslint findbugs findbugssec flawfinder golint govet hadolint jacksonlinter jshint nsp phpcs phpmd pmd-legacy pmd prospector psscriptanalyzer pylint pylintpython3 remark-lint rubocop scalastyle scsslint shellcheck sonarscharp spotbugs SQLint stylelint swiftlint tailor tslint tsqllint","title":"Which tools can be configured and which name should I use?"},{"location":"repositories-configure/codacy-configuration-file/#tool-specific-configurations","text":"Although Codacy tries to detect which language is used on each source code file, some false positives may occur. The tools below support specific configurations to specify the language or language version used in the source code files that you're analyzing.","title":"Tool-specific configurations"},{"location":"repositories-configure/code-patterns/","text":"Code patterns \u00b6 By default, Codacy uses a subset of the patterns that exist for each tool to analyze your repositories. These default patterns result from community feedback or existing coding standards. However, you can create a coding standard adapted to your scenario by configuring the tool patterns that Codacy uses to analyze each repository: Open your repository Code patterns page and select the tool to configure: Enable or disable the patterns using the checkbox for each pattern. To see a detailed explanation about the issues that a pattern can detect and how to fix them, click Details on the top right-hand corner of the pattern. Some patterns also allow you to configure the rules: Optionally, manually reanalyze your repository to immediately take the changes into account. Otherwise, Codacy will use the new configuration when it analyzes a new commit or pull request. Tip Organization owners can configure who is allowed to configure code patterns . Pattern filters \u00b6 To make it easier to find relevant patterns, you can use the sidebar to filter the patterns by language (only for tools that support multiple languages), category, or status: Tip To enable all patterns inside a category, use the filter to list all patterns inside that category and click Enable all . As an example, if you want to enable all Security patterns of a tool, instead of filtering and then enabling all the patterns one by one, you can add the filter and click Enable all . Issues detected by Codacy belong to one of the following categories: Code Style: Code formatting and syntax problems, such as variable names style and enforcing the use of brackets and quotation marks Error Prone: Code that may hide bugs and language keywords that should be used with caution, such as the operator == in JavaScript or Option.get in Scala Code Complexity: High complexity methods and classes that should be refactored Performance: Code that can have performance problems Compatibility: Mainly for frontend code, compatibility problems across different browser versions Unused Code: Unused variables and methods, code that can't be reached Security: All security problems Documentation: Methods and classes that don't have the correct comment annotations Setting a default configuration for new repositories \u00b6 If you're adding multiple repositories to Codacy that should reuse the same pattern configuration for a tool, you can define that configuration as the default. Codacy automatically applies that default configuration to new repositories. To apply the same pattern configuration to multiple repositories: Add the first repository and configure the patterns on that repository for the relevant tools. Expand the menu at the top of the pattern list and select Set default . This option sets the current pattern configuration of all tools as the default for your account. After defining the default pattern configuration for your account, the tools in the new repositories that you add will automatically use those pattern configurations. Alternatively, you can also manually apply the default pattern configuration for your account to all tools by expanding the menu at the top of the pattern list and selecting Reset . Importing pattern configurations from another repository \u00b6 Importing tool and pattern configurations from another repository can help you bootstrap and standardize the coding standard across your repositories. For example, when adding a new repository on Codacy you can copy the tool and pattern configurations from an existing repository that's already configured, and then tweak and adapt the settings for your new repository. Important Consider the following when importing tool and pattern configurations: Tool matching: Codacy only copies settings for tools that are available on both the source and target repositories, and overwrites the existing settings for these tools on the target repository. Toggle status: Codacy copies the enabled or disabled status of the matching tools from the source to the target repository. Configuration files: Codacy copies the UI configuration of all matching tools, even those set to use configuration files. However, the import doesn't include the configuration mode itself. The following example illustrates the points above: Source repository Target repository Target repository after import To import the tool and pattern configurations from another repository: Open your repository Code patterns and click Import patterns . Follow the instructions to select the source repository and complete the import. Review and adjust your tool and pattern configurations if necessary. Codacy will use the updated configurations on the next analysis. Using your own tool configuration files \u00b6 Codacy supports configuration files for several tools. To use a configuration file for your static analysis tool: Add the configuration file to the root of your repository. Open your repository Code patterns page and select Configuration file for the respective tool: The known file names for the tools that support configuration files are the following: Tool name Language Files detected Other info Ameba Crystal .ameba.yml Bandit Python bandit.yml , .bandit To solve flagged valid Python \"assert\" statements, create a bandit.yml in the root of the repository containing: skips: \\['B101'\\] Brakeman Ruby config/brakeman.yml Checkstyle Java checkstyle.xml Supports configuration file in directories other than root and can search up to 5 directories into the repository. CodeNarc Groovy .codenarcrc Credo Elixir .credo.exs CSSLint CSS .csslintrc Detekt Kotlin default-detekt-config.yml , detekt.yml Supports configuration file in directories other than root and can search up to 5 directories into the repository. ESLint JavaScript, Typescript .eslintrc.js , .eslintrc.yaml , .eslintrc.yml , .eslintrc.json , .eslintrc Plugins in the UI Other Plugins Hadolint Docker .hadolint.yaml JSHint JavaScript .jshintrc PHP_CodeSniffer PHP phpcs.xml , phpcs.xml.dist PHPMD PHP codesize.xml PMD Apex, Java, JavaScript, JSP, XML, Velocity and Visualforce ruleset.xml , apex-ruleset.xml Supports configuration file in directories other than root and can search up to 5 directories into the repository. Prospector Python .landscape.yml , .landscape.yaml , landscape.yml , landscape.yaml , .prospector.yml , .prospector.yaml , prospector.yml , prospector.yaml Pylint Python pylintrc , .pylintrc Plugins RemarkLint Markdown .remarkrc , .remarkrc.json , .remarkrc.yaml , .remarkrc.yml , .remarkrc.js Rubocop Ruby .rubocop.yml Scalastyle Scala scalastyle_config.xml , scalastyle-config.xml SCSSLint SASS .scss-lint.yml Sonar C# C# SonarLint.xml SpotBugs Java, Scala findbugs.xml , findbugs-includes.xml , findbugs-excludes.xml Supports configuration file in directories other than root and can search up to 5 directories into the repository. Stylelint LESS, SASS, CSS .stylelintrc , stylelint.config.js , .stylelintrc.json , .stylelintrc.yaml , .stylelintrc.js , stylelintrc.yml Supports configuration file in directories other than root and can search up to 5 directories into the repository. SwiftLint Swift .swiftlint.yml Tailor Swift .tailor.yml TSLint TypeScript tslint.json TSQLLint SQL .tsqllintrc Revive Go revive.toml Note For performance reasons, if you make changes to pattern settings using configuration files, Codacy may display outdated messages for issues that have already been identified by those patterns.","title":"Code patterns"},{"location":"repositories-configure/code-patterns/#code-patterns","text":"By default, Codacy uses a subset of the patterns that exist for each tool to analyze your repositories. These default patterns result from community feedback or existing coding standards. However, you can create a coding standard adapted to your scenario by configuring the tool patterns that Codacy uses to analyze each repository: Open your repository Code patterns page and select the tool to configure: Enable or disable the patterns using the checkbox for each pattern. To see a detailed explanation about the issues that a pattern can detect and how to fix them, click Details on the top right-hand corner of the pattern. Some patterns also allow you to configure the rules: Optionally, manually reanalyze your repository to immediately take the changes into account. Otherwise, Codacy will use the new configuration when it analyzes a new commit or pull request. Tip Organization owners can configure who is allowed to configure code patterns .","title":"Code patterns"},{"location":"repositories-configure/code-patterns/#pattern-filters","text":"To make it easier to find relevant patterns, you can use the sidebar to filter the patterns by language (only for tools that support multiple languages), category, or status: Tip To enable all patterns inside a category, use the filter to list all patterns inside that category and click Enable all . As an example, if you want to enable all Security patterns of a tool, instead of filtering and then enabling all the patterns one by one, you can add the filter and click Enable all . Issues detected by Codacy belong to one of the following categories: Code Style: Code formatting and syntax problems, such as variable names style and enforcing the use of brackets and quotation marks Error Prone: Code that may hide bugs and language keywords that should be used with caution, such as the operator == in JavaScript or Option.get in Scala Code Complexity: High complexity methods and classes that should be refactored Performance: Code that can have performance problems Compatibility: Mainly for frontend code, compatibility problems across different browser versions Unused Code: Unused variables and methods, code that can't be reached Security: All security problems Documentation: Methods and classes that don't have the correct comment annotations","title":"Pattern filters"},{"location":"repositories-configure/code-patterns/#set-default","text":"If you're adding multiple repositories to Codacy that should reuse the same pattern configuration for a tool, you can define that configuration as the default. Codacy automatically applies that default configuration to new repositories. To apply the same pattern configuration to multiple repositories: Add the first repository and configure the patterns on that repository for the relevant tools. Expand the menu at the top of the pattern list and select Set default . This option sets the current pattern configuration of all tools as the default for your account. After defining the default pattern configuration for your account, the tools in the new repositories that you add will automatically use those pattern configurations. Alternatively, you can also manually apply the default pattern configuration for your account to all tools by expanding the menu at the top of the pattern list and selecting Reset .","title":"Setting a default configuration for new repositories"},{"location":"repositories-configure/code-patterns/#import-patterns","text":"Importing tool and pattern configurations from another repository can help you bootstrap and standardize the coding standard across your repositories. For example, when adding a new repository on Codacy you can copy the tool and pattern configurations from an existing repository that's already configured, and then tweak and adapt the settings for your new repository. Important Consider the following when importing tool and pattern configurations: Tool matching: Codacy only copies settings for tools that are available on both the source and target repositories, and overwrites the existing settings for these tools on the target repository. Toggle status: Codacy copies the enabled or disabled status of the matching tools from the source to the target repository. Configuration files: Codacy copies the UI configuration of all matching tools, even those set to use configuration files. However, the import doesn't include the configuration mode itself. The following example illustrates the points above: Source repository Target repository Target repository after import To import the tool and pattern configurations from another repository: Open your repository Code patterns and click Import patterns . Follow the instructions to select the source repository and complete the import. Review and adjust your tool and pattern configurations if necessary. Codacy will use the updated configurations on the next analysis.","title":"Importing pattern configurations from another repository"},{"location":"repositories-configure/code-patterns/#using-your-own-tool-configuration-files","text":"Codacy supports configuration files for several tools. To use a configuration file for your static analysis tool: Add the configuration file to the root of your repository. Open your repository Code patterns page and select Configuration file for the respective tool: The known file names for the tools that support configuration files are the following: Tool name Language Files detected Other info Ameba Crystal .ameba.yml Bandit Python bandit.yml , .bandit To solve flagged valid Python \"assert\" statements, create a bandit.yml in the root of the repository containing: skips: \\['B101'\\] Brakeman Ruby config/brakeman.yml Checkstyle Java checkstyle.xml Supports configuration file in directories other than root and can search up to 5 directories into the repository. CodeNarc Groovy .codenarcrc Credo Elixir .credo.exs CSSLint CSS .csslintrc Detekt Kotlin default-detekt-config.yml , detekt.yml Supports configuration file in directories other than root and can search up to 5 directories into the repository. ESLint JavaScript, Typescript .eslintrc.js , .eslintrc.yaml , .eslintrc.yml , .eslintrc.json , .eslintrc Plugins in the UI Other Plugins Hadolint Docker .hadolint.yaml JSHint JavaScript .jshintrc PHP_CodeSniffer PHP phpcs.xml , phpcs.xml.dist PHPMD PHP codesize.xml PMD Apex, Java, JavaScript, JSP, XML, Velocity and Visualforce ruleset.xml , apex-ruleset.xml Supports configuration file in directories other than root and can search up to 5 directories into the repository. Prospector Python .landscape.yml , .landscape.yaml , landscape.yml , landscape.yaml , .prospector.yml , .prospector.yaml , prospector.yml , prospector.yaml Pylint Python pylintrc , .pylintrc Plugins RemarkLint Markdown .remarkrc , .remarkrc.json , .remarkrc.yaml , .remarkrc.yml , .remarkrc.js Rubocop Ruby .rubocop.yml Scalastyle Scala scalastyle_config.xml , scalastyle-config.xml SCSSLint SASS .scss-lint.yml Sonar C# C# SonarLint.xml SpotBugs Java, Scala findbugs.xml , findbugs-includes.xml , findbugs-excludes.xml Supports configuration file in directories other than root and can search up to 5 directories into the repository. Stylelint LESS, SASS, CSS .stylelintrc , stylelint.config.js , .stylelintrc.json , .stylelintrc.yaml , .stylelintrc.js , stylelintrc.yml Supports configuration file in directories other than root and can search up to 5 directories into the repository. SwiftLint Swift .swiftlint.yml Tailor Swift .tailor.yml TSLint TypeScript tslint.json TSQLLint SQL .tsqllintrc Revive Go revive.toml Note For performance reasons, if you make changes to pattern settings using configuration files, Codacy may display outdated messages for issues that have already been identified by those patterns.","title":"Using your own tool configuration files"},{"location":"repositories-configure/file-extensions/","text":"Configuring file extensions \u00b6 If your repository has source files with unrecognized extensions, you can force Codacy to include them in the next analysis: Go to your repository's Settings , File Extensions . Add the extensions you want to be recognized for each language. After clicking Save , you will be given the opportunity to retry the most recent commit with the new settings by clicking Analyze now! on the message that appears near the footer of the page.","title":"Configuring file extensions"},{"location":"repositories-configure/file-extensions/#configuring-file-extensions","text":"If your repository has source files with unrecognized extensions, you can force Codacy to include them in the next analysis: Go to your repository's Settings , File Extensions . Add the extensions you want to be recognized for each language. After clicking Save , you will be given the opportunity to retry the most recent commit with the new settings by clicking Analyze now! on the message that appears near the footer of the page.","title":"Configuring file extensions"},{"location":"repositories-configure/ignoring-files/","text":"Ignoring files \u00b6 In some situations, you may want to ignore or exclude files from the Codacy analysis. To exclude files from your repository analysis open your repository Settings , tab Ignored Files , and select the files you want to ignore. This view only shows the files on your main branch. You can also ignore files using your own tool configuration files, although this depends on the option being supported by each tool. If you need more flexibility in ignoring files, such as selecting only specific analysis categories (duplication, metrics, or coverage) or specific tools, use a Codacy configuration file instead. By default, Codacy also ignores files matching the following regular expressions: .*[\\.-]min\\.css .*[\\.-]min\\.js .*node_modules/.* .*bower_components .*vendor/.* .*third[_-]?[Pp]arty .*docs?/.* .*samples .*releases?/.* .*builds .*dist/.* .*external .*libs/.* .*d3\\.js .*angular(-resource|)?\\.js .*select2(-resource|)?\\.js .*-ace\\.js .*typeahead\\.js .*jquery-ui\\.js .*reveal\\.js .*three\\.js .*chart\\.js .*jquery\\.js .*underscore\\.js .*lodash\\.js .*bootstrap\\.js .*bootstrap\\.css .*font-awesome\\.css","title":"Ignoring files"},{"location":"repositories-configure/ignoring-files/#ignoring-files","text":"In some situations, you may want to ignore or exclude files from the Codacy analysis. To exclude files from your repository analysis open your repository Settings , tab Ignored Files , and select the files you want to ignore. This view only shows the files on your main branch. You can also ignore files using your own tool configuration files, although this depends on the option being supported by each tool. If you need more flexibility in ignoring files, such as selecting only specific analysis categories (duplication, metrics, or coverage) or specific tools, use a Codacy configuration file instead. By default, Codacy also ignores files matching the following regular expressions: .*[\\.-]min\\.css .*[\\.-]min\\.js .*node_modules/.* .*bower_components .*vendor/.* .*third[_-]?[Pp]arty .*docs?/.* .*samples .*releases?/.* .*builds .*dist/.* .*external .*libs/.* .*d3\\.js .*angular(-resource|)?\\.js .*select2(-resource|)?\\.js .*-ace\\.js .*typeahead\\.js .*jquery-ui\\.js .*reveal\\.js .*three\\.js .*chart\\.js .*jquery\\.js .*underscore\\.js .*lodash\\.js .*bootstrap\\.js .*bootstrap\\.css .*font-awesome\\.css","title":"Ignoring files"},{"location":"repositories-configure/managing-branches/","text":"Managing branches \u00b6 Codacy supports analysis on multiple branches on your Git repositories. By default, Codacy automatically triggers analysis on the master branch only. You can define the main branch of your repository on the repository Settings , tab Branches . Pull requests \u00b6 Upon pull requests , Codacy automatically triggers analysis on the corresponding branch to analyze the pull request, as long as the target branch of the pull request is enabled . Analyzing other branches \u00b6 It's also possible to enable analysis on other branches. To do this, open the repository Settings , tab Branches , and enable the branches that Codacy should analyze.","title":"Managing branches"},{"location":"repositories-configure/managing-branches/#managing-branches","text":"Codacy supports analysis on multiple branches on your Git repositories. By default, Codacy automatically triggers analysis on the master branch only. You can define the main branch of your repository on the repository Settings , tab Branches .","title":"Managing branches"},{"location":"repositories-configure/managing-branches/#pull-requests","text":"Upon pull requests , Codacy automatically triggers analysis on the corresponding branch to analyze the pull request, as long as the target branch of the pull request is enabled .","title":"Pull requests"},{"location":"repositories-configure/managing-branches/#analyzing-other-branches","text":"It's also possible to enable analysis on other branches. To do this, open the repository Settings , tab Branches , and enable the branches that Codacy should analyze.","title":"Analyzing other branches"},{"location":"repositories-configure/quality-settings/","text":"Quality settings \u00b6 Here you can define quality settings for your repository, giving you control over the build status and success/fail of commits and pull requests. This feature also enables you to turn off metrics like duplication or complexity. To access the quality settings, open your repository Settings , tab Quality Settings . On this page there are three sections where you can set specific values at the commit, pull request, and repository levels. Click Customize to edit the settings on each section. The following sections explain the settings in detail. Commits \u00b6 These settings configure quality thresholds for commits, as displayed on the Commits page . New issues are over: Commits are marked not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: Commits are marked not up to standards if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: Commits are marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: Commits are marked not up to standards if the coverage introduced is smaller than the set value. By default, this setting is off. Pull Requests \u00b6 These settings configure quality thresholds for pull requests, as displayed on the Pull Requests page. New issues are over: Pull requests are marked not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: Pull requests are marked not up to standards if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: Pull requests are marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: Pull requests are marked not up to standards if the coverage introduced is smaller than the set value. This value refers to the variation of coverage on your pull request. For example, if your repository has 90% coverage and you want to make sure that this value doesn't decrease, set the value to 0%. By default, this setting is off. Repository \u00b6 These settings configure quality thresholds for the repository, as displayed on the Repository Dashboard . Issues are over: Defines the threshold displayed on the tab Issues of the quality evolution chart. Complexity of files is over: Defines the threshold displayed on the tab Complexity of the quality evolution chart. File is complex when over: A file is considered complex when its complexity is over this value. Duplication of files is over: Defines the threshold displayed on the tab Duplication of the quality evolution chart. File is duplicate when over: A file is considered duplicated when it has more clones than this value. Coverage is under: Defines the threshold displayed on the tab Coverage of the quality evolution chart.","title":"Quality settings"},{"location":"repositories-configure/quality-settings/#quality-settings","text":"Here you can define quality settings for your repository, giving you control over the build status and success/fail of commits and pull requests. This feature also enables you to turn off metrics like duplication or complexity. To access the quality settings, open your repository Settings , tab Quality Settings . On this page there are three sections where you can set specific values at the commit, pull request, and repository levels. Click Customize to edit the settings on each section. The following sections explain the settings in detail.","title":"Quality settings"},{"location":"repositories-configure/quality-settings/#commits","text":"These settings configure quality thresholds for commits, as displayed on the Commits page . New issues are over: Commits are marked not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: Commits are marked not up to standards if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: Commits are marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: Commits are marked not up to standards if the coverage introduced is smaller than the set value. By default, this setting is off.","title":"Commits"},{"location":"repositories-configure/quality-settings/#pull-requests","text":"These settings configure quality thresholds for pull requests, as displayed on the Pull Requests page. New issues are over: Pull requests are marked not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: Pull requests are marked not up to standards if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: Pull requests are marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: Pull requests are marked not up to standards if the coverage introduced is smaller than the set value. This value refers to the variation of coverage on your pull request. For example, if your repository has 90% coverage and you want to make sure that this value doesn't decrease, set the value to 0%. By default, this setting is off.","title":"Pull Requests"},{"location":"repositories-configure/quality-settings/#repository","text":"These settings configure quality thresholds for the repository, as displayed on the Repository Dashboard . Issues are over: Defines the threshold displayed on the tab Issues of the quality evolution chart. Complexity of files is over: Defines the threshold displayed on the tab Complexity of the quality evolution chart. File is complex when over: A file is considered complex when its complexity is over this value. Duplication of files is over: Defines the threshold displayed on the tab Duplication of the quality evolution chart. File is duplicate when over: A file is considered duplicated when it has more clones than this value. Coverage is under: Defines the threshold displayed on the tab Coverage of the quality evolution chart.","title":"Repository"},{"location":"repositories-configure/removing-your-repository/","text":"Removing your repository \u00b6 To stop Codacy from analyzing your repository, you must remove the repository from Codacy. This operation deletes the configurations and data related to your repository on Codacy but doesn't remove the repository from your Git provider. Important To remove a repository from Codacy you must have administrator permissions for that repository on the Git provider. To delete your repository from Codacy: Open your repository Settings , tab General . Click the button Remove repository and confirm that you want to remove the repository.","title":"Removing your repository"},{"location":"repositories-configure/removing-your-repository/#removing-your-repository","text":"To stop Codacy from analyzing your repository, you must remove the repository from Codacy. This operation deletes the configurations and data related to your repository on Codacy but doesn't remove the repository from your Git provider. Important To remove a repository from Codacy you must have administrator permissions for that repository on the Git provider. To delete your repository from Codacy: Open your repository Settings , tab General . Click the button Remove repository and confirm that you want to remove the repository.","title":"Removing your repository"},{"location":"repositories-configure/using-submodules/","text":"Using submodules \u00b6 Git submodules allow you to keep a Git repository as a subdirectory within another Git repository. Git submodules are helpful in maintaining a shared configuration file for your team, and then applying it to multiple Git repositories. Enabling submodules \u00b6 By default, Codacy does normal Git clones that don't include submodules to ensure that we only clone necessary repositories. However, if your organization needs to use submodules, please contact us at support@codacy.com asking to enable submodules on Codacy. After we enabled submodules for your organization, do the following: If you are using Codacy Self-hosted , you must update the license . If your submodules are: Public repositories , make sure that your Git URL uses the HTTPS protocol Private repositories , make sure that your Git URL uses the SSH protocol. If you already have repositories on Codacy where you want to use submodules, navigate to the page Settings and click the button Generate New User Key for each of these repositories. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . When you add a repository to Codacy, Codacy adds a new SSH key to your repository using an integration with your Git provider. Codacy uses this SSH key every time it needs to clone that repository. When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. If you're using submodules to share an analysis tool configuration file across your repositories, check if your tool recursively searches the subdirectories of your repositories for configuration files. If your tool doesn't detect the configuration files in the submodule directories, you must include a configuration file directly in the root of your repositories referencing the configuration files in the submodule directories. Using submodules on new repositories \u00b6 You must repeat steps 2 to 4 above every time you add new repositories with submodules to Codacy. Alternatively, you can make this the default behavior for all new repositories by enabling Add project key to the user, by default in Administration , page Settings . Important If you're using Bitbucket Cloud this setting must be disabled since automatically adding the user keys isn't supported.","title":"Using submodules"},{"location":"repositories-configure/using-submodules/#using-submodules","text":"Git submodules allow you to keep a Git repository as a subdirectory within another Git repository. Git submodules are helpful in maintaining a shared configuration file for your team, and then applying it to multiple Git repositories.","title":"Using submodules"},{"location":"repositories-configure/using-submodules/#enabling-submodules","text":"By default, Codacy does normal Git clones that don't include submodules to ensure that we only clone necessary repositories. However, if your organization needs to use submodules, please contact us at support@codacy.com asking to enable submodules on Codacy. After we enabled submodules for your organization, do the following: If you are using Codacy Self-hosted , you must update the license . If your submodules are: Public repositories , make sure that your Git URL uses the HTTPS protocol Private repositories , make sure that your Git URL uses the SSH protocol. If you already have repositories on Codacy where you want to use submodules, navigate to the page Settings and click the button Generate New User Key for each of these repositories. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . When you add a repository to Codacy, Codacy adds a new SSH key to your repository using an integration with your Git provider. Codacy uses this SSH key every time it needs to clone that repository. When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. If you're using submodules to share an analysis tool configuration file across your repositories, check if your tool recursively searches the subdirectories of your repositories for configuration files. If your tool doesn't detect the configuration files in the submodule directories, you must include a configuration file directly in the root of your repositories referencing the configuration files in the submodule directories.","title":"Enabling submodules"},{"location":"repositories-configure/using-submodules/#using-submodules-on-new-repositories","text":"You must repeat steps 2 to 4 above every time you add new repositories with submodules to Codacy. Alternatively, you can make this the default behavior for all new repositories by enabling Add project key to the user, by default in Administration , page Settings . Important If you're using Bitbucket Cloud this setting must be disabled since automatically adding the user keys isn't supported.","title":"Using submodules on new repositories"},{"location":"repositories-configure/integrations/bitbucket-integration/","text":"Bitbucket integration \u00b6 The Bitbucket integration incorporates Codacy on your existing Git provider workflows. When the integration is enabled, you can create pull request comments and Jira issues directly from Codacy when browsing the existing issues on the repository: Depending on the configuration of the Bitbucket integration, Codacy can also report and notify you about issues directly on your pull requests. Enabling the Bitbucket integration \u00b6 To enable the Bitbucket integration, open your project Settings , tab Integrations . When you add a new repository, the integration is already enabled by default. If you remove the integration, you can enable it again as follows: Click the button Add integration and select Bitbucket on the list. Click the button Enable and follow the instructions. Important The user that enables the integration must have administrator access to the repository. Codacy uses this Bitbucket user to create comments on Bitbucket. Configuring the Bitbucket integration \u00b6 To configure the Bitbucket integration, open your project Settings , tab Integrations . Depending on the options that you enable, Codacy will automatically update pull requests on Bitbucket with extra information when accepting pull requests: Pull Request Status \u00b6 Adds a report to your pull requests showing whether your pull requests and coverage are up to standards or not as configured on the quality settings of your repository. To see the coverage status, ensure that you enable the option Coverage in the quality settings. After enabling this option, you can set Codacy as a required check before merging your pull requests. Pull Request Comment \u00b6 Adds comments on the lines of the pull request where Codacy finds new issues. Click on the links to open Codacy and see more details about the issues and how to fix them. Pull Request Summary \u00b6 Shows an overall view of the changes in the pull request, including new issues and metrics such as complexity and duplication.","title":"Bitbucket integration"},{"location":"repositories-configure/integrations/bitbucket-integration/#bitbucket-integration","text":"The Bitbucket integration incorporates Codacy on your existing Git provider workflows. When the integration is enabled, you can create pull request comments and Jira issues directly from Codacy when browsing the existing issues on the repository: Depending on the configuration of the Bitbucket integration, Codacy can also report and notify you about issues directly on your pull requests.","title":"Bitbucket integration"},{"location":"repositories-configure/integrations/bitbucket-integration/#enabling","text":"To enable the Bitbucket integration, open your project Settings , tab Integrations . When you add a new repository, the integration is already enabled by default. If you remove the integration, you can enable it again as follows: Click the button Add integration and select Bitbucket on the list. Click the button Enable and follow the instructions. Important The user that enables the integration must have administrator access to the repository. Codacy uses this Bitbucket user to create comments on Bitbucket.","title":"Enabling the Bitbucket integration"},{"location":"repositories-configure/integrations/bitbucket-integration/#configuring-the-bitbucket-integration","text":"To configure the Bitbucket integration, open your project Settings , tab Integrations . Depending on the options that you enable, Codacy will automatically update pull requests on Bitbucket with extra information when accepting pull requests:","title":"Configuring the Bitbucket integration"},{"location":"repositories-configure/integrations/github-integration/","text":"GitHub integration \u00b6 The GitHub integration incorporates Codacy on your existing Git provider workflows. When the integration is enabled, you can create pull request comments and GitHub issues directly from Codacy when browsing the existing issues on the repository: Depending on the configuration of the GitHub integration, Codacy can also report and notify you about issues directly on your pull requests. Enabling the GitHub integration \u00b6 To enable the GitHub integration, open your project Settings , tab Integrations . When you add a new repository, the integration is already enabled by default. If you remove the integration, you can enable it again as follows: Click the button Add integration and select GitHub on the list. Click the button Enable and follow the instructions. Important The user that enables the integration must have administrator access to the repository. Configuring the GitHub integration \u00b6 To configure the GitHub integration, open your project Settings , tab Integrations . Depending on the options that you enable, Codacy will automatically update pull requests on GitHub with extra information when accepting pull requests: Status checks \u00b6 Adds a report to your pull requests showing whether your pull requests and coverage are up to standards or not as configured on the quality settings of your repository. To see the coverage status check, ensure that you enable the option Coverage in the quality settings. Tip After enabling this option, you can set Codacy as a required check before merging your pull requests. Annotations \u00b6 Adds annotations on the lines of the pull request where Codacy finds new issues. Codacy maps the severity of the issues reported by the tools to the severity levels of the annotations. To enable this option, you must enable Status checks first. Summary \u00b6 Shows an overall view of the changes in the pull request, including new issues and metrics such as complexity and duplication. To enable this option, you must enable Status checks first. Suggested fixes \u00b6 This feature is only available on paid plans Adds comments on the lines of the pull request where Codacy finds new issues with suggestions on how to fix the issues. Codacy doesn't apply any changes automatically. To apply the changes, manually review and accept the suggestions . Note This feature is in early access and has the following limitations for now: The only supported Git providers are GitHub Cloud and GitHub Enterprise. The only tool that suggests fixes is ESLint . However, we're planning to support suggestions from more tools. Because of a limitation from GitHub, the author of the comments is the user that enabled the GitHub integration and not Codacy. \ud83d\udce2 Activate suggested fixes now and let us know what you think!","title":"GitHub integration"},{"location":"repositories-configure/integrations/github-integration/#github-integration","text":"The GitHub integration incorporates Codacy on your existing Git provider workflows. When the integration is enabled, you can create pull request comments and GitHub issues directly from Codacy when browsing the existing issues on the repository: Depending on the configuration of the GitHub integration, Codacy can also report and notify you about issues directly on your pull requests.","title":"GitHub integration"},{"location":"repositories-configure/integrations/github-integration/#enabling","text":"To enable the GitHub integration, open your project Settings , tab Integrations . When you add a new repository, the integration is already enabled by default. If you remove the integration, you can enable it again as follows: Click the button Add integration and select GitHub on the list. Click the button Enable and follow the instructions. Important The user that enables the integration must have administrator access to the repository.","title":"Enabling the GitHub integration"},{"location":"repositories-configure/integrations/github-integration/#configuring-the-github-integration","text":"To configure the GitHub integration, open your project Settings , tab Integrations . Depending on the options that you enable, Codacy will automatically update pull requests on GitHub with extra information when accepting pull requests:","title":"Configuring the GitHub integration"},{"location":"repositories-configure/integrations/gitlab-integration/","text":"GitLab integration \u00b6 The GitLab integration incorporates Codacy on your existing Git provider workflows. Depending on the configuration of the GitLab integration, Codacy can report and notify you about issues directly on your merge requests. Enabling the GitLab integration \u00b6 To enable the GitLab integration, open your project Settings , tab Integrations . When you add a new repository, the integration is already enabled by default. If you remove the integration, you can enable it again as follows: Click the button Add integration and select GitLab on the list. Click the button Enable and follow the instructions. Important The user that enables the integration must have administrator access to the repository. Configuring the GitLab integration \u00b6 To configure the GitLab integration, open your project Settings , tab Integrations . Depending on the options that you enable, Codacy will automatically update merge requests on GitLab with extra information when accepting merge requests: Pull Request Status \u00b6 Adds a report to your merge requests showing whether your merge requests and coverage are up to standards or not as configured on the quality settings of your project. To see the coverage status, ensure that you enable the option Coverage in the quality settings. Pull Request Comment \u00b6 Adds comments on the lines of the merge request where Codacy finds new issues. Click on the links to open Codacy and see more details about the issues and how to fix them.","title":"GitLab integration"},{"location":"repositories-configure/integrations/gitlab-integration/#gitlab-integration","text":"The GitLab integration incorporates Codacy on your existing Git provider workflows. Depending on the configuration of the GitLab integration, Codacy can report and notify you about issues directly on your merge requests.","title":"GitLab integration"},{"location":"repositories-configure/integrations/gitlab-integration/#enabling","text":"To enable the GitLab integration, open your project Settings , tab Integrations . When you add a new repository, the integration is already enabled by default. If you remove the integration, you can enable it again as follows: Click the button Add integration and select GitLab on the list. Click the button Enable and follow the instructions. Important The user that enables the integration must have administrator access to the repository.","title":"Enabling the GitLab integration"},{"location":"repositories-configure/integrations/gitlab-integration/#configuring-the-gitlab-integration","text":"To configure the GitLab integration, open your project Settings , tab Integrations . Depending on the options that you enable, Codacy will automatically update merge requests on GitLab with extra information when accepting merge requests:","title":"Configuring the GitLab integration"},{"location":"repositories-configure/integrations/jira-integration/","text":"Jira integration \u00b6 The Jira integration incorporates Codacy on your existing Jira workflows. When the integration is enabled, you can create issues on a Jira project directly from Codacy when browsing the existing issues on the repository: Enabling the Jira integration \u00b6 To enable the Jira integration: Open your project Settings , tab Integrations . Click the button Add integration and select Jira on the list. Configure the Jira integration fields as follows: Host URL : Base URL of your Jira instance, including the protocol. For example, https://mycompany.atlassian.net/ . Repository ID: Key of the Jira project where Codacy will create issues. You can obtain the project key from the prefix of Jira issue numbers in that project. For example, DOCS for a project with the issue DOCS-42. Email: Email address of the user account that Codacy will use to create new issues in Jira. API token: Jira API token for the user account that Codacy will use to create new issues in Jira. The Jira integration only supports HTTP basic authentication. Important It's recommended that you use a dedicated Jira account for the integration. Jira issues created by Codacy will appear as being reported by this user account. Click Save and make sure that Codacy can successfully establish a connection with Jira. Click Advanced to configure the issue type and any built-in or custom Jira fields of new issues created by Codacy.","title":"Jira integration"},{"location":"repositories-configure/integrations/jira-integration/#jira-integration","text":"The Jira integration incorporates Codacy on your existing Jira workflows. When the integration is enabled, you can create issues on a Jira project directly from Codacy when browsing the existing issues on the repository:","title":"Jira integration"},{"location":"repositories-configure/integrations/jira-integration/#enabling-the-jira-integration","text":"To enable the Jira integration: Open your project Settings , tab Integrations . Click the button Add integration and select Jira on the list. Configure the Jira integration fields as follows: Host URL : Base URL of your Jira instance, including the protocol. For example, https://mycompany.atlassian.net/ . Repository ID: Key of the Jira project where Codacy will create issues. You can obtain the project key from the prefix of Jira issue numbers in that project. For example, DOCS for a project with the issue DOCS-42. Email: Email address of the user account that Codacy will use to create new issues in Jira. API token: Jira API token for the user account that Codacy will use to create new issues in Jira. The Jira integration only supports HTTP basic authentication. Important It's recommended that you use a dedicated Jira account for the integration. Jira issues created by Codacy will appear as being reported by this user account. Click Save and make sure that Codacy can successfully establish a connection with Jira. Click Advanced to configure the issue type and any built-in or custom Jira fields of new issues created by Codacy.","title":"Enabling the Jira integration"},{"location":"repositories-configure/integrations/post-commit-hooks/","text":"Post-commit hooks \u00b6 For Codacy to check updates in your repository (new commits and pull requests) you must have post-commit hooks enabled. There are two ways to do this: automatically or manually Automatic setup of post-commit hook \u00b6 If you are using GitHub or Bitbucket you can let Codacy configure the hook for you. Go to your repository settings and click on the Integrations tab. There should be a switch button for the automatic setup of post-commit hooks. Missing hook automatic setup switch button \u00b6 If the switch isn't visible, go to the Integrations tab and add the GitHub or Bitbucket integration. Important Make sure that you enable the integration after adding it. Manual setup of post-commit hooks on GitHub \u00b6 To turn on post-commit hooks for GitHub: Copy the hook URL to your clipboard. Go to Webhooks & Services under your repository settings. Paste the hook URL into the field Payload URL . Select application/json in the field Content Type . Click Add Webhook . Here's an example of how to configure your hooks on GitHub: Permissions to create post-commit hooks \u00b6 If you get an error when turning on the post-commit hook, please make sure that you have Admin rights on the GitHub repository.","title":"Post-commit hooks"},{"location":"repositories-configure/integrations/post-commit-hooks/#post-commit-hooks","text":"For Codacy to check updates in your repository (new commits and pull requests) you must have post-commit hooks enabled. There are two ways to do this: automatically or manually","title":"Post-commit hooks"},{"location":"repositories-configure/integrations/post-commit-hooks/#automatic-setup-of-post-commit-hook","text":"If you are using GitHub or Bitbucket you can let Codacy configure the hook for you. Go to your repository settings and click on the Integrations tab. There should be a switch button for the automatic setup of post-commit hooks.","title":"Automatic setup of post-commit hook"},{"location":"repositories-configure/integrations/post-commit-hooks/#manual-setup-of-post-commit-hooks-on-github","text":"To turn on post-commit hooks for GitHub: Copy the hook URL to your clipboard. Go to Webhooks & Services under your repository settings. Paste the hook URL into the field Payload URL . Select application/json in the field Content Type . Click Add Webhook . Here's an example of how to configure your hooks on GitHub:","title":"Manual setup of post-commit hooks on GitHub"},{"location":"repositories-configure/integrations/post-commit-hooks/#permissions-to-create-post-commit-hooks","text":"If you get an error when turning on the post-commit hook, please make sure that you have Admin rights on the GitHub repository.","title":"Permissions to create post-commit hooks"},{"location":"repositories-configure/integrations/slack-integration/","text":"Slack integration \u00b6 After adding a repository, you may want to enable Slack integration. Codacy integrates with Slack by sending messages to a channel when it finds new issues. To enable the Slack integration access the Integrations tab of your repository Settings , click Add integration and select Slack from the list. Configuration \u00b6 Configure the Slack integration as follows: Incoming webhook: Access the Incoming Webhooks page on the App Directory of your Slack account Select the channel where you want to receive notifications and click Add Incoming Webhooks Integration Copy the generated URL and use it on Codacy Save settings on Slack Channel: The name of the channel where Codacy will send the notifications. This value is optional and it will override the default channel of the webhook. After filling both fields, click the Save button. You can also use the Test button to send a test notification to your Slack channel and confirm that the integration is working. After configuring your Slack integration with your server settings, Codacy will send a message on Slack whenever it finds new issues.","title":"Slack integration"},{"location":"repositories-configure/integrations/slack-integration/#slack-integration","text":"After adding a repository, you may want to enable Slack integration. Codacy integrates with Slack by sending messages to a channel when it finds new issues. To enable the Slack integration access the Integrations tab of your repository Settings , click Add integration and select Slack from the list.","title":"Slack integration"},{"location":"repositories-configure/integrations/slack-integration/#configuration","text":"Configure the Slack integration as follows: Incoming webhook: Access the Incoming Webhooks page on the App Directory of your Slack account Select the channel where you want to receive notifications and click Add Incoming Webhooks Integration Copy the generated URL and use it on Codacy Save settings on Slack Channel: The name of the channel where Codacy will send the notifications. This value is optional and it will override the default channel of the webhook. After filling both fields, click the Save button. You can also use the Test button to send a test notification to your Slack channel and confirm that the integration is working. After configuring your Slack integration with your server settings, Codacy will send a message on Slack whenever it finds new issues.","title":"Configuration"},{"location":"repositories-configure/integrations/webhook-notifications/","text":"Webhook notifications \u00b6 Codacy integrates with any service by sending a POST message to a defined address. To add a webhook, access the Integrations tab of your repository Settings , click on Add channel and select Webhook from the list. Configuration \u00b6 Endpoint Address The URL where to POST the message. After filling the field you have to click the Save button and everything should be setup correctly. You can use the Test button to send a test notification to the address. When Codacy sends the POST to the address the message is in JSON format. Below, you can see an example message: { \"commit\" :{ \"data\" :{ \"uuid\" : \"4cbf02df84dbcaa44b75a64ed832f7dbff2231dd\" , \"urls\" :{ \"delta\" : \"https://www.codacy.com/public/jquery/jquery.git/commit?bid=21776&cid=6037089\" } }, \"results\" :{ \"fixed_count\" : 1 , \"new_count\" : 0 } } }","title":"Webhook notifications"},{"location":"repositories-configure/integrations/webhook-notifications/#webhook-notifications","text":"Codacy integrates with any service by sending a POST message to a defined address. To add a webhook, access the Integrations tab of your repository Settings , click on Add channel and select Webhook from the list.","title":"Webhook notifications"},{"location":"repositories-configure/integrations/webhook-notifications/#configuration","text":"Endpoint Address The URL where to POST the message. After filling the field you have to click the Save button and everything should be setup correctly. You can use the Test button to send a test notification to the address. When Codacy sends the POST to the address the message is in JSON format. Below, you can see an example message: { \"commit\" :{ \"data\" :{ \"uuid\" : \"4cbf02df84dbcaa44b75a64ed832f7dbff2231dd\" , \"urls\" :{ \"delta\" : \"https://www.codacy.com/public/jquery/jquery.git/commit?bid=21776&cid=6037089\" } }, \"results\" :{ \"fixed_count\" : 1 , \"new_count\" : 0 } } }","title":"Configuration"}]}