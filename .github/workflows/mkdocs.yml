name: mkdocs

on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'release-')
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PERSONAL_ACC_TOK }}
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build docs
        run: |
          mkdocs build

  deploy-version:
    name: deploy-version
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'release-')
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PERSONAL_ACC_TOK }}
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup git author
        run: |
          remote_repo="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote rm origin
          git remote add origin "${remote_repo}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs
        run: |
          mike deploy ${git rev-parse --abbrev-ref HEAD | sed "s|^release-\([0-9.]*\).*|\1|"} --config-file "${GITHUB_WORKSPACE}/mkdocs.yml" --force

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PERSONAL_ACC_TOK }}
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup git author
        run: |
          remote_repo="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote rm origin
          git remote add origin "${remote_repo}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs
        run: |
          mike deploy . -t Cloud --config-file "${GITHUB_WORKSPACE}/mkdocs.yml" --push
