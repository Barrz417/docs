{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation home \u00b6 Getting started Adding your first repository Sign up with your Git provider so that Codacy can have access to your Git provider organizations and members. You can then add any repository you have access to with one click. Exploring your analysis results Codacy begins an initial analysis as soon as you add a repository. Explore the analysis results on the repository dashboard and configure Codacy for your repository. Using Codacy Creating and managing an organization Codacy automatically imports your Git provider organizations and members. Changes reflect on Codacy in real time and you can manage people who joined your organization on Codacy. Setting up integrations Set up integrations to receive Codacy status checks on your current workflow. Most popular topics Adding coverage reports Set up your repositories to show code coverage reports directly on Codacy. Client-side tools Run any linter tool locally or as part of your CI process and integrate the results with your Codacy workflow. Adding and managing Authors Allow Codacy to analyze commits from contributors who are not part of your Codacy organization.","title":"Documentation home"},{"location":"#documentation-home","text":"Getting started Adding your first repository Sign up with your Git provider so that Codacy can have access to your Git provider organizations and members. You can then add any repository you have access to with one click. Exploring your analysis results Codacy begins an initial analysis as soon as you add a repository. Explore the analysis results on the repository dashboard and configure Codacy for your repository. Using Codacy Creating and managing an organization Codacy automatically imports your Git provider organizations and members. Changes reflect on Codacy in real time and you can manage people who joined your organization on Codacy. Setting up integrations Set up integrations to receive Codacy status checks on your current workflow.","title":"Documentation home"},{"location":"special-thanks/","text":"Special thanks \u00b6 We would like to thank everyone who greatly helped us. The names on these lists contributed immensely to what Codacy is today. Open source tools \u00b6 In addition to in-house built rules, we use open source tools for many of our static analysis. We want to express our gratitude to those tools and to everyone who contributed. pmdjava brakeman rubocop simplecov coffeelint pylint phpmd phpcs jshint mocha scalastyle csslint radon clonedigger phpcpd plato sloc lesslinter Hadolint TSLint SCSSLint Credo psscript analyzer Ameba Language support contributions \u00b6 These are the tools integrated on our website by our own users! Without them, we wouldn't have support for those languages. Language Who made it possible CoffeeScript Ryan Delaney Elixir Grant McLendon Powershell Aditya Patwardhan Crystal Vitalii Elenhaupt Do you love a language we don't support? Do you want your name and that language on this list? See how to add support for a language . Collaborators \u00b6 For all the people who helped us so much, we want to give a big shout out and thanks! David Pate Adriaan Moors Iulian Dragos Jakob Pupke Mathieu Demarne Ryan Shipp Eugene Burmako","title":"Special thanks"},{"location":"special-thanks/#special-thanks","text":"We would like to thank everyone who greatly helped us. The names on these lists contributed immensely to what Codacy is today.","title":"Special thanks"},{"location":"special-thanks/#open-source-tools","text":"In addition to in-house built rules, we use open source tools for many of our static analysis. We want to express our gratitude to those tools and to everyone who contributed. pmdjava brakeman rubocop simplecov coffeelint pylint phpmd phpcs jshint mocha scalastyle csslint radon clonedigger phpcpd plato sloc lesslinter Hadolint TSLint SCSSLint Credo psscript analyzer Ameba","title":"Open source tools"},{"location":"special-thanks/#language-support-contributions","text":"These are the tools integrated on our website by our own users! Without them, we wouldn't have support for those languages. Language Who made it possible CoffeeScript Ryan Delaney Elixir Grant McLendon Powershell Aditya Patwardhan Crystal Vitalii Elenhaupt Do you love a language we don't support? Do you want your name and that language on this list? See how to add support for a language .","title":"Language support contributions"},{"location":"special-thanks/#collaborators","text":"For all the people who helped us so much, we want to give a big shout out and thanks! David Pate Adriaan Moors Iulian Dragos Jakob Pupke Mathieu Demarne Ryan Shipp Eugene Burmako","title":"Collaborators"},{"location":"account/default-patterns/","text":"Default patterns \u00b6 When you register a repository without having set your own default patterns, Codacy will apply a subset of the existing patterns to the repository. The patterns enabled by default are chosen according to community feedback or previously approved existing coding standards. You can change the default list of patterns, creating a unique coding standard that is applied automatically to any repository that you register. After repository registration, any change to the list of patterns in the Repository settings will only be applied to that specific repository, allowing you to completely customize any repository to suit whatever coding standard you deem appropriate. To do this, click on your avatar, Your Account , and open Default Patterns . To add or remove a pattern from the list of default patterns, use the checkbox next to the pattern name. You will be provided with feedback: To navigate through the issues, you can use the available filters. Allowing you to search the issues you feel are more suited for your repository:","title":"Default patterns"},{"location":"account/default-patterns/#default-patterns","text":"When you register a repository without having set your own default patterns, Codacy will apply a subset of the existing patterns to the repository. The patterns enabled by default are chosen according to community feedback or previously approved existing coding standards. You can change the default list of patterns, creating a unique coding standard that is applied automatically to any repository that you register. After repository registration, any change to the list of patterns in the Repository settings will only be applied to that specific repository, allowing you to completely customize any repository to suit whatever coding standard you deem appropriate. To do this, click on your avatar, Your Account , and open Default Patterns . To add or remove a pattern from the list of default patterns, use the checkbox next to the pattern name. You will be provided with feedback: To navigate through the issues, you can use the available filters. Allowing you to search the issues you feel are more suited for your repository:","title":"Default patterns"},{"location":"account/managing-your-profile/","text":"Managing your profile \u00b6 To manage your profile information such as your name and avatar, click on your avatar on the top right-hand corner and select Your account . Changing your name or username \u00b6 To change your name or username, update the fields Name or Username and click the button Update profile . Changing your avatar \u00b6 To change your avatar, sign up or login at Gravatar using the same email address that you used to log into Codacy. The avatar that you define there will be automatically used as your avatar on Codacy. Note Organization avatars are not editable at the moment. Deleting your account \u00b6 When you delete your account on Codacy, your profile and information about your personal repositories will be completely removed from Codacy. If you are the last user with administrator permissions on any of your organizations, you must either add someone else as administrator or delete those organizations before you can delete your account. To delete your account, click the button Delete account and confirm that you really want to proceed.","title":"Managing your profile"},{"location":"account/managing-your-profile/#managing-your-profile","text":"To manage your profile information such as your name and avatar, click on your avatar on the top right-hand corner and select Your account .","title":"Managing your profile"},{"location":"account/managing-your-profile/#changing-your-name-or-username","text":"To change your name or username, update the fields Name or Username and click the button Update profile .","title":"Changing your name or username"},{"location":"account/managing-your-profile/#changing-your-avatar","text":"To change your avatar, sign up or login at Gravatar using the same email address that you used to log into Codacy. The avatar that you define there will be automatically used as your avatar on Codacy. Note Organization avatars are not editable at the moment.","title":"Changing your avatar"},{"location":"account/managing-your-profile/#deleting-your-account","text":"When you delete your account on Codacy, your profile and information about your personal repositories will be completely removed from Codacy. If you are the last user with administrator permissions on any of your organizations, you must either add someone else as administrator or delete those organizations before you can delete your account. To delete your account, click the button Delete account and confirm that you really want to proceed.","title":"Deleting your account"},{"location":"account/notifications/","text":"Notifications \u00b6 You can configure which repositories you want to be emailed about and your default email address to receive the notifications. When new results are found, Codacy will email you regarding the issues found and the changes that created them. To change these settings click on your avatar, Your Account , and open Notifications . To disable all repository notifications, you can either remove all repositories or remove both commit and pull requests notifications globally.","title":"Notifications"},{"location":"account/notifications/#notifications","text":"You can configure which repositories you want to be emailed about and your default email address to receive the notifications. When new results are found, Codacy will email you regarding the issues found and the changes that created them. To change these settings click on your avatar, Your Account , and open Notifications . To disable all repository notifications, you can either remove all repositories or remove both commit and pull requests notifications globally.","title":"Notifications"},{"location":"chart/","text":"Installing Codacy on Kubernetes \u00b6 This documentation guides you on how to install Codacy on Kubernetes or MicroK8s. To install Codacy you must complete these main steps: Setting up the system requirements Ensure that your infrastructure meets the hardware and system requirements to run Codacy. Installing Codacy Install Codacy on the cluster using our Helm chart that includes all the necessary components and dependencies. Configuring Codacy Configure integrations with Git providers and set up monitoring. The next sections include detailed instructions on how to complete each step of the installation process. Make sure that you complete each step before advancing to the next one. 1. Setting up the system requirements \u00b6 Before you start, you must prepare and and provision the database server and Kubernetes or MicroK8s cluster that will host Codacy. Carefully review and set up the system requirements to run Codacy by following the instructions on the page below: System requirements Optionally, you can follow one of the guides below to quickly create a new Kubernetes or MicroK8s cluster that satisfies the characteristics described in the system requirements: Creating an Amazon EKS cluster Creating a MicroK8s cluster 2. Installing Codacy \u00b6 Install Codacy on an existing cluster using our Helm chart: Make sure that you have the following tools installed on your machine: kubectl within one minor version difference of your cluster Important If you are using MicroK8s you don't need to install kubectl because you will execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, check how to create an alias for kubectl . Helm version >= 3.2 Create a cluster namespace called codacy that will group all resources related to Codacy. kubectl create namespace codacy Add the Docker registry credentials provided by Codacy together with your license to a cluster Secret. This is necessary because some Codacy Docker images are currently private. Substitute <docker_username> and <docker_password> with the Docker registry username and password and run the following command: kubectl create secret docker-registry docker-credentials \\ --docker-username = <docker_username> \\ --docker-password = <docker_password> \\ --namespace codacy Download the template file values-production.yaml and use a text editor of your choice to edit the value placeholders as described in the comments. Create an address record on your DNS provider mapping the hostname you used in the previous step to the IP address of your Ingress controller. Important If you are using MicroK8s you must map the hostname to the public IP address of the machine running MicroK8s. Add Codacy's chart repository to your Helm client and install the Codacy chart using the file values-production.yaml created previously. Important If you are using MicroK8s you must download and use the file values-microk8s.yaml together with the file values-production.yaml by uncommenting the last line in the helm upgrade command below. helm repo add codacy-stable https://charts.codacy.com/stable/ helm repo update helm upgrade --install codacy codacy-stable/codacy \\ --namespace codacy \\ --version 2 .0.0 \\ --values values-production.yaml # --values values-microk8s.yaml By now all the Codacy pods should be starting in the cluster. Run the following command and wait for all the pods to have the status Running , which can take several minutes: $ kubectl get pods -n codacy NAME READY STATUS RESTARTS AGE codacy-activities-6d9db9499-stk2k 1 /1 Running 2 8m57s codacy-activitiesdb-0 1 /1 Running 0 8m57s codacy-api-f7897b965-fgn67 1 /1 Running 0 8m57s codacy-api-f7897b965-kkqsx 1 /1 Running 0 8m57s codacy-core-7bcf697968-85tl6 1 /1 Running 0 8m57s codacy-crow-7c957d45f6-b8zp2 1 /1 Running 2 8m57s codacy-crowdb-0 1 /1 Running 0 8m57s codacy-engine-549bcb69d9-cgrqf 1 /1 Running 1 8m57s codacy-engine-549bcb69d9-sh5f4 1 /1 Running 1 8m57s codacy-fluentdoperator-x5vr2 2 /2 Running 0 8m57s codacy-hotspots-api-b7b9db896-68gxx 1 /1 Running 2 8m57s codacy-hotspots-worker-76bb45b4d6-8gz45 1 /1 Running 3 8m57s codacy-hotspotsdb-0 1 /1 Running 0 8m57s codacy-listener-868b784dcf-npdfh 1 /1 Running 0 8m57s codacy-listenerdb-0 1 /1 Running 0 8m57s codacy-minio-7cfdc7b4f4-254gz 1 /1 Running 0 8m57s codacy-nfsserverprovisioner-0 1 /1 Running 0 8m57s codacy-portal-774d9fc596-rwqj5 1 /1 Running 2 8m56s codacy-rabbitmq-ha-0 1 /1 Running 0 8m57s codacy-ragnaros-69459775b5-hmj4d 1 /1 Running 3 8m57s codacy-remote-provider-service-8fb8556b-rr4ws 1 /1 Running 0 8m56s codacy-worker-manager-656dbf8d6d-n4j7c 1 /1 Running 0 8m57s 3. Configuring Codacy \u00b6 After successfully installing Codacy on your cluster, you are now ready to perform the post-install configuration steps: Use a browser to navigate to the Codacy hostname previously configured on the file values-production.yaml . Log in using your Git provider account. This automatically creates a Codacy administrator account with your credentials. Follow Codacy's onboarding process, which will guide you through the following steps: Configuring one or more of the following supported integrations: GitHub Cloud GitHub Enterprise GitLab Cloud GitLab Enterprise Bitbucket Cloud Bitbucket Server Email Creating an initial organization Inviting users to Codacy If you wish to set up HTTPS for Codacy follow our configuration instructions . As a last step we recommend that you set up monitoring on your Codacy instance. If you run into any issues while configuring Codacy, be sure to check our troubleshooting guide for more help.","title":"Installing Codacy on Kubernetes"},{"location":"chart/#installing-codacy-on-kubernetes","text":"This documentation guides you on how to install Codacy on Kubernetes or MicroK8s. To install Codacy you must complete these main steps: Setting up the system requirements Ensure that your infrastructure meets the hardware and system requirements to run Codacy. Installing Codacy Install Codacy on the cluster using our Helm chart that includes all the necessary components and dependencies. Configuring Codacy Configure integrations with Git providers and set up monitoring. The next sections include detailed instructions on how to complete each step of the installation process. Make sure that you complete each step before advancing to the next one.","title":"Installing Codacy on Kubernetes"},{"location":"chart/#1-setting-up-the-system-requirements","text":"Before you start, you must prepare and and provision the database server and Kubernetes or MicroK8s cluster that will host Codacy. Carefully review and set up the system requirements to run Codacy by following the instructions on the page below: System requirements Optionally, you can follow one of the guides below to quickly create a new Kubernetes or MicroK8s cluster that satisfies the characteristics described in the system requirements: Creating an Amazon EKS cluster Creating a MicroK8s cluster","title":"1. Setting up the system requirements"},{"location":"chart/#2-installing-codacy","text":"Install Codacy on an existing cluster using our Helm chart: Make sure that you have the following tools installed on your machine: kubectl within one minor version difference of your cluster Important If you are using MicroK8s you don't need to install kubectl because you will execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, check how to create an alias for kubectl . Helm version >= 3.2 Create a cluster namespace called codacy that will group all resources related to Codacy. kubectl create namespace codacy Add the Docker registry credentials provided by Codacy together with your license to a cluster Secret. This is necessary because some Codacy Docker images are currently private. Substitute <docker_username> and <docker_password> with the Docker registry username and password and run the following command: kubectl create secret docker-registry docker-credentials \\ --docker-username = <docker_username> \\ --docker-password = <docker_password> \\ --namespace codacy Download the template file values-production.yaml and use a text editor of your choice to edit the value placeholders as described in the comments. Create an address record on your DNS provider mapping the hostname you used in the previous step to the IP address of your Ingress controller. Important If you are using MicroK8s you must map the hostname to the public IP address of the machine running MicroK8s. Add Codacy's chart repository to your Helm client and install the Codacy chart using the file values-production.yaml created previously. Important If you are using MicroK8s you must download and use the file values-microk8s.yaml together with the file values-production.yaml by uncommenting the last line in the helm upgrade command below. helm repo add codacy-stable https://charts.codacy.com/stable/ helm repo update helm upgrade --install codacy codacy-stable/codacy \\ --namespace codacy \\ --version 2 .0.0 \\ --values values-production.yaml # --values values-microk8s.yaml By now all the Codacy pods should be starting in the cluster. Run the following command and wait for all the pods to have the status Running , which can take several minutes: $ kubectl get pods -n codacy NAME READY STATUS RESTARTS AGE codacy-activities-6d9db9499-stk2k 1 /1 Running 2 8m57s codacy-activitiesdb-0 1 /1 Running 0 8m57s codacy-api-f7897b965-fgn67 1 /1 Running 0 8m57s codacy-api-f7897b965-kkqsx 1 /1 Running 0 8m57s codacy-core-7bcf697968-85tl6 1 /1 Running 0 8m57s codacy-crow-7c957d45f6-b8zp2 1 /1 Running 2 8m57s codacy-crowdb-0 1 /1 Running 0 8m57s codacy-engine-549bcb69d9-cgrqf 1 /1 Running 1 8m57s codacy-engine-549bcb69d9-sh5f4 1 /1 Running 1 8m57s codacy-fluentdoperator-x5vr2 2 /2 Running 0 8m57s codacy-hotspots-api-b7b9db896-68gxx 1 /1 Running 2 8m57s codacy-hotspots-worker-76bb45b4d6-8gz45 1 /1 Running 3 8m57s codacy-hotspotsdb-0 1 /1 Running 0 8m57s codacy-listener-868b784dcf-npdfh 1 /1 Running 0 8m57s codacy-listenerdb-0 1 /1 Running 0 8m57s codacy-minio-7cfdc7b4f4-254gz 1 /1 Running 0 8m57s codacy-nfsserverprovisioner-0 1 /1 Running 0 8m57s codacy-portal-774d9fc596-rwqj5 1 /1 Running 2 8m56s codacy-rabbitmq-ha-0 1 /1 Running 0 8m57s codacy-ragnaros-69459775b5-hmj4d 1 /1 Running 3 8m57s codacy-remote-provider-service-8fb8556b-rr4ws 1 /1 Running 0 8m56s codacy-worker-manager-656dbf8d6d-n4j7c 1 /1 Running 0 8m57s","title":"2. Installing Codacy"},{"location":"chart/#3-configuring-codacy","text":"After successfully installing Codacy on your cluster, you are now ready to perform the post-install configuration steps: Use a browser to navigate to the Codacy hostname previously configured on the file values-production.yaml . Log in using your Git provider account. This automatically creates a Codacy administrator account with your credentials. Follow Codacy's onboarding process, which will guide you through the following steps: Configuring one or more of the following supported integrations: GitHub Cloud GitHub Enterprise GitLab Cloud GitLab Enterprise Bitbucket Cloud Bitbucket Server Email Creating an initial organization Inviting users to Codacy If you wish to set up HTTPS for Codacy follow our configuration instructions . As a last step we recommend that you set up monitoring on your Codacy instance. If you run into any issues while configuring Codacy, be sure to check our troubleshooting guide for more help.","title":"3. Configuring Codacy"},{"location":"chart/requirements/","text":"System requirements \u00b6 Before installing Codacy you must ensure that you have the following infrastructure correctly provisioned and configured: Kubernetes or MicroK8s cluster PostgreSQL server The next sections describe in detail how to set up these prerequisites. Kubernetes or MicroK8s cluster setup \u00b6 The cluster running Codacy must satisfy the following requirements: The infrastructure hosting the cluster must be provisioned with the hardware and networking requirements described below The orchestration platform managing the cluster must be one of: Kubernetes version 1.14.* to 1.18.* MicroK8s version 1.15 The NGINX Ingress controller must be installed and correctly set up in the cluster Cluster networking requirements \u00b6 The cluster must be configured to accept and establish connections on the following ports: Service Protocol/Port Notes Inbound SSH TCP/22 MicroK8s only , to access the infrastructure remotely. Inbound HTTP TCP/80 Allow access to the Codacy website and API endpoints Inbound HTTPS TCP/443 Allow access to the Codacy website and API endpoints Outbound PostgreSQL TCP/5432 Connection to the PostgreSQL DBMS Outbound SMTP TCP/25 Connection to your SMTP server Outbound SMTPS TCP/465 Connection to your SMTP server over TLS/SSL Outbound Docker Hub * Connection to Docker Hub to download the required container images Outbound Git provider * Connection to the ports required by your remote Git provider Cluster hardware requirements \u00b6 The high-level architecture described in the next section is important in understanding how Codacy uses and allocates hardware resources. Below we also provide guidance on resource provisioning for typical scenarios . For a custom hardware resource recommendation, please contact us at support@codacy.com . Codacy architecture \u00b6 You can look at Codacy separately as two parts: The \"Platform\" contains the UI and other components important to treat and show results The \"Analysis\" is the swarm of workers that run between one and four linters simultaneously, depending on factors such as the number of files or the programming languages used in your projects Since all components are running on a cluster, you can increase the number of replicas in every deployment to give you more resilience and throughput, at a cost of increased resource usage. The following is a simplified overview of how to calculate resource allocation for the \"Platform\" and the \"Analysis\": Component vCPU Memory Platform (1 replica per component) 4 8 GB Analysis (1 Analysis Worker + up to 4 linters) 5 (per Analysis Worker) 10 GB (per Analysis Worker) Standard cluster provisioning \u00b6 The resources recommended on the following table are based on our experience and are also the defaults in the values-production.yaml file, which you might need to adapt taking into account your use case. As described in the section above, Codacy's architecture allows scaling the \"Analysis\" part of the platform, meaning that the resources needed for Codacy depend mainly on the rate of commits done by your team that Codacy will be analyzing. Important For MicroK8s clusters we added an extra 1.5 vCPU and 1.5 GB memory to the \"Platform\" to account for the MicroK8s platform itself running on the same machine. Installation type Replicas per component Max. concurrent analysis Platform resources Analysis resources ~ Total resources Kubernetes Small Installation 1 2 4 vCPUs 8 GB RAM 10 vCPUs 20 GB RAM 16 vCPUs 32 GB RAM Kubernetes Medium Installation (default) 2 4 8 vCPUs 16 GB RAM 20 vCPUs 40 GB RAM 32 vCPUs 64 GB RAM Kubernetes Big Installation 2+ 10+ 8+ vCPUs 16+ GB RAM 50+ vCPUs 100+ GB RAM 60+ vCPUs 110+ GB RAM MicroK8s Minimum 1 2 5.5 vCPUs 9.5 GB RAM 10 vCPUs 20 GB RAM 16 vCPUs 32 GB RAM MicroK8s Recommended (default) 1+ 2 9.5+ vCPUs 17.5+ GB RAM 10 vCPUs 20 GB RAM 21+ vCPUs 40+ GB RAM The storage requirements recommended on the following table depend mainly on the number of repositories that Codacy will be analyzing and should be used as a guideline to determine your installation requirements. Component Bundled in the chart? Minimum recommended NFS Yes 200 GB RabbitMQ Yes 8 GB Minio Yes 20 GB PostgreSQL No (external DB recommended) 500 GB+ PostgreSQL server setup \u00b6 Codacy requires a database server to persist data that must satisfy the following requirements: The infrastructure hosting the database server must be provisioned with the hardware requirements described below The DBMS server must be PostgreSQL version 9.6 The PostgreSQL server must be configured to accept connections from the cluster The Codacy databases and a dedicated user must be created using the instructions below Important Google, the developer of Kubernetes, doesn't recommend running database servers on your cluster . As such, consider using a managed solution like Amazon RDS or Google Cloud SQL, or running the PostgreSQL server on a dedicated virtual machine. We recommend that you use a managed solution to reduce maintenance and configuration costs of the PostgreSQL server. The main cloud providers all have this service that you can use, for example: Amazon RDS for PostgreSQL or Amazon Aurora PostgreSQL-Compatible Edition Azure Database for PostgreSQL Google Cloud SQL for PostgreSQL Digital Ocean Managed Databases PostgreSQL hardware requirements \u00b6 The following are the minimum specifications recommended for provisioning the PostgreSQL server: vCPUs Memory Storage Max. concurrent connections 4 8 GB 500 GB+ 300 Preparing PostgreSQL for Codacy \u00b6 Before installing Codacy you must create a set of databases that will be used by Codacy to persist data. We also recommend that you create a dedicated user for Codacy, with access permissions only to the databases that are specific to Codacy: Connect to the PostgreSQL server as a database admin user. For example, using the psql command line client: psql -U postgres -h <PostgreSQL server hostname> Create the dedicated user that Codacy will use to connect to PostgreSQL. Make sure that you change the username and password to suit your security needs: CREATE USER codacy WITH PASSWORD 'codacy' ; ALTER ROLE codacy WITH CREATEDB ; Take note of the username and password you define, as you will require them later to configure the connection from Codacy to the PostgreSQL server. Make sure that you can connect to the PostgreSQL database using the newly created user. For example, using the psql command line client: psql -U codacy -d postgres -h <PostgreSQL server hostname> Create the databases required by Codacy: CREATE DATABASE accounts WITH OWNER = codacy ; CREATE DATABASE analysis WITH OWNER = codacy ; CREATE DATABASE results WITH OWNER = codacy ; CREATE DATABASE metrics WITH OWNER = codacy ; CREATE DATABASE filestore WITH OWNER = codacy ; CREATE DATABASE jobs WITH OWNER = codacy ; CREATE DATABASE activities WITH OWNER = codacy ; CREATE DATABASE hotspots WITH OWNER = codacy ; CREATE DATABASE listener WITH OWNER = codacy ; CREATE DATABASE crow WITH OWNER = codacy ;","title":"System requirements"},{"location":"chart/requirements/#system-requirements","text":"Before installing Codacy you must ensure that you have the following infrastructure correctly provisioned and configured: Kubernetes or MicroK8s cluster PostgreSQL server The next sections describe in detail how to set up these prerequisites.","title":"System requirements"},{"location":"chart/requirements/#kubernetes-or-microk8s-cluster-setup","text":"The cluster running Codacy must satisfy the following requirements: The infrastructure hosting the cluster must be provisioned with the hardware and networking requirements described below The orchestration platform managing the cluster must be one of: Kubernetes version 1.14.* to 1.18.* MicroK8s version 1.15 The NGINX Ingress controller must be installed and correctly set up in the cluster","title":"Kubernetes or MicroK8s cluster setup"},{"location":"chart/requirements/#cluster-networking-requirements","text":"The cluster must be configured to accept and establish connections on the following ports: Service Protocol/Port Notes Inbound SSH TCP/22 MicroK8s only , to access the infrastructure remotely. Inbound HTTP TCP/80 Allow access to the Codacy website and API endpoints Inbound HTTPS TCP/443 Allow access to the Codacy website and API endpoints Outbound PostgreSQL TCP/5432 Connection to the PostgreSQL DBMS Outbound SMTP TCP/25 Connection to your SMTP server Outbound SMTPS TCP/465 Connection to your SMTP server over TLS/SSL Outbound Docker Hub * Connection to Docker Hub to download the required container images Outbound Git provider * Connection to the ports required by your remote Git provider","title":"Cluster networking requirements"},{"location":"chart/requirements/#cluster-hardware-requirements","text":"The high-level architecture described in the next section is important in understanding how Codacy uses and allocates hardware resources. Below we also provide guidance on resource provisioning for typical scenarios . For a custom hardware resource recommendation, please contact us at support@codacy.com .","title":"Cluster hardware requirements"},{"location":"chart/requirements/#codacy-architecture","text":"You can look at Codacy separately as two parts: The \"Platform\" contains the UI and other components important to treat and show results The \"Analysis\" is the swarm of workers that run between one and four linters simultaneously, depending on factors such as the number of files or the programming languages used in your projects Since all components are running on a cluster, you can increase the number of replicas in every deployment to give you more resilience and throughput, at a cost of increased resource usage. The following is a simplified overview of how to calculate resource allocation for the \"Platform\" and the \"Analysis\": Component vCPU Memory Platform (1 replica per component) 4 8 GB Analysis (1 Analysis Worker + up to 4 linters) 5 (per Analysis Worker) 10 GB (per Analysis Worker)","title":"Codacy architecture"},{"location":"chart/requirements/#standard-cluster-provisioning","text":"The resources recommended on the following table are based on our experience and are also the defaults in the values-production.yaml file, which you might need to adapt taking into account your use case. As described in the section above, Codacy's architecture allows scaling the \"Analysis\" part of the platform, meaning that the resources needed for Codacy depend mainly on the rate of commits done by your team that Codacy will be analyzing. Important For MicroK8s clusters we added an extra 1.5 vCPU and 1.5 GB memory to the \"Platform\" to account for the MicroK8s platform itself running on the same machine. Installation type Replicas per component Max. concurrent analysis Platform resources Analysis resources ~ Total resources Kubernetes Small Installation 1 2 4 vCPUs 8 GB RAM 10 vCPUs 20 GB RAM 16 vCPUs 32 GB RAM Kubernetes Medium Installation (default) 2 4 8 vCPUs 16 GB RAM 20 vCPUs 40 GB RAM 32 vCPUs 64 GB RAM Kubernetes Big Installation 2+ 10+ 8+ vCPUs 16+ GB RAM 50+ vCPUs 100+ GB RAM 60+ vCPUs 110+ GB RAM MicroK8s Minimum 1 2 5.5 vCPUs 9.5 GB RAM 10 vCPUs 20 GB RAM 16 vCPUs 32 GB RAM MicroK8s Recommended (default) 1+ 2 9.5+ vCPUs 17.5+ GB RAM 10 vCPUs 20 GB RAM 21+ vCPUs 40+ GB RAM The storage requirements recommended on the following table depend mainly on the number of repositories that Codacy will be analyzing and should be used as a guideline to determine your installation requirements. Component Bundled in the chart? Minimum recommended NFS Yes 200 GB RabbitMQ Yes 8 GB Minio Yes 20 GB PostgreSQL No (external DB recommended) 500 GB+","title":"Standard cluster provisioning"},{"location":"chart/requirements/#postgresql-server-setup","text":"Codacy requires a database server to persist data that must satisfy the following requirements: The infrastructure hosting the database server must be provisioned with the hardware requirements described below The DBMS server must be PostgreSQL version 9.6 The PostgreSQL server must be configured to accept connections from the cluster The Codacy databases and a dedicated user must be created using the instructions below Important Google, the developer of Kubernetes, doesn't recommend running database servers on your cluster . As such, consider using a managed solution like Amazon RDS or Google Cloud SQL, or running the PostgreSQL server on a dedicated virtual machine. We recommend that you use a managed solution to reduce maintenance and configuration costs of the PostgreSQL server. The main cloud providers all have this service that you can use, for example: Amazon RDS for PostgreSQL or Amazon Aurora PostgreSQL-Compatible Edition Azure Database for PostgreSQL Google Cloud SQL for PostgreSQL Digital Ocean Managed Databases","title":"PostgreSQL server setup"},{"location":"chart/requirements/#postgresql-hardware-requirements","text":"The following are the minimum specifications recommended for provisioning the PostgreSQL server: vCPUs Memory Storage Max. concurrent connections 4 8 GB 500 GB+ 300","title":"PostgreSQL hardware requirements"},{"location":"chart/requirements/#preparing-postgresql-for-codacy","text":"Before installing Codacy you must create a set of databases that will be used by Codacy to persist data. We also recommend that you create a dedicated user for Codacy, with access permissions only to the databases that are specific to Codacy: Connect to the PostgreSQL server as a database admin user. For example, using the psql command line client: psql -U postgres -h <PostgreSQL server hostname> Create the dedicated user that Codacy will use to connect to PostgreSQL. Make sure that you change the username and password to suit your security needs: CREATE USER codacy WITH PASSWORD 'codacy' ; ALTER ROLE codacy WITH CREATEDB ; Take note of the username and password you define, as you will require them later to configure the connection from Codacy to the PostgreSQL server. Make sure that you can connect to the PostgreSQL database using the newly created user. For example, using the psql command line client: psql -U codacy -d postgres -h <PostgreSQL server hostname> Create the databases required by Codacy: CREATE DATABASE accounts WITH OWNER = codacy ; CREATE DATABASE analysis WITH OWNER = codacy ; CREATE DATABASE results WITH OWNER = codacy ; CREATE DATABASE metrics WITH OWNER = codacy ; CREATE DATABASE filestore WITH OWNER = codacy ; CREATE DATABASE jobs WITH OWNER = codacy ; CREATE DATABASE activities WITH OWNER = codacy ; CREATE DATABASE hotspots WITH OWNER = codacy ; CREATE DATABASE listener WITH OWNER = codacy ; CREATE DATABASE crow WITH OWNER = codacy ;","title":"Preparing PostgreSQL for Codacy"},{"location":"chart/configuration/monitoring/","text":"Monitoring \u00b6 Currently, we support two monitoring solutions: Crow : A simple, lightweight, and built-in monitoring solution, that is enabled by default when you install Codacy. Prometheus + Grafana + Loki : A comprehensive third-party monitoring solution, recommended for more advanced usage. The sections below provide details on how to set up each monitoring solution. Setting up monitoring using Crow \u00b6 Crow displays information about the projects that are pending analysis and the jobs currently running on Codacy. Crow is installed alongside Codacy when the Helm chart is deployed to the cluster. By default, you can access Crow as follows: URL: http://<codacy hostname>/monitoring , where <codacy hostname> is the hostname of your Codacy instance Username: codacy Password: C0dacy123 We highly recommend that you define a custom password for Crow, if you haven't already done it when installing Codacy: Edit the value of global.crow.config.passwordAuth.password in the values-production.yaml file that you used to install Codacy: global : crow : config : passwordAuth : password : C0dacy123 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml Setting up monitoring using Grafana, Prometheus, and Loki \u00b6 Prometheus is an open-source systems monitoring and alerting toolkit. Logs can be collected using Loki , which is a horizontally-scalable, highly-available, multi-tenant log aggregation system. Its data can be visualized with Grafana , a widely used open source analytics and monitoring solution. This solution is considerably more resource demanding than Crow, and is recommended only for more advanced usage. Furthermore, its installation, configuration, and management require a deeper knowledge of Kubernetes as each component must be carefully tweaked to match your specific use case, using as starting point the .yaml values files provided by us. The instructions below cover the basic installation of the components in this monitoring stack. 1. Installing Prometheus \u00b6 The simplest way to set up Prometheus in your cluster is by using the Prometheus Operator bundle. Add the custom resources required for installing this bundle in your cluster: Important If you are using MicroK8s use microk8s.kubectl instead of kubectl . kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml\" 2. Installing Loki \u00b6 Obtain the configuration file for Loki, values-loki.yaml , and install it by running the command below. While the default storage class setting for Loki persistence should suit most use cases, you may need to adjust it to your specific Kubernetes installation. For instance, for MicroK8s use storageClassName: microk8s-hostpath . helm repo add loki https://grafana.github.io/loki/charts kubectl create namespace monitoring helm upgrade --install --atomic --timeout 600s loki loki/loki \\ --version 0 .28.1 --namespace monitoring --values values-loki.yaml 3. Installing Promtail \u00b6 Promtail is an agent that ships the contents of local logs to a Loki instance. Obtain the configuration file for Promtail, values-promtail.yaml , and install it by running the command below. helm upgrade --install --atomic --timeout 600s promtail loki/promtail \\ --version 0 .22.2 --namespace monitoring --values values-promtail.yaml 4. Installing Prometheus and Grafana \u00b6 Obtain the configuration file for the Prometheus Operator bundle , values-prometheus-operator.yaml . Then: Edit the Grafana password for the admin user and the hostname for grafana in the values-prometheus-operator.yaml file. Install the bundle on your cluster by running the command below. helm upgrade --install --atomic --timeout 600s monitoring stable/prometheus-operator \\ --version 8 .13.8 --namespace monitoring --values values-prometheus-operator.yaml Follow the Kubernetes documentation to access the Grafana service that is now running on your cluster, using the method that best suits your use case. 5. Enable service dashboards \u00b6 Warning Currently, the application metrics and information reported by the Codacy components to populate service dashboards are very limited since we are still developing these reporting capabilities. As such, we recommend that you skip this configuration. Now that you have Prometheus and Grafana installed you can enable serviceMonitor and grafana_dashboards for Codacy components. Create a file named values-monitoring.yaml with the following content: global : metrics : serviceMonitor : enabled : true grafana : enabled : true Apply this configuration by performing a Helm upgrade. To do so append --values values-monitoring.yaml to the command used to install Codacy : helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-monitoring.yaml","title":"Monitoring"},{"location":"chart/configuration/monitoring/#monitoring","text":"Currently, we support two monitoring solutions: Crow : A simple, lightweight, and built-in monitoring solution, that is enabled by default when you install Codacy. Prometheus + Grafana + Loki : A comprehensive third-party monitoring solution, recommended for more advanced usage. The sections below provide details on how to set up each monitoring solution.","title":"Monitoring"},{"location":"chart/configuration/monitoring/#setting-up-monitoring-using-crow","text":"Crow displays information about the projects that are pending analysis and the jobs currently running on Codacy. Crow is installed alongside Codacy when the Helm chart is deployed to the cluster. By default, you can access Crow as follows: URL: http://<codacy hostname>/monitoring , where <codacy hostname> is the hostname of your Codacy instance Username: codacy Password: C0dacy123 We highly recommend that you define a custom password for Crow, if you haven't already done it when installing Codacy: Edit the value of global.crow.config.passwordAuth.password in the values-production.yaml file that you used to install Codacy: global : crow : config : passwordAuth : password : C0dacy123 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Setting up monitoring using Crow"},{"location":"chart/configuration/monitoring/#setting-up-monitoring-using-grafana-prometheus-and-loki","text":"Prometheus is an open-source systems monitoring and alerting toolkit. Logs can be collected using Loki , which is a horizontally-scalable, highly-available, multi-tenant log aggregation system. Its data can be visualized with Grafana , a widely used open source analytics and monitoring solution. This solution is considerably more resource demanding than Crow, and is recommended only for more advanced usage. Furthermore, its installation, configuration, and management require a deeper knowledge of Kubernetes as each component must be carefully tweaked to match your specific use case, using as starting point the .yaml values files provided by us. The instructions below cover the basic installation of the components in this monitoring stack.","title":"Setting up monitoring using Grafana, Prometheus, and Loki"},{"location":"chart/configuration/monitoring/#1-installing-prometheus","text":"The simplest way to set up Prometheus in your cluster is by using the Prometheus Operator bundle. Add the custom resources required for installing this bundle in your cluster: Important If you are using MicroK8s use microk8s.kubectl instead of kubectl . kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml\" kubectl apply -f \"https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.38/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml\"","title":"1. Installing Prometheus"},{"location":"chart/configuration/monitoring/#2-installing-loki","text":"Obtain the configuration file for Loki, values-loki.yaml , and install it by running the command below. While the default storage class setting for Loki persistence should suit most use cases, you may need to adjust it to your specific Kubernetes installation. For instance, for MicroK8s use storageClassName: microk8s-hostpath . helm repo add loki https://grafana.github.io/loki/charts kubectl create namespace monitoring helm upgrade --install --atomic --timeout 600s loki loki/loki \\ --version 0 .28.1 --namespace monitoring --values values-loki.yaml","title":"2. Installing Loki"},{"location":"chart/configuration/monitoring/#3-installing-promtail","text":"Promtail is an agent that ships the contents of local logs to a Loki instance. Obtain the configuration file for Promtail, values-promtail.yaml , and install it by running the command below. helm upgrade --install --atomic --timeout 600s promtail loki/promtail \\ --version 0 .22.2 --namespace monitoring --values values-promtail.yaml","title":"3. Installing Promtail"},{"location":"chart/configuration/monitoring/#4-installing-prometheus-and-grafana","text":"Obtain the configuration file for the Prometheus Operator bundle , values-prometheus-operator.yaml . Then: Edit the Grafana password for the admin user and the hostname for grafana in the values-prometheus-operator.yaml file. Install the bundle on your cluster by running the command below. helm upgrade --install --atomic --timeout 600s monitoring stable/prometheus-operator \\ --version 8 .13.8 --namespace monitoring --values values-prometheus-operator.yaml Follow the Kubernetes documentation to access the Grafana service that is now running on your cluster, using the method that best suits your use case.","title":"4. Installing Prometheus and Grafana"},{"location":"chart/configuration/monitoring/#5-enable-service-dashboards","text":"Warning Currently, the application metrics and information reported by the Codacy components to populate service dashboards are very limited since we are still developing these reporting capabilities. As such, we recommend that you skip this configuration. Now that you have Prometheus and Grafana installed you can enable serviceMonitor and grafana_dashboards for Codacy components. Create a file named values-monitoring.yaml with the following content: global : metrics : serviceMonitor : enabled : true grafana : enabled : true Apply this configuration by performing a Helm upgrade. To do so append --values values-monitoring.yaml to the command used to install Codacy : helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-monitoring.yaml","title":"5. Enable service dashboards"},{"location":"chart/configuration/tls-ingress/","text":"HTTPS using LetsEncrypt \u00b6 This documentation guides you on how to set up HTTPS for Codacy using Let's Encrypt . For this, we will use: The cert-manager Kubernetes certificate management controller, configured to issue certificates from Let's Encrypt (a certificate authority providing free TLS certificates) The NGINX Ingress Controller to perform TLS termination. This is already preinstalled if you followed our installation documentation for microk8s or AWS EKS . 1. Install the Certificate Manager \u00b6 Install and set up cert-manager to issue certificates from Let's Encrypt: Start by adding the following chart repository to Helm: helm repo add jetstack https://charts.jetstack.io helm repo update Install the cert-manager custom resources and tag the namespace: kubectl label namespace codacy certmanager.k8s.io/disable-validation = \"true\" # Kubernetes 1.15+ # kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager.crds.yaml # Kubernetes <1.15 kubectl apply --validate = false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager-legacy.crds.yaml Download the certificate issuer configuration file issuer-letsencrypt.yaml , edit the file to set your email address where indicated, and execute: kubectl apply --namespace codacy -f issuer-letsencrypt.yaml Finally, install the certificate manager. Download the cert-manager configuration file values-cert-manager.yaml , and execute: helm upgrade --install --version v0.15.1 codacy-cert-manager jetstack/cert-manager \\ --namespace codacy \\ --values values-cert-manager.yaml 2. Set up the Ingress \u00b6 Set up Ingress to use TLS: Uncomment the TLS section in the codacy-ingress section of your values-prodcution.yaml file. Apply the new configuration by performing a Helm upgrade, using the same options you have previously used to install Codacy. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0","title":"HTTPS using LetsEncrypt"},{"location":"chart/configuration/tls-ingress/#https-using-letsencrypt","text":"This documentation guides you on how to set up HTTPS for Codacy using Let's Encrypt . For this, we will use: The cert-manager Kubernetes certificate management controller, configured to issue certificates from Let's Encrypt (a certificate authority providing free TLS certificates) The NGINX Ingress Controller to perform TLS termination. This is already preinstalled if you followed our installation documentation for microk8s or AWS EKS .","title":"HTTPS using LetsEncrypt"},{"location":"chart/configuration/tls-ingress/#1-install-the-certificate-manager","text":"Install and set up cert-manager to issue certificates from Let's Encrypt: Start by adding the following chart repository to Helm: helm repo add jetstack https://charts.jetstack.io helm repo update Install the cert-manager custom resources and tag the namespace: kubectl label namespace codacy certmanager.k8s.io/disable-validation = \"true\" # Kubernetes 1.15+ # kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager.crds.yaml # Kubernetes <1.15 kubectl apply --validate = false -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager-legacy.crds.yaml Download the certificate issuer configuration file issuer-letsencrypt.yaml , edit the file to set your email address where indicated, and execute: kubectl apply --namespace codacy -f issuer-letsencrypt.yaml Finally, install the certificate manager. Download the cert-manager configuration file values-cert-manager.yaml , and execute: helm upgrade --install --version v0.15.1 codacy-cert-manager jetstack/cert-manager \\ --namespace codacy \\ --values values-cert-manager.yaml","title":"1. Install the Certificate Manager"},{"location":"chart/configuration/tls-ingress/#2-set-up-the-ingress","text":"Set up Ingress to use TLS: Uncomment the TLS section in the codacy-ingress section of your values-prodcution.yaml file. Apply the new configuration by performing a Helm upgrade, using the same options you have previously used to install Codacy. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0","title":"2. Set up the Ingress"},{"location":"chart/configuration/integrations/bitbucket-cloud/","text":"Bitbucket Cloud \u00b6 Follow the instructions below to set up the Codacy integration with Bitbucket Cloud. Create an OAuth consumer \u00b6 To integrate Codacy with Bitbucket Cloud, you must register an OAuth consumer for Codacy on Bitbucket. You can create a consumer on any existing individual or team account. To create a consumer, do the following: On Bitbucket, click on your avatar on the bottom left-hand corner and select Bitbucket settings . Select OAuth on the left sidebar and click the button Add consumer . Fill in the fields to create the OAuth consumer: Name: Name of the OAuth consumer. For example, Codacy . Callback URL: Copy the URL below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. https://codacy.example.com/login/Bitbucket?codacy_skip_ga=1 This is a private consumer: Enable the check box. Add the permissions: Account: Write Team membership: Read Projects: Read Repositories: Admin Pull requests: Write Issues: Write Webhooks: Read and write Click Save, and then click the name of the new OAuth consumer to take note of the generated key and secret. Configure Bitbucket Cloud on Codacy \u00b6 After creating the OAuth consumer on Bitbucket Cloud, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucket.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the OAuth consumer: global : bitbucket : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Cloud key : \"\" # OAuth consumer key secret : \"\" # OAuth consumer secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Cloud to authenticate to Codacy.","title":"Bitbucket Cloud"},{"location":"chart/configuration/integrations/bitbucket-cloud/#bitbucket-cloud","text":"Follow the instructions below to set up the Codacy integration with Bitbucket Cloud.","title":"Bitbucket Cloud"},{"location":"chart/configuration/integrations/bitbucket-cloud/#create-oauth","text":"To integrate Codacy with Bitbucket Cloud, you must register an OAuth consumer for Codacy on Bitbucket. You can create a consumer on any existing individual or team account. To create a consumer, do the following: On Bitbucket, click on your avatar on the bottom left-hand corner and select Bitbucket settings . Select OAuth on the left sidebar and click the button Add consumer . Fill in the fields to create the OAuth consumer: Name: Name of the OAuth consumer. For example, Codacy . Callback URL: Copy the URL below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. https://codacy.example.com/login/Bitbucket?codacy_skip_ga=1 This is a private consumer: Enable the check box. Add the permissions: Account: Write Team membership: Read Projects: Read Repositories: Admin Pull requests: Write Issues: Write Webhooks: Read and write Click Save, and then click the name of the new OAuth consumer to take note of the generated key and secret.","title":"Create an OAuth consumer"},{"location":"chart/configuration/integrations/bitbucket-cloud/#configure","text":"After creating the OAuth consumer on Bitbucket Cloud, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucket.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the OAuth consumer: global : bitbucket : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Cloud key : \"\" # OAuth consumer key secret : \"\" # OAuth consumer secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Cloud to authenticate to Codacy.","title":"Configure Bitbucket Cloud on Codacy"},{"location":"chart/configuration/integrations/bitbucket-server/","text":"Bitbucket Server \u00b6 Follow the instructions below to set up the Codacy integration with Bitbucket Server. Create a Bitbucket Server application link \u00b6 To integrate Codacy with Bitbucket Server, you must create an application link on your Bitbucket Server instance: Since Bitbucket Server uses OAuth1, you need to create a key pair to sign and validate the requests between Codacy and the Bitbucket Server instance. Create a key pair using the RSA algorithm in the PKCS#8 format by executing the command: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/configuration/integrations/generate-bitbucket-server-secrets.sh ) Store the keys in a safe place for usage in the next steps and as a backup. Open <bitbucket server url>/plugins/servlet/applinks/listApplicationLinks , where <bitbucket server url> is the URL of your Bitbucket Server instance. Create a new application link with the URL of your Codacy instance. Fill in the fields: Application Name: Name of the application. For example, Codacy . Application Type: Select Generic Application . The remaining fields should be left blank. After creating the link, click Edit to add an incoming authentication. Fill in the fields of the incomming authentication: Consumer Key: Enter the consumerKey generated previously. Consumer Name: Name of the consumer. For example, Codacy . Public Key: Enter the consumerPublicKey generated previously. The remaining fields should be left blank. Configure Bitbucket Server on Codacy \u00b6 After creating the Bitbucket Server application link, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucketEnterprise.enabled: \"true\" and define the remaining values as described below and with the information obtained when you created the Bitbucket Server application link: bitbucketEnterprise : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Server hostname : \"bitbucket.example.com\" # Hostname of your Bitbucket Server instance protocol : \"https\" # Protocol of your Bitbucket Server instance port : 7990 # Port of your Bitbucket Server instance consumerKey : \"\" # Generated when creating the Bitbucket Server application link consumerPublicKey : \"\" # Generated when creating the Bitbucket Server application link consumerPrivateKey : \"\" # Generated when creating the Bitbucket Server application link Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Server to authenticate to Codacy.","title":"Bitbucket Server"},{"location":"chart/configuration/integrations/bitbucket-server/#bitbucket-server","text":"Follow the instructions below to set up the Codacy integration with Bitbucket Server.","title":"Bitbucket Server"},{"location":"chart/configuration/integrations/bitbucket-server/#create-a-bitbucket-server-application-link","text":"To integrate Codacy with Bitbucket Server, you must create an application link on your Bitbucket Server instance: Since Bitbucket Server uses OAuth1, you need to create a key pair to sign and validate the requests between Codacy and the Bitbucket Server instance. Create a key pair using the RSA algorithm in the PKCS#8 format by executing the command: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/configuration/integrations/generate-bitbucket-server-secrets.sh ) Store the keys in a safe place for usage in the next steps and as a backup. Open <bitbucket server url>/plugins/servlet/applinks/listApplicationLinks , where <bitbucket server url> is the URL of your Bitbucket Server instance. Create a new application link with the URL of your Codacy instance. Fill in the fields: Application Name: Name of the application. For example, Codacy . Application Type: Select Generic Application . The remaining fields should be left blank. After creating the link, click Edit to add an incoming authentication. Fill in the fields of the incomming authentication: Consumer Key: Enter the consumerKey generated previously. Consumer Name: Name of the consumer. For example, Codacy . Public Key: Enter the consumerPublicKey generated previously. The remaining fields should be left blank.","title":"Create a Bitbucket Server application link"},{"location":"chart/configuration/integrations/bitbucket-server/#configure-bitbucket-server-on-codacy","text":"After creating the Bitbucket Server application link, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.bitbucketEnterprise.enabled: \"true\" and define the remaining values as described below and with the information obtained when you created the Bitbucket Server application link: bitbucketEnterprise : enabled : \"true\" login : \"true\" # Show login button for Bitbucket Server hostname : \"bitbucket.example.com\" # Hostname of your Bitbucket Server instance protocol : \"https\" # Protocol of your Bitbucket Server instance port : 7990 # Port of your Bitbucket Server instance consumerKey : \"\" # Generated when creating the Bitbucket Server application link consumerPublicKey : \"\" # Generated when creating the Bitbucket Server application link consumerPrivateKey : \"\" # Generated when creating the Bitbucket Server application link Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use Bitbucket Server to authenticate to Codacy.","title":"Configure Bitbucket Server on Codacy"},{"location":"chart/configuration/integrations/email/","text":"Emails \u00b6 Follow the instructions below to set up Codacy to send emails using your SMTP server: Edit the file values-production.yaml that you used to install Codacy . Set global.email.enabled: \"true\" and define the remaining values with the credentials for your SMTP server: email : enabled : \"true\" replyTo : \"notifications@mycompany.com\" # Reply-to field on sent emails smtp : protocol : \"smtp\" # SMTP protocol to use, either smtps or smtp hostname : \"smtp.example.com\" # Hostname of your SMTP server # username: \"\" # Optional username to authenticate on your SMTP server # password: \"\" # Optional password to authenticate on your SMTP server # port: 25 # Optional port of your SMTP server, the default is 25 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to: Invite new users via email Receive commit and pull request email notifications","title":"Emails"},{"location":"chart/configuration/integrations/email/#emails","text":"Follow the instructions below to set up Codacy to send emails using your SMTP server: Edit the file values-production.yaml that you used to install Codacy . Set global.email.enabled: \"true\" and define the remaining values with the credentials for your SMTP server: email : enabled : \"true\" replyTo : \"notifications@mycompany.com\" # Reply-to field on sent emails smtp : protocol : \"smtp\" # SMTP protocol to use, either smtps or smtp hostname : \"smtp.example.com\" # Hostname of your SMTP server # username: \"\" # Optional username to authenticate on your SMTP server # password: \"\" # Optional password to authenticate on your SMTP server # port: 25 # Optional port of your SMTP server, the default is 25 Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to: Invite new users via email Receive commit and pull request email notifications","title":"Emails"},{"location":"chart/configuration/integrations/github-app-create/","text":"Creating a GitHub App \u00b6 You must create and correctly set up a GitHub App to allow Codacy to integrate with GitHub. To create the GitHub App: If you're using GitHub Cloud , open https://github.com/settings/apps/new . If you're using GitHub Enterprise , open https://github.example.com/settings/apps/new , replacing the HTTP protocol and hostname with the correct values for your GitHub Enterprise instance. Configure the new GitHub App using the values listed on the table below, replacing https://codacy.example.com with the correct base URL of your Codacy instance. Field Value GitHub App name Codacy Homepage URL https://codacy.example.com User authorization callback URL https://codacy.example.com Webhook URL For GitHub Cloud: https://codacy.example.com/2.0/events/gh/organization For GitHub Enterprise: https://codacy.example.com/2.0/events/ghe/organization Repository permissions Administration Read & write Checks Read & write Issues Read & write Metadata Read only Pull requests Read & write Webhooks Read & write Commit statuses Read & write Organization permissions Members Read only Webhooks Read & write User permissions Email addresses Read only Git SSH keys Read & write Where can this GitHub App be installed? Any account Scroll to the bottom of the page, click Generate a private key , and save the .pem file containing the private key. Take note of the following information, as you'll need it to configure Codacy: GitHub App name App ID Client ID Client secret Private key (contents of the .pem file generated in the previous step)","title":"Creating a GitHub App"},{"location":"chart/configuration/integrations/github-app-create/#creating-a-github-app","text":"You must create and correctly set up a GitHub App to allow Codacy to integrate with GitHub. To create the GitHub App: If you're using GitHub Cloud , open https://github.com/settings/apps/new . If you're using GitHub Enterprise , open https://github.example.com/settings/apps/new , replacing the HTTP protocol and hostname with the correct values for your GitHub Enterprise instance. Configure the new GitHub App using the values listed on the table below, replacing https://codacy.example.com with the correct base URL of your Codacy instance. Field Value GitHub App name Codacy Homepage URL https://codacy.example.com User authorization callback URL https://codacy.example.com Webhook URL For GitHub Cloud: https://codacy.example.com/2.0/events/gh/organization For GitHub Enterprise: https://codacy.example.com/2.0/events/ghe/organization Repository permissions Administration Read & write Checks Read & write Issues Read & write Metadata Read only Pull requests Read & write Webhooks Read & write Commit statuses Read & write Organization permissions Members Read only Webhooks Read & write User permissions Email addresses Read only Git SSH keys Read & write Where can this GitHub App be installed? Any account Scroll to the bottom of the page, click Generate a private key , and save the .pem file containing the private key. Take note of the following information, as you'll need it to configure Codacy: GitHub App name App ID Client ID Client secret Private key (contents of the .pem file generated in the previous step)","title":"Creating a GitHub App"},{"location":"chart/configuration/integrations/github-cloud/","text":"GitHub Cloud \u00b6 Follow the instructions below to set up the Codacy integration with GitHub Cloud: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.github.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: github : enabled : \"true\" login : \"true\" # Show login button for GitHub Cloud clientId : \"\" # Client ID clientSecret : \"\" # Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Cloud to authenticate to Codacy.","title":"GitHub Cloud"},{"location":"chart/configuration/integrations/github-cloud/#github-cloud","text":"Follow the instructions below to set up the Codacy integration with GitHub Cloud: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.github.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: github : enabled : \"true\" login : \"true\" # Show login button for GitHub Cloud clientId : \"\" # Client ID clientSecret : \"\" # Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Cloud to authenticate to Codacy.","title":"GitHub Cloud"},{"location":"chart/configuration/integrations/github-enterprise/","text":"GitHub Enterprise \u00b6 Follow the instructions below to set up the Codacy integration with GitHub Enterprise: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.githubEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: githubEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitHub Enterprise hostname : \"github.example.com\" # Hostname of your GitHub Enterprise instance protocol : \"https\" # Protocol of your GitHub Enterprise instance port : 443 # Port of your GitHub Enterprise instance disableSSL : \"false\" # Disable certificate validation isPrivateMode : \"true\" # Status of private mode on your GitHub Enterprise instance clientId : \"\" # GitHub App Client ID clientSecret : \"\" # GitHub App Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # GitHub App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Enterprise to authenticate to Codacy.","title":"GitHub Enterprise"},{"location":"chart/configuration/integrations/github-enterprise/#github-enterprise","text":"Follow the instructions below to set up the Codacy integration with GitHub Enterprise: Follow the instructions on creating a GitHub App . Edit the file values-production.yaml that you used to install Codacy . Set global.githubEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitHub App: githubEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitHub Enterprise hostname : \"github.example.com\" # Hostname of your GitHub Enterprise instance protocol : \"https\" # Protocol of your GitHub Enterprise instance port : 443 # Port of your GitHub Enterprise instance disableSSL : \"false\" # Disable certificate validation isPrivateMode : \"true\" # Status of private mode on your GitHub Enterprise instance clientId : \"\" # GitHub App Client ID clientSecret : \"\" # GitHub App Client secret app : name : \"codacy\" # GitHub App name id : \"1234\" # GitHub App ID privateKey : \"\" # Contents of the .pem file without newlines Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitHub Enterprise to authenticate to Codacy.","title":"GitHub Enterprise"},{"location":"chart/configuration/integrations/gitlab-cloud/","text":"GitLab Cloud \u00b6 Follow the instructions below to set up the Codacy integration with GitLab Cloud. Create a GitLab application \u00b6 To integrate Codacy with GitLab Cloud, you must create a GitLab application: Open https://gitlab.com/profile/applications . Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLab https://codacy.example.com/add/addService/GitLab https://codacy.example.com/add/addPermissions/GitLab Scopes: Enable the scopes: api read_user read_repository Click Save application and take note of the generated Application Id and Secret. Configure GitLab Cloud on Codacy \u00b6 After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlab.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlab : enabled : \"true\" login : \"true\" # Show login button for GitLab Cloud clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Cloud to authenticate to Codacy.","title":"GitLab Cloud"},{"location":"chart/configuration/integrations/gitlab-cloud/#gitlab-cloud","text":"Follow the instructions below to set up the Codacy integration with GitLab Cloud.","title":"GitLab Cloud"},{"location":"chart/configuration/integrations/gitlab-cloud/#create-application","text":"To integrate Codacy with GitLab Cloud, you must create a GitLab application: Open https://gitlab.com/profile/applications . Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLab https://codacy.example.com/add/addService/GitLab https://codacy.example.com/add/addPermissions/GitLab Scopes: Enable the scopes: api read_user read_repository Click Save application and take note of the generated Application Id and Secret.","title":"Create a GitLab application"},{"location":"chart/configuration/integrations/gitlab-cloud/#configure","text":"After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlab.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlab : enabled : \"true\" login : \"true\" # Show login button for GitLab Cloud clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Cloud to authenticate to Codacy.","title":"Configure GitLab Cloud on Codacy"},{"location":"chart/configuration/integrations/gitlab-enterprise/","text":"GitLab Enterprise \u00b6 Follow the instructions below to set up the Codacy integration with GitLab Enterprise: Create a GitLab application \u00b6 To integrate Codacy with GitLab Enterprise, you must create a GitLab application: Open <gitlab enterprise url>/profile/applications as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLabEnterprise https://codacy.example.com/add/addService/GitLabEnterprise https://codacy.example.com/add/addPermissions/GitLabEnterprise Scopes: Enable the scopes: api read_user read_repository openid Click Save application and take note of the generated Application Id and Secret. Configure GitLab Enterprise on Codacy \u00b6 After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlabEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlabEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitLab Enterprise hostname : \"gitlab.example.com\" # Hostname of your GitLab Enterprise instance protocol : \"https\" # Protocol of your GitLab Enterprise instance port : 443 # Port of your GitLab Enterprise instance clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Enterprise to authenticate to Codacy. Detect changes to repositories and organizations \u00b6 Optionally, Codacy can automatically detect the following changes to repositories and organizations on your GitLab Enterprise instance: For repositories: renames, deletes, and visibility changes For organizations: renames, deletes, and access removed To do this, you must configure a System Hook on your GitLab Enterprise instance to notify Codacy of the changes: Open <gitlab enterprise url>/admin/hooks as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to create the System Hook: URL: The URL of your Codacy instance with the path /2.0/events/gle/organization . For example, http://codacy.example.com/2.0/events/gle/organization Secret Token: Copy the Application Secret from the GitLab application that you created previously, or from the value of clientSecret in the file values-production.yaml that you used to install Codacy. Trigger: Enable the trigger Repository update events SSL verification: Enable the SSL verification. Click Save Changes to save the System Hook.","title":"GitLab Enterprise"},{"location":"chart/configuration/integrations/gitlab-enterprise/#gitlab-enterprise","text":"Follow the instructions below to set up the Codacy integration with GitLab Enterprise:","title":"GitLab Enterprise"},{"location":"chart/configuration/integrations/gitlab-enterprise/#create-application","text":"To integrate Codacy with GitLab Enterprise, you must create a GitLab application: Open <gitlab enterprise url>/profile/applications as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to register your Codacy instance on GitLab: Name: Name of the application. For example, Codacy . Redirect URI: Copy the URLs below, replacing the HTTP protocol and hostname with the correct values for your Codacy instance. This field is case sensitive. https://codacy.example.com/login/GitLabEnterprise https://codacy.example.com/add/addService/GitLabEnterprise https://codacy.example.com/add/addPermissions/GitLabEnterprise Scopes: Enable the scopes: api read_user read_repository openid Click Save application and take note of the generated Application Id and Secret.","title":"Create a GitLab application"},{"location":"chart/configuration/integrations/gitlab-enterprise/#configure","text":"After creating the GitLab application, you must configure it on Codacy: Edit the file values-production.yaml that you used to install Codacy . Set global.gitlabEnterprise.enabled: \"true\" and define the remaining values as described below using the information obtained when you created the GitLab application: gitlabEnterprise : enabled : \"true\" login : \"true\" # Show login button for GitLab Enterprise hostname : \"gitlab.example.com\" # Hostname of your GitLab Enterprise instance protocol : \"https\" # Protocol of your GitLab Enterprise instance port : 443 # Port of your GitLab Enterprise instance clientId : \"\" # Application ID clientSecret : \"\" # Secret Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml After this is done you will be able to use GitLab Enterprise to authenticate to Codacy.","title":"Configure GitLab Enterprise on Codacy"},{"location":"chart/configuration/integrations/gitlab-enterprise/#detect-changes-to-repositories-and-organizations","text":"Optionally, Codacy can automatically detect the following changes to repositories and organizations on your GitLab Enterprise instance: For repositories: renames, deletes, and visibility changes For organizations: renames, deletes, and access removed To do this, you must configure a System Hook on your GitLab Enterprise instance to notify Codacy of the changes: Open <gitlab enterprise url>/admin/hooks as a GitLab admin, where <gitlab enterprise url> is the URL of your GitLab Enterprise instance. Fill in the fields to create the System Hook: URL: The URL of your Codacy instance with the path /2.0/events/gle/organization . For example, http://codacy.example.com/2.0/events/gle/organization Secret Token: Copy the Application Secret from the GitLab application that you created previously, or from the value of clientSecret in the file values-production.yaml that you used to install Codacy. Trigger: Enable the trigger Repository update events SSL verification: Enable the SSL verification. Click Save Changes to save the System Hook.","title":"Detect changes to repositories and organizations"},{"location":"chart/infrastructure/eks-quickstart/","text":"Creating an Amazon EKS cluster \u00b6 Follow the instructions below to set up an Amazon EKS cluster from scratch, including all the necessary underlying infrastructure, using Terraform. The image above is a non-exhaustive overview of what you can expect to have deployed in your AWS account by using this quickstart. 1. Prepare your environment \u00b6 Prepare your environment to set up the Amazon EKS cluster: Make sure that you have the following tools installed on your machine: Git version >= 2.0.0 AWS CLI version 1 Terraform version >= 0.12 Kubectl version >= 1.14 Set up the AWS CLI credentials for your AWS account using the AWS CLI and Terraform documentation as reference. Note that, as stated in the Terraform documentation , if your .aws/credentials are more complex you might need to set AWS_SDK_LOAD_CONFIG=1 for Terraform to work correctly: export AWS_SDK_LOAD_CONFIG = 1 Clone the Codacy chart repository and change to the directory that includes the provided Terraform configuration files: git clone https://github.com/codacy/chart.git cd chart/docs/infrastructure/EKS/ This folder includes the following infrastructure stacks: backend : Optional S3 bucket for storing the Terraform state and a DynamoDB table for state locking main : Amazon EKS cluster, including the setup of all network and node infrastructure to go from zero to a fully functional cluster You must have administration privileges on AWS to deploy (and eventually destroy) this infrastructure. The policy file aws-terraform-minimum-admin-policy.json lists the minimum privileges that are required. 2. Set up the Terraform state storage backend \u00b6 The backend stores the current and historical state of your infrastructure. Although using the backend is optional, we recommend that you deploy it, particularly if you are planning to use these Terraform templates to make modifications to the cluster in the future: Initialize Terraform and deploy the infrastructure described in the backend/ directory, then follow Terraform's instructions: cd backend/ terraform init && terraform apply This creates an Amazon S3 bucket with a unique name to save the infrastructure state. Take note of the value of state_bucket_name in the output of the command. Edit the main/config.tf file and follow the instructions included in the comments to set the name of the Amazon S3 bucket created above and enable the use of the backend in those infrastructure stacks. 3. Create a vanilla Amazon EKS cluster \u00b6 Create a cluster that includes all the required network and node setup: Initialize Terraform and deploy the infrastructure described in the main/ directory, then follow Terraform's instructions: cd ../main/ terraform init && terraform apply This process takes around 10 minutes. Consider if you want to tailor the cluster to your needs by customizing the cluster configuration. The cluster configuration (such as the type and number of nodes, network CIDRs, etc.) is exposed as variables in the main/variables.tf file. To customize the defaults of that file we recommend that you use a variable definitions file and set the variables in a file named terraform.tfvars in the directory main/ . The following is an example terraform.tfvars : some_key = \"a_string_value\" another_key = 3 someting_else = true Subsequently running terraform apply loads the variables in the terraform.tfvars file by default: terraform apply Set up the kubeconfig file that stores the information needed by kubectl to connect to the new cluster by default: aws eks update-kubeconfig --name codacy-cluster --alias codacy-cluster Get information about the pods in the cluster to test that the cluster was created and that kubectl can successfully connect to the cluster: kubectl get pods -A 4. Prepare to set up the Ingress Controller \u00b6 Prepare your infrastructure for the Ingress Controller setup, which is performed later during the installation process: Make sure that your network resources are correctly tagged, and create the following required tags if they are missing: Resource Type Key = Value VPC kubernetes.io/cluster/codacy-cluster = shared Subnet (public) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/elb = 1 Subnet (private) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/internal-elb = 1 For more information refer to the AWS documentation . Add the following chart repositories to Helm: helm repo add stable https://kubernetes-charts.storage.googleapis.com helm repo update 5. Install the NGINX Ingress Controller \u00b6 Install the NGINX Ingress Controller: Download the configuration file values-nginx.yaml for the NGINX Ingress Controller. If you wish to use a private load balancer or restrict the IP range for the provisioned load balancer edit the file and enable the required annotation and/or the corresponding setting where indicated. Install the NGINX Ingress Controller: kubectl create namespace codacy helm upgrade --install --namespace codacy --version 1 .39.0 codacy-nginx-ingress stable/nginx-ingress -f values-nginx.yaml Uninstalling the Amazon EKS cluster \u00b6 Warning If you proceed beyond this point you'll permanently delete and break things. Delete the Kubernetes cluster. Run the following command in the main/ directory: terraform destroy This process takes around 10 minutes. Remove the Terraform backend. If you created the Terraform backend with the provided stack you can now safely delete it. The backend is purposely created with extra settings to prevent its accidental destruction. To destroy it cleanly you must first disable these settings by editing the file backend/state_and_lock.tf and following the instructions included in the comments. Afterwards, run the following command in the backend/ directory: terraform apply && terraform destroy Note that you first have to run terraform apply to update the settings, and only then will terraform destroy be able to destroy the backend.","title":"Creating an Amazon EKS cluster"},{"location":"chart/infrastructure/eks-quickstart/#creating-an-amazon-eks-cluster","text":"Follow the instructions below to set up an Amazon EKS cluster from scratch, including all the necessary underlying infrastructure, using Terraform. The image above is a non-exhaustive overview of what you can expect to have deployed in your AWS account by using this quickstart.","title":"Creating an Amazon EKS cluster"},{"location":"chart/infrastructure/eks-quickstart/#1-prepare-your-environment","text":"Prepare your environment to set up the Amazon EKS cluster: Make sure that you have the following tools installed on your machine: Git version >= 2.0.0 AWS CLI version 1 Terraform version >= 0.12 Kubectl version >= 1.14 Set up the AWS CLI credentials for your AWS account using the AWS CLI and Terraform documentation as reference. Note that, as stated in the Terraform documentation , if your .aws/credentials are more complex you might need to set AWS_SDK_LOAD_CONFIG=1 for Terraform to work correctly: export AWS_SDK_LOAD_CONFIG = 1 Clone the Codacy chart repository and change to the directory that includes the provided Terraform configuration files: git clone https://github.com/codacy/chart.git cd chart/docs/infrastructure/EKS/ This folder includes the following infrastructure stacks: backend : Optional S3 bucket for storing the Terraform state and a DynamoDB table for state locking main : Amazon EKS cluster, including the setup of all network and node infrastructure to go from zero to a fully functional cluster You must have administration privileges on AWS to deploy (and eventually destroy) this infrastructure. The policy file aws-terraform-minimum-admin-policy.json lists the minimum privileges that are required.","title":"1. Prepare your environment"},{"location":"chart/infrastructure/eks-quickstart/#2-set-up-the-terraform-state-storage-backend","text":"The backend stores the current and historical state of your infrastructure. Although using the backend is optional, we recommend that you deploy it, particularly if you are planning to use these Terraform templates to make modifications to the cluster in the future: Initialize Terraform and deploy the infrastructure described in the backend/ directory, then follow Terraform's instructions: cd backend/ terraform init && terraform apply This creates an Amazon S3 bucket with a unique name to save the infrastructure state. Take note of the value of state_bucket_name in the output of the command. Edit the main/config.tf file and follow the instructions included in the comments to set the name of the Amazon S3 bucket created above and enable the use of the backend in those infrastructure stacks.","title":"2. Set up the Terraform state storage backend"},{"location":"chart/infrastructure/eks-quickstart/#3-create-a-vanilla-amazon-eks-cluster","text":"Create a cluster that includes all the required network and node setup: Initialize Terraform and deploy the infrastructure described in the main/ directory, then follow Terraform's instructions: cd ../main/ terraform init && terraform apply This process takes around 10 minutes. Consider if you want to tailor the cluster to your needs by customizing the cluster configuration. The cluster configuration (such as the type and number of nodes, network CIDRs, etc.) is exposed as variables in the main/variables.tf file. To customize the defaults of that file we recommend that you use a variable definitions file and set the variables in a file named terraform.tfvars in the directory main/ . The following is an example terraform.tfvars : some_key = \"a_string_value\" another_key = 3 someting_else = true Subsequently running terraform apply loads the variables in the terraform.tfvars file by default: terraform apply Set up the kubeconfig file that stores the information needed by kubectl to connect to the new cluster by default: aws eks update-kubeconfig --name codacy-cluster --alias codacy-cluster Get information about the pods in the cluster to test that the cluster was created and that kubectl can successfully connect to the cluster: kubectl get pods -A","title":"3. Create a vanilla Amazon EKS cluster"},{"location":"chart/infrastructure/eks-quickstart/#4-prepare-to-set-up-the-ingress-controller","text":"Prepare your infrastructure for the Ingress Controller setup, which is performed later during the installation process: Make sure that your network resources are correctly tagged, and create the following required tags if they are missing: Resource Type Key = Value VPC kubernetes.io/cluster/codacy-cluster = shared Subnet (public) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/elb = 1 Subnet (private) kubernetes.io/cluster/codacy-cluster = shared kubernetes.io/role/internal-elb = 1 For more information refer to the AWS documentation . Add the following chart repositories to Helm: helm repo add stable https://kubernetes-charts.storage.googleapis.com helm repo update","title":"4. Prepare to set up the Ingress Controller"},{"location":"chart/infrastructure/eks-quickstart/#5-install-the-nginx-ingress-controller","text":"Install the NGINX Ingress Controller: Download the configuration file values-nginx.yaml for the NGINX Ingress Controller. If you wish to use a private load balancer or restrict the IP range for the provisioned load balancer edit the file and enable the required annotation and/or the corresponding setting where indicated. Install the NGINX Ingress Controller: kubectl create namespace codacy helm upgrade --install --namespace codacy --version 1 .39.0 codacy-nginx-ingress stable/nginx-ingress -f values-nginx.yaml","title":"5. Install the NGINX Ingress Controller"},{"location":"chart/infrastructure/eks-quickstart/#uninstalling-the-amazon-eks-cluster","text":"Warning If you proceed beyond this point you'll permanently delete and break things. Delete the Kubernetes cluster. Run the following command in the main/ directory: terraform destroy This process takes around 10 minutes. Remove the Terraform backend. If you created the Terraform backend with the provided stack you can now safely delete it. The backend is purposely created with extra settings to prevent its accidental destruction. To destroy it cleanly you must first disable these settings by editing the file backend/state_and_lock.tf and following the instructions included in the comments. Afterwards, run the following command in the backend/ directory: terraform apply && terraform destroy Note that you first have to run terraform apply to update the settings, and only then will terraform destroy be able to destroy the backend.","title":"Uninstalling the Amazon EKS cluster"},{"location":"chart/infrastructure/microk8s-quickstart/","text":"Creating a MicroK8s cluster \u00b6 MicroK8s is a lightweight, fully conformant, single-package Kubernetes developed by Canonical. The project is publicly available on GitHub . Follow the instructions below to set up a MicroK8s instance from scratch, including all the necessary dependencies and configurations. 1. Prepare your environment \u00b6 Prepare your environment to set up the MicroK8s instance. You will need a machine running Ubuntu Server 18.04 LTS that: Is correctly provisioned with the resources described for MicroK8s in the system requirements Is able to establish a connection to the PostgreSQL instance described in the system requirements Make sure that you have Helm version 3.2.1 installed. The next steps assume that you are starting from a clean install of Ubuntu Server and require that you run commands on a local or remote command line session on the machine. 2. Installing MicroK8s \u00b6 Install MicroK8s on the machine: Make sure that the package nfs-common is installed: sudo apt update && sudo apt install nfs-common -y Install MicroK8s from the 1.15/stable channel: sudo snap install microk8s --classic --channel = 1 .15/stable sudo usermod -a -G microk8s $USER sudo su - $USER Check that MicroK8s is running: microk8s.status --wait-ready 3. Configuring MicroK8s \u00b6 Now that MicroK8s is running on the machine we can proceed to enabling the necessary addons: Configure MicroK8s to allow privileged containers: sudo mkdir -p /var/snap/microk8s/current/args sudo echo \"--allow-privileged=true\" >> /var/snap/microk8s/current/args/kube-apiserver microk8s.status --wait-ready Enable the following MicroK8s addons: microk8s.enable dns microk8s.status --wait-ready microk8s.enable storage microk8s.status --wait-ready microk8s.enable ingress microk8s.status --wait-ready Important Check the output of the commands to make sure that all the addons are enabled correctly. If by chance any of the addons fails to be enabled, re-execute the microk8s.enable command for that addon. Restart MicroK8s and its services to make sure that all configurations are working: microk8s.stop microk8s.start microk8s.status --wait-ready Export your kubeconfig so that Helm knows on which cluster to install the charts: microk8s.config > ~/.kube/config The addons are now enabled and the MicroK8s instance bootstrapped. However, we must wait for some MicroK8s pods to be ready, as failing to do so can result in the pods entering a CrashLoopBackoff state: microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = kube-dns microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = hostpath-provisioner # If the following command fails, you probably installed the wrong MicroK8s version microk8s.kubectl wait --all-namespaces --for = condition = Ready pod -l name = nginx-ingress-microk8s Verify that the MicroK8s configuration was successful: microk8s.status --wait-ready The output of the command should be the following: microk8s is running addons: knative: disabled jaeger: disabled fluentd: disabled gpu: disabled cilium: disabled storage: enabled registry: disabled rbac: disabled ingress: enabled dns: enabled metrics-server: disabled linkerd: disabled prometheus: disabled istio: disabled dashboard: disabled After these steps you have ensured that DNS, HTTP, and NGINX Ingress are enabled and working properly inside the MicroK8s instance. Notes on installing Codacy \u00b6 You can now follow the generic Codacy installation instructions but please note the following: You must execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, we suggest that you create an alias so that you can run the commands directly as provided on the instructions: alias kubectl = microk8s.kubectl When running the helm upgrade command that installs the Codacy chart, you will be instructed to also use the file values-microk8s.yaml that downsizes some component limits, making it easier to fit Codacy in the lightweight MicroK8s solution.","title":"Creating a MicroK8s cluster"},{"location":"chart/infrastructure/microk8s-quickstart/#creating-a-microk8s-cluster","text":"MicroK8s is a lightweight, fully conformant, single-package Kubernetes developed by Canonical. The project is publicly available on GitHub . Follow the instructions below to set up a MicroK8s instance from scratch, including all the necessary dependencies and configurations.","title":"Creating a MicroK8s cluster"},{"location":"chart/infrastructure/microk8s-quickstart/#1-prepare-your-environment","text":"Prepare your environment to set up the MicroK8s instance. You will need a machine running Ubuntu Server 18.04 LTS that: Is correctly provisioned with the resources described for MicroK8s in the system requirements Is able to establish a connection to the PostgreSQL instance described in the system requirements Make sure that you have Helm version 3.2.1 installed. The next steps assume that you are starting from a clean install of Ubuntu Server and require that you run commands on a local or remote command line session on the machine.","title":"1. Prepare your environment"},{"location":"chart/infrastructure/microk8s-quickstart/#2-installing-microk8s","text":"Install MicroK8s on the machine: Make sure that the package nfs-common is installed: sudo apt update && sudo apt install nfs-common -y Install MicroK8s from the 1.15/stable channel: sudo snap install microk8s --classic --channel = 1 .15/stable sudo usermod -a -G microk8s $USER sudo su - $USER Check that MicroK8s is running: microk8s.status --wait-ready","title":"2. Installing MicroK8s"},{"location":"chart/infrastructure/microk8s-quickstart/#3-configuring-microk8s","text":"Now that MicroK8s is running on the machine we can proceed to enabling the necessary addons: Configure MicroK8s to allow privileged containers: sudo mkdir -p /var/snap/microk8s/current/args sudo echo \"--allow-privileged=true\" >> /var/snap/microk8s/current/args/kube-apiserver microk8s.status --wait-ready Enable the following MicroK8s addons: microk8s.enable dns microk8s.status --wait-ready microk8s.enable storage microk8s.status --wait-ready microk8s.enable ingress microk8s.status --wait-ready Important Check the output of the commands to make sure that all the addons are enabled correctly. If by chance any of the addons fails to be enabled, re-execute the microk8s.enable command for that addon. Restart MicroK8s and its services to make sure that all configurations are working: microk8s.stop microk8s.start microk8s.status --wait-ready Export your kubeconfig so that Helm knows on which cluster to install the charts: microk8s.config > ~/.kube/config The addons are now enabled and the MicroK8s instance bootstrapped. However, we must wait for some MicroK8s pods to be ready, as failing to do so can result in the pods entering a CrashLoopBackoff state: microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = kube-dns microk8s.kubectl wait -n kube-system --for = condition = Ready pod -l k8s-app = hostpath-provisioner # If the following command fails, you probably installed the wrong MicroK8s version microk8s.kubectl wait --all-namespaces --for = condition = Ready pod -l name = nginx-ingress-microk8s Verify that the MicroK8s configuration was successful: microk8s.status --wait-ready The output of the command should be the following: microk8s is running addons: knative: disabled jaeger: disabled fluentd: disabled gpu: disabled cilium: disabled storage: enabled registry: disabled rbac: disabled ingress: enabled dns: enabled metrics-server: disabled linkerd: disabled prometheus: disabled istio: disabled dashboard: disabled After these steps you have ensured that DNS, HTTP, and NGINX Ingress are enabled and working properly inside the MicroK8s instance.","title":"3. Configuring MicroK8s"},{"location":"chart/infrastructure/microk8s-quickstart/#notes-on-installing-codacy","text":"You can now follow the generic Codacy installation instructions but please note the following: You must execute all kubectl commands as microk8s.kubectl commands instead. To simplify this, we suggest that you create an alias so that you can run the commands directly as provided on the instructions: alias kubectl = microk8s.kubectl When running the helm upgrade command that installs the Codacy chart, you will be instructed to also use the file values-microk8s.yaml that downsizes some component limits, making it easier to fit Codacy in the lightweight MicroK8s solution.","title":"Notes on installing Codacy"},{"location":"chart/maintenance/database/","text":"Database migration guide \u00b6 Migrating databases between pods is a straightforward process with 3 steps: Dump the databases to a dump file. Apply the dump file. Delete the dump file. You will have to dump all the following databases: accounts analysis filestore jobs metrics results Requirements \u00b6 The following operations must be executed by a user which has elevated access ( SUPERUSER ) in the Postgres databases. Dumping your current data out of a running Postgres \u00b6 You will need to know the following: $HOSTNAME - the hostname where the database is located. $DB_USER - the username with privileged access to the database that will perform the dump. $DB - the database that you would like to export. $DB_PASSWORD - the database password. pg_dump \u00b6 The following command lets you extract a given database into a dump file: PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump This will dump the file with the .dump extension into the /tmp folder. For more information and additional options, please check the official documentation. pg_restore \u00b6 To restore a database, you can run a pg_restore command to consume the dump file and replicate the data onto Postgres: PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -j 8 -d $db -n public --clean $db .dump With the custom format from pg_dump (by using -Fc ) we can now invoke pg_restore with multiple parallel jobs. This should make the restoration of the databases quicker, depending on which value you provide for the number of parallel jobs to execute. We provide a value of 8 parallel jobs in the example above ( -j 8 ). NOTE: If you run into any problems while restoring, make sure that you have the database created in that postgres instance (e.g. before restoring the jobs database the postgres instance should have an empty database called jobs created there) For more information and additional options, please check the official documentation. Sample script \u00b6 Assuming you have the same $DB_USER and $DB_PASSWORD , and that you want to migrate all the databases from the same hostname to the same destination hostname, you could easily migrate your databases with the following sample script: SRC_HOSTNAME = $1 SRC_HOSTPORT = $2 DEST_HOSTNAME = $3 DEST_HOSTPORT = $4 DB_USER = $5 DB_PASSWORD = $6 declare -a dbs =( accounts analysis filestore jobs metrics results ) for db in ${ dbs [@] } do PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -d $db -n public --clean $db .dump done You could simply invoke it with: migrateDBs.sh postgres\u2013instance1.us-east-1.rds.amazonaws.com 25060 postgres\u2013instance1.eu-west-1.rds.amazonaws.com 25060 super_user secret_password","title":"Database migration guide"},{"location":"chart/maintenance/database/#database-migration-guide","text":"Migrating databases between pods is a straightforward process with 3 steps: Dump the databases to a dump file. Apply the dump file. Delete the dump file. You will have to dump all the following databases: accounts analysis filestore jobs metrics results","title":"Database migration guide"},{"location":"chart/maintenance/database/#requirements","text":"The following operations must be executed by a user which has elevated access ( SUPERUSER ) in the Postgres databases.","title":"Requirements"},{"location":"chart/maintenance/database/#dumping-your-current-data-out-of-a-running-postgres","text":"You will need to know the following: $HOSTNAME - the hostname where the database is located. $DB_USER - the username with privileged access to the database that will perform the dump. $DB - the database that you would like to export. $DB_PASSWORD - the database password.","title":"Dumping your current data out of a running Postgres"},{"location":"chart/maintenance/database/#pg_dump","text":"The following command lets you extract a given database into a dump file: PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump This will dump the file with the .dump extension into the /tmp folder. For more information and additional options, please check the official documentation.","title":"pg_dump"},{"location":"chart/maintenance/database/#pg_restore","text":"To restore a database, you can run a pg_restore command to consume the dump file and replicate the data onto Postgres: PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -j 8 -d $db -n public --clean $db .dump With the custom format from pg_dump (by using -Fc ) we can now invoke pg_restore with multiple parallel jobs. This should make the restoration of the databases quicker, depending on which value you provide for the number of parallel jobs to execute. We provide a value of 8 parallel jobs in the example above ( -j 8 ). NOTE: If you run into any problems while restoring, make sure that you have the database created in that postgres instance (e.g. before restoring the jobs database the postgres instance should have an empty database called jobs created there) For more information and additional options, please check the official documentation.","title":"pg_restore"},{"location":"chart/maintenance/database/#sample-script","text":"Assuming you have the same $DB_USER and $DB_PASSWORD , and that you want to migrate all the databases from the same hostname to the same destination hostname, you could easily migrate your databases with the following sample script: SRC_HOSTNAME = $1 SRC_HOSTPORT = $2 DEST_HOSTNAME = $3 DEST_HOSTPORT = $4 DB_USER = $5 DB_PASSWORD = $6 declare -a dbs =( accounts analysis filestore jobs metrics results ) for db in ${ dbs [@] } do PGPASSWORD = $DB_PASSWORD pg_dump -h $SRC_HOSTNAME -p $SRC_HOSTPORT -U $DB_USER --clean -Fc $db > /tmp/ $db .dump PGPASSWORD = $DB_PASSWORD pg_restore -h $DEST_HOSTNAME -p $DEST_HOSTPORT -U $DB_USER -d $db -n public --clean $db .dump done You could simply invoke it with: migrateDBs.sh postgres\u2013instance1.us-east-1.rds.amazonaws.com 25060 postgres\u2013instance1.eu-west-1.rds.amazonaws.com 25060 super_user secret_password","title":"Sample script"},{"location":"chart/maintenance/license/","text":"Updating your Codacy license \u00b6 Some changes to your Codacy plan require that you update your Codacy license with a new one provided by a Codacy representative: Edit the value of codacy-api.config.license in the values-production.yaml file that you used to install Codacy: codacy-api : config : license : <--- insert your Codacy license here ---> Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Updating your Codacy license"},{"location":"chart/maintenance/license/#updating-your-codacy-license","text":"Some changes to your Codacy plan require that you update your Codacy license with a new one provided by a Codacy representative: Edit the value of codacy-api.config.license in the values-production.yaml file that you used to install Codacy: codacy-api : config : license : <--- insert your Codacy license here ---> Apply the new configuration by performing a Helm upgrade. To do so execute the command used to install Codacy : Important If you are using MicroK8s you must use the file values-microk8s.yaml together with the file values-production.yaml . To do this, uncomment the last line before running the helm upgrade command below. helm upgrade ( ...options used to install Codacy... ) \\ --version 2 .0.0 \\ --values values-production.yaml \\ # --values values-microk8s.yaml","title":"Updating your Codacy license"},{"location":"chart/maintenance/uninstall/","text":"Uninstalling Codacy \u00b6 To ensure a clean removal you should uninstall Codacy before destroying the cluster. To do so run: helm -n codacy uninstall codacy kubectl -n codacy delete --all pod & kubectl -n codacy delete --all pvc & kubectl -n codacy delete --all job & sleep 5 kubectl -n codacy patch pvc -p '{\"metadata\":{\"finalizers\":null}}' $( kubectl -n codacy get pvc -o jsonpath = '{.items[*].metadata.name}' ) sleep 5 kubectl -n codacy delete pod $( kubectl -n codacy get pod -o jsonpath = '{.items[*].metadata.name}' ) --force --grace-period = 0 kubectl -n codacy get pod & kubectl -n codacy get pvc & kubectl -n codacy get job & Note that the deletion of pvc s in the above command has to run in the background due to a cyclic dependency in one of the components. If you are unsure of the effects of these commands please run each of the bash subcommands and validate their output. echo \"PVCs to delete:\" kubectl get pvc -n codacy -o jsonpath = '{.items[*].metadata.name}' echo \"PODS to delete:\" kubectl get pods -n codacy -o jsonpath = '{.items[*].metadata.name}'","title":"Uninstalling Codacy"},{"location":"chart/maintenance/uninstall/#uninstalling-codacy","text":"To ensure a clean removal you should uninstall Codacy before destroying the cluster. To do so run: helm -n codacy uninstall codacy kubectl -n codacy delete --all pod & kubectl -n codacy delete --all pvc & kubectl -n codacy delete --all job & sleep 5 kubectl -n codacy patch pvc -p '{\"metadata\":{\"finalizers\":null}}' $( kubectl -n codacy get pvc -o jsonpath = '{.items[*].metadata.name}' ) sleep 5 kubectl -n codacy delete pod $( kubectl -n codacy get pod -o jsonpath = '{.items[*].metadata.name}' ) --force --grace-period = 0 kubectl -n codacy get pod & kubectl -n codacy get pvc & kubectl -n codacy get job & Note that the deletion of pvc s in the above command has to run in the background due to a cyclic dependency in one of the components. If you are unsure of the effects of these commands please run each of the bash subcommands and validate their output. echo \"PVCs to delete:\" kubectl get pvc -n codacy -o jsonpath = '{.items[*].metadata.name}' echo \"PODS to delete:\" kubectl get pods -n codacy -o jsonpath = '{.items[*].metadata.name}'","title":"Uninstalling Codacy"},{"location":"chart/maintenance/upgrade/","text":"Upgrading Codacy \u00b6 To upgrade Codacy to the latest stable version: Check the release notes for all Codacy Self-hosted versions between your current version and the most recent version for breaking changes and follow the instructions provided carefully. Warning Failing to follow the steps to deal with breaking changes can cause the upgrade to fail or cause problems while Codacy is running. Store all your currently defined configuration values in a file: helm get values codacy \\ --namespace codacy \\ --output yaml > codacy.yaml Note If you installed Codacy on a Kubernetes namespace different from codacy , make sure that you adjust the namespace when executing the commands in this page. Review the values stored in the file codacy.yaml , making any changes if necessary. Perform the upgrade using the values stored in the file: helm upgrade codacy codacy-stable/codacy \\ --namespace codacy \\ --values codacy.yaml","title":"Upgrading Codacy"},{"location":"chart/maintenance/upgrade/#upgrading-codacy","text":"To upgrade Codacy to the latest stable version: Check the release notes for all Codacy Self-hosted versions between your current version and the most recent version for breaking changes and follow the instructions provided carefully. Warning Failing to follow the steps to deal with breaking changes can cause the upgrade to fail or cause problems while Codacy is running. Store all your currently defined configuration values in a file: helm get values codacy \\ --namespace codacy \\ --output yaml > codacy.yaml Note If you installed Codacy on a Kubernetes namespace different from codacy , make sure that you adjust the namespace when executing the commands in this page. Review the values stored in the file codacy.yaml , making any changes if necessary. Perform the upgrade using the values stored in the file: helm upgrade codacy codacy-stable/codacy \\ --namespace codacy \\ --values codacy.yaml","title":"Upgrading Codacy"},{"location":"chart/troubleshoot/k8s-cheatsheet/","text":"Kubernetes cheatsheet \u00b6 How to install a custom Codacy version \u00b6 Install \u00b6 sudo git clone git://github.com/codacy/chart -b <YOUR-BRANCH> helm dep build ./chart/codacy helm upgrade --install codacy ./chart/codacy/ --namespace codacy --atomic --timeout = 300 --values ./<YOUR-VALUES-FILE> Upgrade \u00b6 ( cd chart ; sudo git fetch --all --prune --tags ; sudo git reset --hard origin/<YOUR-BRANCH> ; ) helm dep build ./chart/codacy helm upgrade --install codacy ./chart/codacy/ --namespace codacy --atomic --timeout = 300 --values ./<YOUR-VALUES-FILE> Debugging \u00b6 Important Always check the pods and deployment versions in the namespace to make sure you are not debugging an issue in a version that is not the one you would expect Events \u00b6 Events are a great way to understand what is going on under the hood in a Kubernetes cluster. By looking at them you can see if probes are failing, and other important signals from your cluster. Get events for the whole namespace: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp Get error events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Error Get warning events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Warning Get events from a specific pod: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector involvedObject.name = <POD-NAME> Helm \u00b6 Check all the previous releases in your namespace: helm -n codacy history codacy Rollback to a specific revision: helm -n codacy rollback codacy <REVISION> Edit configmap \u00b6 kubectl get configmaps and kubectl edit configmap <configmap-name> Restart deployment of daemonset \u00b6 daemonsets \u00b6 kubectl get daemonsets and kubectl rollout restart daemonset/<daemonset-name> deployment \u00b6 kubectl get deployment and kubectl rollout restart deployment/<deployment-name> and kubectl rollout status deployment/<deployment-name> -w Read logs \u00b6 daemonset with multiple containers \u00b6 kubectl logs daemonset/<daemonset-name> <container-name> -f service \u00b6 kubectl get svc and kubectl logs -l $( kubectl get svc/<service-name> -o = json | jq \".spec.selector\" | jq -r 'to_entries|map(\"\\(.key)=\\(.value|tostring)\")|.[]' | sed -e 'H;${x;s/\\n/,/g;s/^,//;p;};d' ) -f Open shell inside container \u00b6 kubectl exec -it daemonset/<daemonset-name> -c <container-name> sh or kubectl exec -it deployment/<deployment-name> sh MicroK8s \u00b6 Session Manager SSH \u00b6 When using AWS Session Manager, to connect to the instance where you installed microk8s, since the CLI is very limited you will benefit from using these aliases: alias kubectl = 'sudo microk8s.kubectl -n <namespace-name>' alias helm = 'sudo helm'","title":"Kubernetes cheatsheet"},{"location":"chart/troubleshoot/k8s-cheatsheet/#kubernetes-cheatsheet","text":"","title":"Kubernetes cheatsheet"},{"location":"chart/troubleshoot/k8s-cheatsheet/#how-to-install-a-custom-codacy-version","text":"","title":"How to install a custom Codacy version"},{"location":"chart/troubleshoot/k8s-cheatsheet/#install","text":"sudo git clone git://github.com/codacy/chart -b <YOUR-BRANCH> helm dep build ./chart/codacy helm upgrade --install codacy ./chart/codacy/ --namespace codacy --atomic --timeout = 300 --values ./<YOUR-VALUES-FILE>","title":"Install"},{"location":"chart/troubleshoot/k8s-cheatsheet/#upgrade","text":"( cd chart ; sudo git fetch --all --prune --tags ; sudo git reset --hard origin/<YOUR-BRANCH> ; ) helm dep build ./chart/codacy helm upgrade --install codacy ./chart/codacy/ --namespace codacy --atomic --timeout = 300 --values ./<YOUR-VALUES-FILE>","title":"Upgrade"},{"location":"chart/troubleshoot/k8s-cheatsheet/#debugging","text":"Important Always check the pods and deployment versions in the namespace to make sure you are not debugging an issue in a version that is not the one you would expect","title":"Debugging"},{"location":"chart/troubleshoot/k8s-cheatsheet/#events","text":"Events are a great way to understand what is going on under the hood in a Kubernetes cluster. By looking at them you can see if probes are failing, and other important signals from your cluster. Get events for the whole namespace: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp Get error events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Error Get warning events: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector type = Warning Get events from a specific pod: kubectl -n codacy get events --sort-by = .metadata.creationTimestamp --field-selector involvedObject.name = <POD-NAME>","title":"Events"},{"location":"chart/troubleshoot/k8s-cheatsheet/#helm","text":"Check all the previous releases in your namespace: helm -n codacy history codacy Rollback to a specific revision: helm -n codacy rollback codacy <REVISION>","title":"Helm"},{"location":"chart/troubleshoot/k8s-cheatsheet/#edit-configmap","text":"kubectl get configmaps and kubectl edit configmap <configmap-name>","title":"Edit configmap"},{"location":"chart/troubleshoot/k8s-cheatsheet/#restart-deployment-of-daemonset","text":"","title":"Restart deployment of daemonset"},{"location":"chart/troubleshoot/k8s-cheatsheet/#daemonsets","text":"kubectl get daemonsets and kubectl rollout restart daemonset/<daemonset-name>","title":"daemonsets"},{"location":"chart/troubleshoot/k8s-cheatsheet/#deployment","text":"kubectl get deployment and kubectl rollout restart deployment/<deployment-name> and kubectl rollout status deployment/<deployment-name> -w","title":"deployment"},{"location":"chart/troubleshoot/k8s-cheatsheet/#read-logs","text":"","title":"Read logs"},{"location":"chart/troubleshoot/k8s-cheatsheet/#daemonset-with-multiple-containers","text":"kubectl logs daemonset/<daemonset-name> <container-name> -f","title":"daemonset with multiple containers"},{"location":"chart/troubleshoot/k8s-cheatsheet/#service","text":"kubectl get svc and kubectl logs -l $( kubectl get svc/<service-name> -o = json | jq \".spec.selector\" | jq -r 'to_entries|map(\"\\(.key)=\\(.value|tostring)\")|.[]' | sed -e 'H;${x;s/\\n/,/g;s/^,//;p;};d' ) -f","title":"service"},{"location":"chart/troubleshoot/k8s-cheatsheet/#open-shell-inside-container","text":"kubectl exec -it daemonset/<daemonset-name> -c <container-name> sh or kubectl exec -it deployment/<deployment-name> sh","title":"Open shell inside container"},{"location":"chart/troubleshoot/k8s-cheatsheet/#microk8s","text":"","title":"MicroK8s"},{"location":"chart/troubleshoot/k8s-cheatsheet/#session-manager-ssh","text":"When using AWS Session Manager, to connect to the instance where you installed microk8s, since the CLI is very limited you will benefit from using these aliases: alias kubectl = 'sudo microk8s.kubectl -n <namespace-name>' alias helm = 'sudo helm'","title":"Session Manager SSH"},{"location":"chart/troubleshoot/logs-collect/","text":"Collecting logs for Support \u00b6 To help troubleshoot issues, obtain the logs from your Codacy instance and send them to Codacy's Support: Download the logs of the last 7 days as an archive file with the name codacy_logs_<timestamp>.zip by running the following command locally, replacing <namespace> with the namespace in which Codacy was installed: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> To reduce the size of the compressed archive file, you should retrieve logs for a smaller number of days by replacing <days> with a number between 1 and 7: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> -d <days> You can also download the script extract-codacy-logs.sh to run it manually. Send the compressed logs to Codacy's support team at support@codacy.com for analysis. If the file is too big, please upload the file to either a cloud storage service such as Google Drive or to a file transfer service such as WeTransfer and send us the link to the file instead.","title":"Collecting logs for Support"},{"location":"chart/troubleshoot/logs-collect/#collecting-logs-for-support","text":"To help troubleshoot issues, obtain the logs from your Codacy instance and send them to Codacy's Support: Download the logs of the last 7 days as an archive file with the name codacy_logs_<timestamp>.zip by running the following command locally, replacing <namespace> with the namespace in which Codacy was installed: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> To reduce the size of the compressed archive file, you should retrieve logs for a smaller number of days by replacing <days> with a number between 1 and 7: bash < ( curl -fsSL https://raw.githubusercontent.com/codacy/chart/master/docs/troubleshoot/extract-codacy-logs.sh ) \\ -n <namespace> -d <days> You can also download the script extract-codacy-logs.sh to run it manually. Send the compressed logs to Codacy's support team at support@codacy.com for analysis. If the file is too big, please upload the file to either a cloud storage service such as Google Drive or to a file transfer service such as WeTransfer and send us the link to the file instead.","title":"Collecting logs for Support"},{"location":"chart/troubleshoot/troubleshoot/","text":"Troubleshooting Codacy \u00b6 This page includes information to help you troubleshoot issues that you may come across while installing, configuring, and operating Codacy. If the information provided on this page is not enough to solve your issue, contact support@codacy.com providing: The description of the issue All the information that you were able to obtain while following these troubleshooting instructions The collected logs of your Codacy instance Git provider integrations \u00b6 The following sections help you troubleshoot the integration of Codacy with your Git provider. GitHub Cloud and GitHub Enterprise authentication \u00b6 404 error \u00b6 While trying to authenticate on GitHub you get the following error message: This might mean that there is a mismatch in the Client ID that Codacy is using to authenticate on GitHub. To solve this issue: Make sure that the value of clientId in your values-production.yaml file is the same as the Client ID of the GitHub App that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for GitHub Cloud or GitHub Enterprise If the error persists: Take note of the parameter client_id in the URL of the GitHub error page (for example, Iv1.0000000000000000 ) Check if the value of the parameter matches the value of the Client ID of your GitHub App GitLab Cloud and GitLab Enterprise authentication \u00b6 Invalid redirect URI \u00b6 While trying to authenticate on GitLab you get the following error message: This might mean that the redirect URIs are not correct in the GitLab application that Codacy is using to authenticate on GitLab. To solve this issue: Open the GitLab application that you created on GitLab Cloud or GitLab Enterprise Make sure that all the redirect URIs have the correct protocol for the Codacy instance endpoints, either http:// or https:// Make sure that all the redirect URIs have the full path with the correct case, since the field is case-sensitive If the error persists: Take note of the parameter redirect_uri in the URL of the GitLab error page (for example, https%3A%2F%2Fcodacy.example.com%2Flogin%2FGitLab or https%3A%2F%2Fcodacy.example.com%2Flogin%2FGitLabEnterprise ) Decode the value of the parameter using a tool such as urldecoder.com (for example, https://codacy.example.com/login/GitLab or https://codacy.example.com/login/GitLabEnterprise ) Check if the decoded value matches one of the redirect URIs of your GitLab application Unknown client \u00b6 While trying to authenticate on GitLab you get the following error message: This might mean that there is a mismatch in the Application ID that Codacy is using to authenticate on GitLab. To solve this issue: Make sure that the value of clientId in your values-production.yaml file is the same as the Application ID of the GitLab Cloud or GitLab Enterprise application that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for GitLab Cloud or GitLab Enterprise If the error persists: Take note of the parameter client_id in the URL of the GitLab error page (for example, cca35a2a1f9b9b516ac927d82947bd5149b0e57e922c9e5564ac092ea16a3ccd ) Check if the value of the parameter matches the value of the Application ID of your GitLab application Bitbucket Cloud authentication \u00b6 Invalid client_id \u00b6 While trying to authenticate on Bitbucket Cloud you get the following error message: This might mean that there is a mismatch in the OAuth consumer Client ID that Codacy is using to authenticate on Bitbucket Cloud. To solve this issue: Make sure that the value of key in your values-production.yaml file is the same as the Key of the Bitbucket OAuth consumer that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for Bitbucket Cloud If the error persists: Take note of the parameter client_id in the URL of the Bitbucket Cloud error page (for example, r8QJDkkxj8unYfg4Bd ) Check if the value of the parameter matches the value of the Client ID of your Bitbucket OAuth consumer Codacy configuration \u00b6 The following sections help you troubleshoot the Codacy configuration. Accessing the RabbitMQ dashboard \u00b6 We use RabbitMQ for the internal message queue between our components. If you need to access the RabbitMQ dashboard: Create a port-forward from the rabbitmq pod to your local machine, replacing <namespace> with the namespace in which Codacy was installed: kubectl port-forward codacy-rabbitmq-ha-0 15672 :15672 --namespace = <namespace> Important If you are using MicroK8s use microk8s.kubectl instead of kubectl . Access the RabbitMQ dashboard on the address localhost:15672 , and log in with the configured RabbitMQ credentials. The default RabbitMQ credentials are the following: Username: rabbitmq-codacy Password: rabbitmq-codacy","title":"Troubleshooting Codacy"},{"location":"chart/troubleshoot/troubleshoot/#troubleshooting-codacy","text":"This page includes information to help you troubleshoot issues that you may come across while installing, configuring, and operating Codacy. If the information provided on this page is not enough to solve your issue, contact support@codacy.com providing: The description of the issue All the information that you were able to obtain while following these troubleshooting instructions The collected logs of your Codacy instance","title":"Troubleshooting Codacy"},{"location":"chart/troubleshoot/troubleshoot/#git-provider-integrations","text":"The following sections help you troubleshoot the integration of Codacy with your Git provider.","title":"Git provider integrations"},{"location":"chart/troubleshoot/troubleshoot/#github","text":"","title":"GitHub Cloud and GitHub Enterprise authentication"},{"location":"chart/troubleshoot/troubleshoot/#404-error","text":"While trying to authenticate on GitHub you get the following error message: This might mean that there is a mismatch in the Client ID that Codacy is using to authenticate on GitHub. To solve this issue: Make sure that the value of clientId in your values-production.yaml file is the same as the Client ID of the GitHub App that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for GitHub Cloud or GitHub Enterprise If the error persists: Take note of the parameter client_id in the URL of the GitHub error page (for example, Iv1.0000000000000000 ) Check if the value of the parameter matches the value of the Client ID of your GitHub App","title":"404 error"},{"location":"chart/troubleshoot/troubleshoot/#gitlab","text":"","title":"GitLab Cloud and GitLab Enterprise authentication"},{"location":"chart/troubleshoot/troubleshoot/#invalid-redirect-uri","text":"While trying to authenticate on GitLab you get the following error message: This might mean that the redirect URIs are not correct in the GitLab application that Codacy is using to authenticate on GitLab. To solve this issue: Open the GitLab application that you created on GitLab Cloud or GitLab Enterprise Make sure that all the redirect URIs have the correct protocol for the Codacy instance endpoints, either http:// or https:// Make sure that all the redirect URIs have the full path with the correct case, since the field is case-sensitive If the error persists: Take note of the parameter redirect_uri in the URL of the GitLab error page (for example, https%3A%2F%2Fcodacy.example.com%2Flogin%2FGitLab or https%3A%2F%2Fcodacy.example.com%2Flogin%2FGitLabEnterprise ) Decode the value of the parameter using a tool such as urldecoder.com (for example, https://codacy.example.com/login/GitLab or https://codacy.example.com/login/GitLabEnterprise ) Check if the decoded value matches one of the redirect URIs of your GitLab application","title":"Invalid redirect URI"},{"location":"chart/troubleshoot/troubleshoot/#unknown-client","text":"While trying to authenticate on GitLab you get the following error message: This might mean that there is a mismatch in the Application ID that Codacy is using to authenticate on GitLab. To solve this issue: Make sure that the value of clientId in your values-production.yaml file is the same as the Application ID of the GitLab Cloud or GitLab Enterprise application that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for GitLab Cloud or GitLab Enterprise If the error persists: Take note of the parameter client_id in the URL of the GitLab error page (for example, cca35a2a1f9b9b516ac927d82947bd5149b0e57e922c9e5564ac092ea16a3ccd ) Check if the value of the parameter matches the value of the Application ID of your GitLab application","title":"Unknown client"},{"location":"chart/troubleshoot/troubleshoot/#bitbucket-cloud","text":"","title":"Bitbucket Cloud authentication"},{"location":"chart/troubleshoot/troubleshoot/#invalid-client_id","text":"While trying to authenticate on Bitbucket Cloud you get the following error message: This might mean that there is a mismatch in the OAuth consumer Client ID that Codacy is using to authenticate on Bitbucket Cloud. To solve this issue: Make sure that the value of key in your values-production.yaml file is the same as the Key of the Bitbucket OAuth consumer that you created If the values were different, update your configuration and re-execute the helm upgrade command as described for Bitbucket Cloud If the error persists: Take note of the parameter client_id in the URL of the Bitbucket Cloud error page (for example, r8QJDkkxj8unYfg4Bd ) Check if the value of the parameter matches the value of the Client ID of your Bitbucket OAuth consumer","title":"Invalid client_id"},{"location":"chart/troubleshoot/troubleshoot/#codacy-configuration","text":"The following sections help you troubleshoot the Codacy configuration.","title":"Codacy configuration"},{"location":"chart/troubleshoot/troubleshoot/#accessing-the-rabbitmq-dashboard","text":"We use RabbitMQ for the internal message queue between our components. If you need to access the RabbitMQ dashboard: Create a port-forward from the rabbitmq pod to your local machine, replacing <namespace> with the namespace in which Codacy was installed: kubectl port-forward codacy-rabbitmq-ha-0 15672 :15672 --namespace = <namespace> Important If you are using MicroK8s use microk8s.kubectl instead of kubectl . Access the RabbitMQ dashboard on the address localhost:15672 , and log in with the configured RabbitMQ credentials. The default RabbitMQ credentials are the following: Username: rabbitmq-codacy Password: rabbitmq-codacy","title":"Accessing the RabbitMQ dashboard"},{"location":"coverage-reporter/","text":"Getting started \u00b6 Authentication \u00b6 Find and copy a Project API Token . You can find the token within a repository Settings \u2192 Integrations \u2192 Project API . Warning You should keep your API token well protected, as it grants owner permissions to your projects. Set the Project API Token in your terminal, replacing %Project_Token% with your token: export CODACY_PROJECT_TOKEN = %Project_Token% To upload coverage to a self-hosted installation of Codacy you also need to set your installation URL, replacing %Codacy_instance_URL% with your URL: export CODACY_API_BASE_URL = %Codacy_instance_URL%:16006 Hint If you'd like to automate this process for multiple repositories you can authenticate using an Account API Token . Running Codacy Coverage Reporter \u00b6 The easiest way to get starting is by using the self-contained script that downloads and runs the reporter: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) Choose a specific version \u00b6 The script uses by default the latest version. If you want to specify a coverage reporter version, use CODACY_REPORTER_VERSION environment variable. You can find all versions in the Releases tab . Manual Installation \u00b6 Using CircleCI? Check out the codacy/coverage-reporter orb . Using GitHub Actions? Check out the codacy/coverage-coverage-reporter action . If the automated script does not cover your use case, check the manual installation methods . Supported formats \u00b6 The following table contains the formats supported and which coverage tools generate them: Language Coverage tools (examples) Formats Filename Java JaCoCo Cobertura JaCoCo Cobertura jacoco*.xml cobertura.xml Scala sbt-jacoco scoverage JaCoCo Cobertura jacoco*.xml cobertura.xml Javascript Istanbul Poncho Mocha + Blanket.js LCOV lcov.info, lcov.dat, *.lcov Python Coverage.py Cobertura cobertura.xml PHP PHPUnit PHPUnit XML (version <= 4) Clover coverage-xml/index.xml clover.xml Ruby SimpleCov Cobertura LCOV cobertura.xml lcov.info, lcov.dat, *.lcov C# OpenCover DotCover CLI OpenCover DotCover-DetailedXML opencover.xml dotcover.xml Swift/Objective-C XCode Coverage Check here information about reports for this language The reporter assumes the coverage reports filename follow the name convention. Otherwise, you must define the report's location with the flag -r . Note If your coverage reports are in a different format you can use a format converter, such as ReportGenerator , to generate a supported format. Unsuported Languages \u00b6 If your language is not in the list of supported languages, you can still send coverage to Codacy. You can do it by providing the correct --language name and then add the --force-language flag. Commit SHA hash detection \u00b6 Codacy automatically detects a commit SHA hash from CI workflows, the git repository or command line arguments. See all supported environments . Multiple coverage reports for the same language \u00b6 You can upload multiple reports if your test suite is split in different modules or ran in parallel. See how to upload multiple coverage reports . Other commands \u00b6 For a complete list of commands and options: --help","title":"Getting started"},{"location":"coverage-reporter/#getting-started","text":"","title":"Getting started"},{"location":"coverage-reporter/#authentication","text":"Find and copy a Project API Token . You can find the token within a repository Settings \u2192 Integrations \u2192 Project API . Warning You should keep your API token well protected, as it grants owner permissions to your projects. Set the Project API Token in your terminal, replacing %Project_Token% with your token: export CODACY_PROJECT_TOKEN = %Project_Token% To upload coverage to a self-hosted installation of Codacy you also need to set your installation URL, replacing %Codacy_instance_URL% with your URL: export CODACY_API_BASE_URL = %Codacy_instance_URL%:16006 Hint If you'd like to automate this process for multiple repositories you can authenticate using an Account API Token .","title":"Authentication"},{"location":"coverage-reporter/#running-codacy-coverage-reporter","text":"The easiest way to get starting is by using the self-contained script that downloads and runs the reporter: bash < ( curl -Ls https://coverage.codacy.com/get.sh )","title":"Running Codacy Coverage Reporter"},{"location":"coverage-reporter/#choose-a-specific-version","text":"The script uses by default the latest version. If you want to specify a coverage reporter version, use CODACY_REPORTER_VERSION environment variable. You can find all versions in the Releases tab .","title":"Choose a specific version"},{"location":"coverage-reporter/#manual-installation","text":"Using CircleCI? Check out the codacy/coverage-reporter orb . Using GitHub Actions? Check out the codacy/coverage-coverage-reporter action . If the automated script does not cover your use case, check the manual installation methods .","title":"Manual Installation"},{"location":"coverage-reporter/#supported-formats","text":"The following table contains the formats supported and which coverage tools generate them: Language Coverage tools (examples) Formats Filename Java JaCoCo Cobertura JaCoCo Cobertura jacoco*.xml cobertura.xml Scala sbt-jacoco scoverage JaCoCo Cobertura jacoco*.xml cobertura.xml Javascript Istanbul Poncho Mocha + Blanket.js LCOV lcov.info, lcov.dat, *.lcov Python Coverage.py Cobertura cobertura.xml PHP PHPUnit PHPUnit XML (version <= 4) Clover coverage-xml/index.xml clover.xml Ruby SimpleCov Cobertura LCOV cobertura.xml lcov.info, lcov.dat, *.lcov C# OpenCover DotCover CLI OpenCover DotCover-DetailedXML opencover.xml dotcover.xml Swift/Objective-C XCode Coverage Check here information about reports for this language The reporter assumes the coverage reports filename follow the name convention. Otherwise, you must define the report's location with the flag -r . Note If your coverage reports are in a different format you can use a format converter, such as ReportGenerator , to generate a supported format.","title":"Supported formats"},{"location":"coverage-reporter/#unsuported-languages","text":"If your language is not in the list of supported languages, you can still send coverage to Codacy. You can do it by providing the correct --language name and then add the --force-language flag.","title":"Unsuported Languages"},{"location":"coverage-reporter/#commit-sha-hash-detection","text":"Codacy automatically detects a commit SHA hash from CI workflows, the git repository or command line arguments. See all supported environments .","title":"Commit SHA hash detection"},{"location":"coverage-reporter/#multiple-coverage-reports-for-the-same-language","text":"You can upload multiple reports if your test suite is split in different modules or ran in parallel. See how to upload multiple coverage reports .","title":"Multiple coverage reports for the same language"},{"location":"coverage-reporter/#other-commands","text":"For a complete list of commands and options: --help","title":"Other commands"},{"location":"coverage-reporter/advanced/authenticating-using-account-token/","text":"Authenticating using an Account API token \u00b6 If you'd like to automate uploading coverage for multiple repositories you can authenticate using an Account API Token: Create an Account API token on Codacy. You can find the token in Your account \u2192 API tokens . Set the API token in your terminal, replacing %API_Token% with your own token. Set your repository name in your terminal, replacing %Repo_Name% . Set your username in your terminal, replacing %Username% . export CODACY_API_TOKEN = %API_Token% export CODACY_PROJECT_NAME = %Repo_Name% export CODACY_USERNAME = %Username% Warning You should keep your API token well protected, as it grants owner permissions to your projects.","title":"Authenticating using an Account API token"},{"location":"coverage-reporter/advanced/authenticating-using-account-token/#authenticating-using-an-account-api-token","text":"If you'd like to automate uploading coverage for multiple repositories you can authenticate using an Account API Token: Create an Account API token on Codacy. You can find the token in Your account \u2192 API tokens . Set the API token in your terminal, replacing %API_Token% with your own token. Set your repository name in your terminal, replacing %Repo_Name% . Set your username in your terminal, replacing %Username% . export CODACY_API_TOKEN = %API_Token% export CODACY_PROJECT_NAME = %Repo_Name% export CODACY_USERNAME = %Username% Warning You should keep your API token well protected, as it grants owner permissions to your projects.","title":"Authenticating using an Account API token"},{"location":"coverage-reporter/advanced/installation-methods/","text":"Installation methods \u00b6 Automatic script (recommended) \u00b6 For Ubuntu: bash <(curl -Ls https://coverage.codacy.com/get.sh) For Alpine Linux: wget -qO - https://coverage.codacy.com/get.sh | sh To specify a coverage reporter version, use CODACY_REPORTER_VERSION environment variable. CircleCI orb \u00b6 If you want to use Codacy with CircleCI and report coverage generated from your tests ran in CircleCI, you can use our coverage reporter orb : Example jobs : send-coverage-report : steps : - checkout - \"run commands to generate the coverage result\" - coverage-reporter/send_report workflows : version : 2 coverage-example : jobs : - send-coverage-report GitHub Action \u00b6 If your are using GitHub Actions check out the codacy/coverage-coverage-reporter action . Community supported alternatives \u00b6 Maven plugin \u00b6 Thanks to the amazing job of halkeye you can now send your coverage to Codacy using a maven plugin ! Just follow the instructions on his repository . Travis CI \u00b6 If you want to use codacy with Travis CI and report coverage generated from your tests run in Travis, update your .travis.yml to include the following blocks: before_install : - sudo apt-get install jq - curl -LSs \"$(curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(\".jar\"))) | .[0].browser_download_url')\" -o codacy-coverage-reporter-assembly.jar after_success : - java -jar codacy-coverage-reporter-assembly.jar report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml Make sure you have set CODACY_PROJECT_TOKEN as an environment variable in your travis job! Gradle task \u00b6 A big shout-out to tompahoward , you can create a gradle task as suggested in https://github.com/mountain-pass/hyperstate/commit/857ca93e1c8484c14a5e2da9f0434d3daf3328ce task uploadCoverageToCodacy(type: JavaExec, dependsOn : jacocoTestReport) { main = \"com.codacy.CodacyCoverageReporter\" classpath = configurations.codacy args = [ \"report\", \"-l\", \"Java\", \"-r\", \"${buildDir}/test-results/jacoco/${archivesBaseName}.xml\" ] } task (codacyDepsize) << { def size = 0; configurations.codacy.collect { it.length() / (1024 * 1024) }.each { size += it } println \"Total dependencies size: ${Math.round(size * 100) / 100} Mb\" configurations .codacy .sort { -it.length() } .each { println \"${it.name} : ${Math.round(it.length() / (1024) * 100) / 100} kb\" } } task (codacyLocs) << { configurations.codacy.each { String jarName = it println jarName } } Gradle task by Mr_ramych . Made up from solution above. configurations { codacy } repositories { jcenter() } dependencies { codacy 'com.codacy:codacy-coverage-reporter:latest.release' } task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) { main = \"com.codacy.CodacyCoverageReporter\" classpath = configurations.codacy args = [ \"report\", \"-l\", \"Java\", \"-r\", \"${buildDir}/reports/jacoco/test/jacocoTestReport.xml\" ] } Manually downloading the native binary \u00b6 If you prefer, you can manually download and run the native codacy-coverage-reporter binary, either for the latest version or a specific one. You can use the scripts below to automatically check for the latest version of the binaries, download the binaries from either Bintray or GitHub, and run them. Linux amd64 \u00b6 Download the latest binary and use it to post the coverage to Codacy Bintray \u00b6 LATEST_VERSION = \" $( curl -Ls https://api.bintray.com/packages/codacy/Binaries/codacy-coverage-reporter/versions/_latest | jq -r .name ) \" curl -Ls -o codacy-coverage-reporter \"https://dl.bintray.com/codacy/Binaries/ ${ LATEST_VERSION } /codacy-coverage-reporter-linux\" chmod +x codacy-coverage-reporter ./codacy-coverage-reporter report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml GitHub \u00b6 curl -Ls -o codacy-coverage-reporter \" $( curl -Ls https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | contains(\"codacy-coverage-reporter-linux\"))) | .[0].browser_download_url' ) \" chmod +x codacy-coverage-reporter ./codacy-coverage-reporter report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml If you are experiencing segmentation faults uploading the coverage (due to oracle/graal#624 ), do this before running the reporter, as a workaround: echo \" $( dig +short api.codacy.com | tail -n1 ) api.codacy.com\" >> /etc/hosts Manually downloading the Java binary \u00b6 Linux x86, MacOS, Windows, ... Download the latest jar and use it to post the coverage to Codacy Bintray \u00b6 LATEST_VERSION = \" $( curl -Ls https://api.bintray.com/packages/codacy/Binaries/codacy-coverage-reporter/versions/_latest | jq -r .name ) \" curl -Ls -o codacy-coverage-reporter-assembly.jar \"https://dl.bintray.com/codacy/Binaries/ ${ LATEST_VERSION } /codacy-coverage-reporter-assembly.jar\" java -jar codacy-coverage-reporter-assembly.jar report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml GitHub \u00b6 curl -LS -o codacy-coverage-reporter-assembly.jar \" $( curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(\".jar\"))) | .[0].browser_download_url' ) \" java -jar codacy-coverage-reporter-assembly.jar report -l Java -r jacoco.xml Build from source \u00b6 If you are having any issues with your installation, you can also build the coverage reporter from source. Clone our repository https://github.com/codacy/codacy-coverage-reporter Run the command sbt assembly . This will produce a .jar that you can run in the codacy-coverage-reporter/target/codacy-coverage-reporter-<version>-assembly.jar In the project you want to send the coverage, use the jar. Example: <path>/java-project$ java -jar ../codacy-coverage-reporter/target/codacy-coverage-reporter-<version>-assembly.jar report -l Java -r jacoco.xml","title":"Installation methods"},{"location":"coverage-reporter/advanced/installation-methods/#installation-methods","text":"","title":"Installation methods"},{"location":"coverage-reporter/advanced/installation-methods/#automatic-script-recommended","text":"For Ubuntu: bash <(curl -Ls https://coverage.codacy.com/get.sh) For Alpine Linux: wget -qO - https://coverage.codacy.com/get.sh | sh To specify a coverage reporter version, use CODACY_REPORTER_VERSION environment variable.","title":"Automatic script (recommended)"},{"location":"coverage-reporter/advanced/installation-methods/#circleci-orb","text":"If you want to use Codacy with CircleCI and report coverage generated from your tests ran in CircleCI, you can use our coverage reporter orb : Example jobs : send-coverage-report : steps : - checkout - \"run commands to generate the coverage result\" - coverage-reporter/send_report workflows : version : 2 coverage-example : jobs : - send-coverage-report","title":"CircleCI orb"},{"location":"coverage-reporter/advanced/installation-methods/#github-action","text":"If your are using GitHub Actions check out the codacy/coverage-coverage-reporter action .","title":"GitHub Action"},{"location":"coverage-reporter/advanced/installation-methods/#community-supported-alternatives","text":"","title":"Community supported alternatives"},{"location":"coverage-reporter/advanced/installation-methods/#maven-plugin","text":"Thanks to the amazing job of halkeye you can now send your coverage to Codacy using a maven plugin ! Just follow the instructions on his repository .","title":"Maven plugin"},{"location":"coverage-reporter/advanced/installation-methods/#travis-ci","text":"If you want to use codacy with Travis CI and report coverage generated from your tests run in Travis, update your .travis.yml to include the following blocks: before_install : - sudo apt-get install jq - curl -LSs \"$(curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(\".jar\"))) | .[0].browser_download_url')\" -o codacy-coverage-reporter-assembly.jar after_success : - java -jar codacy-coverage-reporter-assembly.jar report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml Make sure you have set CODACY_PROJECT_TOKEN as an environment variable in your travis job!","title":"Travis CI"},{"location":"coverage-reporter/advanced/installation-methods/#gradle-task","text":"A big shout-out to tompahoward , you can create a gradle task as suggested in https://github.com/mountain-pass/hyperstate/commit/857ca93e1c8484c14a5e2da9f0434d3daf3328ce task uploadCoverageToCodacy(type: JavaExec, dependsOn : jacocoTestReport) { main = \"com.codacy.CodacyCoverageReporter\" classpath = configurations.codacy args = [ \"report\", \"-l\", \"Java\", \"-r\", \"${buildDir}/test-results/jacoco/${archivesBaseName}.xml\" ] } task (codacyDepsize) << { def size = 0; configurations.codacy.collect { it.length() / (1024 * 1024) }.each { size += it } println \"Total dependencies size: ${Math.round(size * 100) / 100} Mb\" configurations .codacy .sort { -it.length() } .each { println \"${it.name} : ${Math.round(it.length() / (1024) * 100) / 100} kb\" } } task (codacyLocs) << { configurations.codacy.each { String jarName = it println jarName } } Gradle task by Mr_ramych . Made up from solution above. configurations { codacy } repositories { jcenter() } dependencies { codacy 'com.codacy:codacy-coverage-reporter:latest.release' } task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) { main = \"com.codacy.CodacyCoverageReporter\" classpath = configurations.codacy args = [ \"report\", \"-l\", \"Java\", \"-r\", \"${buildDir}/reports/jacoco/test/jacocoTestReport.xml\" ] }","title":"Gradle task"},{"location":"coverage-reporter/advanced/installation-methods/#manually-downloading-the-native-binary","text":"If you prefer, you can manually download and run the native codacy-coverage-reporter binary, either for the latest version or a specific one. You can use the scripts below to automatically check for the latest version of the binaries, download the binaries from either Bintray or GitHub, and run them.","title":"Manually downloading the native binary"},{"location":"coverage-reporter/advanced/installation-methods/#linux-amd64","text":"Download the latest binary and use it to post the coverage to Codacy","title":"Linux amd64"},{"location":"coverage-reporter/advanced/installation-methods/#bintray","text":"LATEST_VERSION = \" $( curl -Ls https://api.bintray.com/packages/codacy/Binaries/codacy-coverage-reporter/versions/_latest | jq -r .name ) \" curl -Ls -o codacy-coverage-reporter \"https://dl.bintray.com/codacy/Binaries/ ${ LATEST_VERSION } /codacy-coverage-reporter-linux\" chmod +x codacy-coverage-reporter ./codacy-coverage-reporter report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml","title":"Bintray"},{"location":"coverage-reporter/advanced/installation-methods/#github","text":"curl -Ls -o codacy-coverage-reporter \" $( curl -Ls https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | contains(\"codacy-coverage-reporter-linux\"))) | .[0].browser_download_url' ) \" chmod +x codacy-coverage-reporter ./codacy-coverage-reporter report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml If you are experiencing segmentation faults uploading the coverage (due to oracle/graal#624 ), do this before running the reporter, as a workaround: echo \" $( dig +short api.codacy.com | tail -n1 ) api.codacy.com\" >> /etc/hosts","title":"GitHub"},{"location":"coverage-reporter/advanced/installation-methods/#manually-downloading-the-java-binary","text":"Linux x86, MacOS, Windows, ... Download the latest jar and use it to post the coverage to Codacy","title":"Manually downloading the Java binary"},{"location":"coverage-reporter/advanced/installation-methods/#bintray_1","text":"LATEST_VERSION = \" $( curl -Ls https://api.bintray.com/packages/codacy/Binaries/codacy-coverage-reporter/versions/_latest | jq -r .name ) \" curl -Ls -o codacy-coverage-reporter-assembly.jar \"https://dl.bintray.com/codacy/Binaries/ ${ LATEST_VERSION } /codacy-coverage-reporter-assembly.jar\" java -jar codacy-coverage-reporter-assembly.jar report -l Java -r build/reports/jacoco/test/jacocoTestReport.xml","title":"Bintray"},{"location":"coverage-reporter/advanced/installation-methods/#github_1","text":"curl -LS -o codacy-coverage-reporter-assembly.jar \" $( curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(\".jar\"))) | .[0].browser_download_url' ) \" java -jar codacy-coverage-reporter-assembly.jar report -l Java -r jacoco.xml","title":"GitHub"},{"location":"coverage-reporter/advanced/installation-methods/#build-from-source","text":"If you are having any issues with your installation, you can also build the coverage reporter from source. Clone our repository https://github.com/codacy/codacy-coverage-reporter Run the command sbt assembly . This will produce a .jar that you can run in the codacy-coverage-reporter/target/codacy-coverage-reporter-<version>-assembly.jar In the project you want to send the coverage, use the jar. Example: <path>/java-project$ java -jar ../codacy-coverage-reporter/target/codacy-coverage-reporter-<version>-assembly.jar report -l Java -r jacoco.xml","title":"Build from source"},{"location":"coverage-reporter/advanced/multiple-reports/","text":"Multiple coverage reports for the same language \u00b6 In order to send multiple reports for the same language, you need to upload each report separately with the flag --partial and then notify Codacy, after all reports were sent, with the final command. Example: codacy-coverage-reporter report -l Java -r report1.xml --partial codacy-coverage-reporter report -l Java -r report2.xml --partial codacy-coverage-reporter final Using the script: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -l Java -r report1.xml --partial bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -l Java -r report2.xml --partial bash < ( curl -Ls https://coverage.codacy.com/get.sh ) final If you are sending reports with the partial flag for a certain language you should use it in all reports for that language to ensure the correct calculation of the coverage. It might also be possible to merge the reports before uploading them to Codacy, since most coverage tools support merge/aggregation, for example: http://www.eclemma.org/jacoco/trunk/doc/merge-mojo.html .","title":"Multiple coverage reports for the same language"},{"location":"coverage-reporter/advanced/multiple-reports/#multiple-coverage-reports-for-the-same-language","text":"In order to send multiple reports for the same language, you need to upload each report separately with the flag --partial and then notify Codacy, after all reports were sent, with the final command. Example: codacy-coverage-reporter report -l Java -r report1.xml --partial codacy-coverage-reporter report -l Java -r report2.xml --partial codacy-coverage-reporter final Using the script: bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -l Java -r report1.xml --partial bash < ( curl -Ls https://coverage.codacy.com/get.sh ) report -l Java -r report2.xml --partial bash < ( curl -Ls https://coverage.codacy.com/get.sh ) final If you are sending reports with the partial flag for a certain language you should use it in all reports for that language to ensure the correct calculation of the coverage. It might also be possible to merge the reports before uploading them to Codacy, since most coverage tools support merge/aggregation, for example: http://www.eclemma.org/jacoco/trunk/doc/merge-mojo.html .","title":"Multiple coverage reports for the same language"},{"location":"coverage-reporter/troubleshooting/commit-detection/","text":"Commit SHA hash detection \u00b6 Codacy automatically detects a commit SHA hash from several sources in the following order: CI providers Appveyor Bitrise Buildkite Circle CI Codefresh Codeship Docker Gitlab Greenhouse CI Heroku CI Jenkins Magnum CI Semaphore CI Shippable CI Solano CI TeamCity CI Travis CI Wercker CI Git repository directory If it finds a git directory it will get current commit. Force commit SHA hash You can force using a specific commit SHA hash with: codacy-coverage-reporter report -l Java --commit-uuid \"my_commit_hash\" -r coverage.xml","title":"Commit SHA hash detection"},{"location":"coverage-reporter/troubleshooting/commit-detection/#commit-sha-hash-detection","text":"Codacy automatically detects a commit SHA hash from several sources in the following order: CI providers Appveyor Bitrise Buildkite Circle CI Codefresh Codeship Docker Gitlab Greenhouse CI Heroku CI Jenkins Magnum CI Semaphore CI Shippable CI Solano CI TeamCity CI Travis CI Wercker CI Git repository directory If it finds a git directory it will get current commit. Force commit SHA hash You can force using a specific commit SHA hash with: codacy-coverage-reporter report -l Java --commit-uuid \"my_commit_hash\" -r coverage.xml","title":"Commit SHA hash detection"},{"location":"coverage-reporter/troubleshooting/common-issues/","text":"Common issues \u00b6 JsonParseException while uploading C# coverage data \u00b6 If you're using dotCover to generate coverage reports for your C# projects, you should exclude xUnit files from the coverage analysis as follows: dotCover.exe cover ... /Filters = -:xunit* By default, dotCover includes xUnit files in the coverage analysis and this results in larger coverage reports. This filter helps ensure that the resulting coverage data does not exceed the size limit accepted by the Codacy API when uploading the results. SubstrateSegfaultHandler caught signal 11 \u00b6 If you are experiencing segmentation faults uploading the coverage (due to oracle/graal#624 ), do this before running the reporter, as a workaround: echo \" $( dig +short api.codacy.com | tail -n1 ) api.codacy.com\" >> /etc/hosts coverage-xml/index.xml generated an empty result \u00b6 If you are using PHPUnit version 5 or above to generate your coverage report, you must output the report using the clover format. The codacy-coverage-reporter supports the PHPUnit xml format only for versions equal or lower than 4. You can change the output format by replacing the --coverage-xml <dir> flag by --coverage-clover <file> . For more information on the PHPUnit command line check here .","title":"Common issues"},{"location":"coverage-reporter/troubleshooting/common-issues/#common-issues","text":"","title":"Common issues"},{"location":"coverage-reporter/troubleshooting/common-issues/#jsonparseexception-while-uploading-c-coverage-data","text":"If you're using dotCover to generate coverage reports for your C# projects, you should exclude xUnit files from the coverage analysis as follows: dotCover.exe cover ... /Filters = -:xunit* By default, dotCover includes xUnit files in the coverage analysis and this results in larger coverage reports. This filter helps ensure that the resulting coverage data does not exceed the size limit accepted by the Codacy API when uploading the results.","title":"JsonParseException while uploading C# coverage data"},{"location":"coverage-reporter/troubleshooting/common-issues/#substratesegfaulthandler-caught-signal-11","text":"If you are experiencing segmentation faults uploading the coverage (due to oracle/graal#624 ), do this before running the reporter, as a workaround: echo \" $( dig +short api.codacy.com | tail -n1 ) api.codacy.com\" >> /etc/hosts","title":"SubstrateSegfaultHandler caught signal 11"},{"location":"coverage-reporter/troubleshooting/common-issues/#coverage-xmlindexxml-generated-an-empty-result","text":"If you are using PHPUnit version 5 or above to generate your coverage report, you must output the report using the clover format. The codacy-coverage-reporter supports the PHPUnit xml format only for versions equal or lower than 4. You can change the output format by replacing the --coverage-xml <dir> flag by --coverage-clover <file> . For more information on the PHPUnit command line check here .","title":"coverage-xml/index.xml generated an empty result"},{"location":"coverage-reporter/troubleshooting/swift-objectivec/","text":"Swift & Objective-C support \u00b6 To use Swift/Objective-C and XCode coverage reporter, you should use Slather to convert XCode report into Cobertura format. This can be achieve by running this commands on the CI: gem install slather slather coverage -x --output-directory <report-output-dir> --scheme <project-name> <project-name>.xcodeproj This will generate a cobertura.xml inside <report-output-dir> folder. After this, call our script: bash < ( curl -Ls https://coverage.codacy.com/get.sh )","title":"Swift & Objective-C support"},{"location":"coverage-reporter/troubleshooting/swift-objectivec/#swift-objective-c-support","text":"To use Swift/Objective-C and XCode coverage reporter, you should use Slather to convert XCode report into Cobertura format. This can be achieve by running this commands on the CI: gem install slather slather coverage -x --output-directory <report-output-dir> --scheme <project-name> <project-name>.xcodeproj This will generate a cobertura.xml inside <report-output-dir> folder. After this, call our script: bash < ( curl -Ls https://coverage.codacy.com/get.sh )","title":"Swift &amp; Objective-C support"},{"location":"faq/code-analysis/do-you-check-for-dependencies/","text":"Do you check for dependencies? \u00b6 We don't check for dependencies. We do static code analysis on the source code, and that allows us to check code style, security duplication, complexity and coverage. To learn more on how to extend analysis on your repositories, check our Engines page.","title":"Do you check for dependencies?"},{"location":"faq/code-analysis/do-you-check-for-dependencies/#do-you-check-for-dependencies","text":"We don't check for dependencies. We do static code analysis on the source code, and that allows us to check code style, security duplication, complexity and coverage. To learn more on how to extend analysis on your repositories, check our Engines page.","title":"Do you check for dependencies?"},{"location":"faq/code-analysis/does-codacy-automatically-analyze-all-pull-requests/","text":"Does Codacy automatically analyze all pull requests? \u00b6 We analyze pull requests automatically as long as the target branch is enabled. Learn more about managing branches .","title":"Does Codacy automatically analyze all pull requests?"},{"location":"faq/code-analysis/does-codacy-automatically-analyze-all-pull-requests/#does-codacy-automatically-analyze-all-pull-requests","text":"We analyze pull requests automatically as long as the target branch is enabled. Learn more about managing branches .","title":"Does Codacy automatically analyze all pull requests?"},{"location":"faq/code-analysis/how-does-codacy-measure-complexity-in-my-repository/","text":"How does Codacy measure complexity in my repository? \u00b6 Codacy uses cyclomatic complexity to identify complex files in your repository. Cyclomatic Complexity is a software metric used to indicate the complexity of a program. It is a quantitative measure of the number of linearly independent paths through a program's source code. A complex file is a file with a complexity value bigger than the threshold defined on the repository quality settings . Code complexity is calculated based on the maximum number of complex methods in a file. In your Repository Dashboard you can see how complexity is evolving for your repository.","title":"How does Codacy measure complexity in my repository?"},{"location":"faq/code-analysis/how-does-codacy-measure-complexity-in-my-repository/#how-does-codacy-measure-complexity-in-my-repository","text":"Codacy uses cyclomatic complexity to identify complex files in your repository. Cyclomatic Complexity is a software metric used to indicate the complexity of a program. It is a quantitative measure of the number of linearly independent paths through a program's source code. A complex file is a file with a complexity value bigger than the threshold defined on the repository quality settings . Code complexity is calculated based on the maximum number of complex methods in a file. In your Repository Dashboard you can see how complexity is evolving for your repository.","title":"How does Codacy measure complexity in my repository?"},{"location":"faq/code-analysis/how-long-does-it-take-for-my-repository-to-be-analyzed/","text":"How long does it take for my repository to be analyzed? \u00b6 Usually under 5 minutes, however it may take longer as this depends on the size of your repository. If your analysis is taking a lot of time, you can manually force a repository update .","title":"How long does it take for my repository to be analyzed?"},{"location":"faq/code-analysis/how-long-does-it-take-for-my-repository-to-be-analyzed/#how-long-does-it-take-for-my-repository-to-be-analyzed","text":"Usually under 5 minutes, however it may take longer as this depends on the size of your repository. If your analysis is taking a lot of time, you can manually force a repository update .","title":"How long does it take for my repository to be analyzed?"},{"location":"faq/code-analysis/skipping-an-analysis/","text":"Skipping an analysis \u00b6 By default, Codacy automatically analyzes a repository whenever you push changes. You can override this behavior by adding a [ci skip] or [skip ci] tag anywhere in a commit's title or message. If you later decide to build a skipped commit, you can override any skip tags by reanalyzing the commit. Note This feature is not supported for pull requests. Example commit message \u00b6 $ git log origin/master..HEAD commit 96121bec2f36b406d694ed4e03126483ad1baad6 Author: Rodrigo Fernandes Date: Wed Jan 31 10 :01:47 2019 +0000 Add eslint-plugin-chai-expect version 1 .1.1 [ ci skip ] When pushed, this commit will not be analyzed by Codacy because of the [ci skip] in the commit message.","title":"Skipping an analysis"},{"location":"faq/code-analysis/skipping-an-analysis/#skipping-an-analysis","text":"By default, Codacy automatically analyzes a repository whenever you push changes. You can override this behavior by adding a [ci skip] or [skip ci] tag anywhere in a commit's title or message. If you later decide to build a skipped commit, you can override any skip tags by reanalyzing the commit. Note This feature is not supported for pull requests.","title":"Skipping an analysis"},{"location":"faq/code-analysis/skipping-an-analysis/#example-commit-message","text":"$ git log origin/master..HEAD commit 96121bec2f36b406d694ed4e03126483ad1baad6 Author: Rodrigo Fernandes Date: Wed Jan 31 10 :01:47 2019 +0000 Add eslint-plugin-chai-expect version 1 .1.1 [ ci skip ] When pushed, this commit will not be analyzed by Codacy because of the [ci skip] in the commit message.","title":"Example commit message"},{"location":"faq/general/how-can-i-change-or-cancel-my-plan/","text":"How can I change or cancel my plan? \u00b6 You can change or cancel your plan at any time. If you choose to cancel your annual subscription before the conclusion of the 12 months, your account will continue to work for the remainder of the annual billing period. If you're using Codacy Cloud you can make changes to your plan yourself. For single accounts: To change the billing details or the plan of your account click on your avatar, select Your Account , and open Plan and billing To cancel your plan, delete your account For organizations: To change the billing details or the plan of your organization click on your avatar, select Organizations , select your organization, and open Plan and billing To cancel your plan, delete your organization Note If you're using GitHub Marketplace, make changes to your billing details or cancel your plan directly on your GitHub Billing page . If you're using Codacy Self-hosted , we kindly ask that you send us a message and we'll swiftly process the cancellation. We value feedback and thank you in advance for letting us know the primary reason behind your decision to leave, whether budgetary constraints or missing deal-breaker functionality.","title":"How can I change or cancel my plan?"},{"location":"faq/general/how-can-i-change-or-cancel-my-plan/#how-can-i-change-or-cancel-my-plan","text":"You can change or cancel your plan at any time. If you choose to cancel your annual subscription before the conclusion of the 12 months, your account will continue to work for the remainder of the annual billing period. If you're using Codacy Cloud you can make changes to your plan yourself. For single accounts: To change the billing details or the plan of your account click on your avatar, select Your Account , and open Plan and billing To cancel your plan, delete your account For organizations: To change the billing details or the plan of your organization click on your avatar, select Organizations , select your organization, and open Plan and billing To cancel your plan, delete your organization Note If you're using GitHub Marketplace, make changes to your billing details or cancel your plan directly on your GitHub Billing page . If you're using Codacy Self-hosted , we kindly ask that you send us a message and we'll swiftly process the cancellation. We value feedback and thank you in advance for letting us know the primary reason behind your decision to leave, whether budgetary constraints or missing deal-breaker functionality.","title":"How can I change or cancel my plan?"},{"location":"faq/general/how-do-i-change-my-email-address-in-codacy/","text":"How do I change my email address in Codacy? \u00b6 Codacy will always pull email addresses from your current session in your Git provider. Your account's email addresses should be visible on your email management page. If you need to make any changes to the emails showing in Codacy, you will need to change this directly in your Git provider. Once you have done that, please log out and back into Codacy. If the changes are still not reflected in Codacy, go to your access management page and revoke the relevant Git provider or Google integration. After that, please log out and back into Codacy with that provider. If you are still having trouble changing your email addresses or have any other question regarding this, reach out to us on support@codacy.com .","title":"How do I change my email address in Codacy?"},{"location":"faq/general/how-do-i-change-my-email-address-in-codacy/#how-do-i-change-my-email-address-in-codacy","text":"Codacy will always pull email addresses from your current session in your Git provider. Your account's email addresses should be visible on your email management page. If you need to make any changes to the emails showing in Codacy, you will need to change this directly in your Git provider. Once you have done that, please log out and back into Codacy. If the changes are still not reflected in Codacy, go to your access management page and revoke the relevant Git provider or Google integration. After that, please log out and back into Codacy with that provider. If you are still having trouble changing your email addresses or have any other question regarding this, reach out to us on support@codacy.com .","title":"How do I change my email address in Codacy?"},{"location":"faq/general/how-does-codacy-keep-my-data-secure/","text":"How does Codacy keep my data secure? \u00b6 Keeping our customers' data protected at all times is our highest priority. This security overview provides a high-level overview of the security practices put in place to achieve that objective. Have questions or feedback? Feel free to reach out to us at security@codacy.com .","title":"How does Codacy keep my data secure?"},{"location":"faq/general/how-does-codacy-keep-my-data-secure/#how-does-codacy-keep-my-data-secure","text":"Keeping our customers' data protected at all times is our highest priority. This security overview provides a high-level overview of the security practices put in place to achieve that objective. Have questions or feedback? Feel free to reach out to us at security@codacy.com .","title":"How does Codacy keep my data secure?"},{"location":"faq/general/how-does-codacy-protect-my-privacy/","text":"How does Codacy protect my privacy? \u00b6 On the 25th of May 2018, the new \"General Data Protection Regulation\" ( GDPR ) will come into effect. This regulation contains the most significant changes to European data privacy legislation in the last 20 years and gives you more control over your personal data and greater transparency on how it is used. At Codacy, keeping your personal data safe has always been a top priority and we look at GDPR as another opportunity for us to strengthen this commitment to you. We are changing our data processing policies, operations, activities and documentation in anticipation of the upcoming GDPR and have updated our Privacy Policy to incorporate said changes and specifically reflect the new regulation. The updated policy takes effect immediately for all of Codacy's customers and users. Below are some change highlights: Transparency: We've reworded our privacy policy for better navigation and to make it easier to read. Our policy outlines the type of personal data we collect, how we collect and process the data, and for what purposes. It also explains how we store, transfer, and share personal data, and our data retention practices Control: Our policy now further explains the control you have over information about you and your online activities. At any time, you can request information, correction, deletion or changes to your personal data or/and make changes yourself GDPR: We've included additional language to discuss rights for users located in the European Union (EU) If you have any questions on this, please email us at privacy@codacy.com or reach out through our live chat option.","title":"How does Codacy protect my privacy?"},{"location":"faq/general/how-does-codacy-protect-my-privacy/#how-does-codacy-protect-my-privacy","text":"On the 25th of May 2018, the new \"General Data Protection Regulation\" ( GDPR ) will come into effect. This regulation contains the most significant changes to European data privacy legislation in the last 20 years and gives you more control over your personal data and greater transparency on how it is used. At Codacy, keeping your personal data safe has always been a top priority and we look at GDPR as another opportunity for us to strengthen this commitment to you. We are changing our data processing policies, operations, activities and documentation in anticipation of the upcoming GDPR and have updated our Privacy Policy to incorporate said changes and specifically reflect the new regulation. The updated policy takes effect immediately for all of Codacy's customers and users. Below are some change highlights: Transparency: We've reworded our privacy policy for better navigation and to make it easier to read. Our policy outlines the type of personal data we collect, how we collect and process the data, and for what purposes. It also explains how we store, transfer, and share personal data, and our data retention practices Control: Our policy now further explains the control you have over information about you and your online activities. At any time, you can request information, correction, deletion or changes to your personal data or/and make changes yourself GDPR: We've included additional language to discuss rights for users located in the European Union (EU) If you have any questions on this, please email us at privacy@codacy.com or reach out through our live chat option.","title":"How does Codacy protect my privacy?"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/","text":"How does Codacy support Bitbucket Cloud? \u00b6 When you use Bitbucket Cloud to sign up or log into Codacy, the Bitbucket teams that you belong to will be available to be added as Organizations on Codacy. After adding a team: Codacy displays the list of all repositories in that team so that you can add them to Codacy as repositories to be analyzed The members of the team will be able to join or request to join Codacy If you have repositories that do not belong to any team, you can still add those on Codacy directly under My Repositories. Limitations \u00b6 Currently, the integration between Codacy and Bitbucket Cloud has the following limitations: Users that are deleted from Bitbucket Cloud are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Deleted teams and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Renamed Team workspace IDs are not automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those teams. You must click the button \u201cSynchronize\u201d in the settings of the corresponding Organization on Codacy to synchronize the workspace ID and resume the analysis of the repositories. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. Codacy does not analyze pull requests submitted from forked repositories.","title":"How does Codacy support Bitbucket Cloud?"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/#how-does-codacy-support-bitbucket-cloud","text":"When you use Bitbucket Cloud to sign up or log into Codacy, the Bitbucket teams that you belong to will be available to be added as Organizations on Codacy. After adding a team: Codacy displays the list of all repositories in that team so that you can add them to Codacy as repositories to be analyzed The members of the team will be able to join or request to join Codacy If you have repositories that do not belong to any team, you can still add those on Codacy directly under My Repositories.","title":"How does Codacy support Bitbucket Cloud?"},{"location":"faq/general/how-does-codacy-support-bitbucket-cloud/#limitations","text":"Currently, the integration between Codacy and Bitbucket Cloud has the following limitations: Users that are deleted from Bitbucket Cloud are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Deleted teams and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Renamed Team workspace IDs are not automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those teams. You must click the button \u201cSynchronize\u201d in the settings of the corresponding Organization on Codacy to synchronize the workspace ID and resume the analysis of the repositories. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. Codacy does not analyze pull requests submitted from forked repositories.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/","text":"How does Codacy support Bitbucket Server? \u00b6 When you use Bitbucket Server to sign up or log into Codacy, the Bitbucket projects that you belong to will be available to be added as Organizations on Codacy. After adding a project: Codacy displays the list of all repositories that you own in that project so that you can add them to Codacy as repositories to be analyzed The members of the project will be able to join or request to join Codacy Limitations \u00b6 Currently, the integration between Codacy and Bitbucket Server has the following limitations: Users that are deleted from Bitbucket Server are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed project keys are not automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those projects. You must click the button \"Synchronize\" in the settings of the corresponding Organization on Codacy to synchronize the project key and resume the analysis of the repositories. Deleted projects and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Personal repositories are not supported. You can only add repositories to Codacy if they belong to a project. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. The Repositories screen does not include the \"last updated\" timestamp for each repository. As such, the repositories are sorted alphabetically. Codacy does not analyze pull requests submitted from forked repositories.","title":"How does Codacy support Bitbucket Server?"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/#how-does-codacy-support-bitbucket-server","text":"When you use Bitbucket Server to sign up or log into Codacy, the Bitbucket projects that you belong to will be available to be added as Organizations on Codacy. After adding a project: Codacy displays the list of all repositories that you own in that project so that you can add them to Codacy as repositories to be analyzed The members of the project will be able to join or request to join Codacy","title":"How does Codacy support Bitbucket Server?"},{"location":"faq/general/how-does-codacy-support-bitbucket-server/#limitations","text":"Currently, the integration between Codacy and Bitbucket Server has the following limitations: Users that are deleted from Bitbucket Server are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed project keys are not automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those projects. You must click the button \"Synchronize\" in the settings of the corresponding Organization on Codacy to synchronize the project key and resume the analysis of the repositories. Deleted projects and repositories are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations or repositories from Codacy. Repositories that are moved between teams are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. Personal repositories are not supported. You can only add repositories to Codacy if they belong to a project. Codacy only sends commit and pull request notification emails to the authors of the commits and pull requests. The Repositories screen does not include the \"last updated\" timestamp for each repository. As such, the repositories are sorted alphabetically. Codacy does not analyze pull requests submitted from forked repositories.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/","text":"How does Codacy support GitLab Cloud? \u00b6 When you use GitLab Cloud to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that do not belong to any Group, you can still add those on Codacy directly under My Repositories . Limitations \u00b6 Currently, the integration between Codacy and GitLab Cloud has the following limitations: Users that are deleted from GitLab are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed Group paths are not automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those groups. You must click the button \"Synchronize\" in the settings of the corresponding Organization on Codacy to synchronize the Group path and resume the analysis of the repositories. Deleted Groups are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations from Codacy. Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization.","title":"How does Codacy support GitLab Cloud?"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/#how-does-codacy-support-gitlab-cloud","text":"When you use GitLab Cloud to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that do not belong to any Group, you can still add those on Codacy directly under My Repositories .","title":"How does Codacy support GitLab Cloud?"},{"location":"faq/general/how-does-codacy-support-gitlab-cloud/#limitations","text":"Currently, the integration between Codacy and GitLab Cloud has the following limitations: Users that are deleted from GitLab are not automatically removed from Codacy. These users must be manually removed from Codacy, namely to ensure that Codacy only bills seats corresponding to active users. Renamed Group paths are not automatically renamed on Codacy, causing Codacy to stop analyzing the repositories in those groups. You must click the button \"Synchronize\" in the settings of the corresponding Organization on Codacy to synchronize the Group path and resume the analysis of the repositories. Deleted Groups are not automatically deleted from Codacy. However, you can manually delete the corresponding Organizations from Codacy. Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization.","title":"Limitations"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/","text":"How does Codacy support GitLab Enterprise? \u00b6 When you use GitLab Enterprise to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that do not belong to any Group, you can still add those on Codacy directly under My Repositories . Limitations \u00b6 Currently, the integration between Codacy and GitLab Enterprise has the following limitations: Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization.","title":"How does Codacy support GitLab Enterprise?"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/#how-does-codacy-support-gitlab-enterprise","text":"When you use GitLab Enterprise to sign up or log into Codacy, the GitLab Groups that you belong to will be available to be added as Organizations on Codacy. After adding a Group: Codacy displays the list of all repositories that you own in that Group and Subgroups so that you can add them to Codacy as repositories to be analyzed The members of the Group will be able to join or request to join Codacy If you have repositories that do not belong to any Group, you can still add those on Codacy directly under My Repositories .","title":"How does Codacy support GitLab Enterprise?"},{"location":"faq/general/how-does-codacy-support-gitlab-enterprise/#limitations","text":"Currently, the integration between Codacy and GitLab Enterprise has the following limitations: Repositories that are moved between Groups are not automatically transferred between Organizations on Codacy. You must manually delete these repositories from their source Organization and add them to their new Organization. It is not possible to add repositories with the same name to the Codacy organization. Repositories having the same name but belonging to different GitLab Subgroups would collide if they were added to the same Codacy organization.","title":"Limitations"},{"location":"faq/general/which-browsers-do-you-support/","text":"Which browsers do you support? \u00b6 Codacy runs on every modern browser supporting HTML5 and CSS3. Chrome 55+ Firefox 45+ IE 11+ Microsoft Edge 13+","title":"Which browsers do you support?"},{"location":"faq/general/which-browsers-do-you-support/#which-browsers-do-you-support","text":"Codacy runs on every modern browser supporting HTML5 and CSS3. Chrome 55+ Firefox 45+ IE 11+ Microsoft Edge 13+","title":"Which browsers do you support?"},{"location":"faq/general/which-version-control-systems-do-you-support/","text":"Which version control systems do you support? \u00b6 We only support Git repositories from the providers listed below. On Codacy Cloud we support the following Git providers: GitHub Cloud GitLab Cloud Bitbucket Cloud Besides these, on Codacy self-hosted we also support: GitHub Enterprise GitLab Enterprise Bitbucket Server Note We used to support the possibility to add other Git repositories to Codacy manually, but as part of a process to improve our performance, that option is no longer available. However, repositories that were added before the 12th Feb 2019 can continue to be analyzed if you configure post-commit hooks on your Git repositories to notify Codacy of new commits.","title":"Which version control systems do you support?"},{"location":"faq/general/which-version-control-systems-do-you-support/#which-version-control-systems-do-you-support","text":"We only support Git repositories from the providers listed below. On Codacy Cloud we support the following Git providers: GitHub Cloud GitLab Cloud Bitbucket Cloud Besides these, on Codacy self-hosted we also support: GitHub Enterprise GitLab Enterprise Bitbucket Server Note We used to support the possibility to add other Git repositories to Codacy manually, but as part of a process to improve our performance, that option is no longer available. However, repositories that were added before the 12th Feb 2019 can continue to be analyzed if you configure post-commit hooks on your Git repositories to notify Codacy of new commits.","title":"Which version control systems do you support?"},{"location":"faq/repositories/hotspots-overview/","text":"Hotspots overview \u00b6 On the Organization Dashboard and Repository Dashboard you have a section called Hotspots where you can see a set of attention points you can click on or dismiss, in case you don't feel they are relevant. See below a full description of this feature and all the functionalities behind it! How does it look like? \u00b6 Each hotspot, depending on the Dashboard, should apply to you on the environment you are in: if you are on the Organization Dashboard (where you can see all the repositories of a specific Organization) you will see Hotspots (attention points) related with the Organization, and if you are on the Repository Dashboard you will see Hotspots related with the repository. Hotspots can be dismissed by clicking the \"x\" button on the top right-hand corner. If you dismiss an Hotspot and the situation that generated that Hotspot is not fixed it will show up again 7 days later. You can also click on specific content of each Hotspot - which will take you to a specific pull request or repository, depending on the Hotspot, so you can follow up closely what went wrong. What types of Hotspots are there? \u00b6 We have started with a short-list of Hotspots and the idea is to iterate this feature, as we see valuable for our customers. In case you have feedback feel free to share it, we really appreciate real feedback, to ensure that we gather the right attention points. For now, we have implemented: Type of Hotspot Description of Hotspot Where can you find it? Open Pull Requests Breaking standards On this Hotspot we let you know a specific repository has X open pull requests not up to standards. You can see this Hotspot at Organization and Repository levels. Drop in quality of a specific repository On this Hotspot we let you know a specific repository had a drop in quality over the last 7 days. You will see this Hotspot at Organization and Repository Dashboards. A security pattern is reported X times in a specific repository On this Hotspot we let you know a specific security pattern is being reported over 1 time for a specific repository. You will see this Hotspot at Repository Dashboards. This way you can see if there is any specific pattern breaking too often. Total X reports of security patterns in a specific repository On this Hotspot we let you know a specific repository has more than X issues related with security. You will see this Hotspot at Organization level, to give you an overview on overall security issues your organization might be facing. We would love your feedback, in case you want to let us know what you think about the Repository Dashboard, how it could be improved, etc feel free to reach out or leave a comment!","title":"Hotspots overview"},{"location":"faq/repositories/hotspots-overview/#hotspots-overview","text":"On the Organization Dashboard and Repository Dashboard you have a section called Hotspots where you can see a set of attention points you can click on or dismiss, in case you don't feel they are relevant. See below a full description of this feature and all the functionalities behind it!","title":"Hotspots overview"},{"location":"faq/repositories/hotspots-overview/#how-does-it-look-like","text":"Each hotspot, depending on the Dashboard, should apply to you on the environment you are in: if you are on the Organization Dashboard (where you can see all the repositories of a specific Organization) you will see Hotspots (attention points) related with the Organization, and if you are on the Repository Dashboard you will see Hotspots related with the repository. Hotspots can be dismissed by clicking the \"x\" button on the top right-hand corner. If you dismiss an Hotspot and the situation that generated that Hotspot is not fixed it will show up again 7 days later. You can also click on specific content of each Hotspot - which will take you to a specific pull request or repository, depending on the Hotspot, so you can follow up closely what went wrong.","title":"How does it look like?"},{"location":"faq/repositories/hotspots-overview/#what-types-of-hotspots-are-there","text":"We have started with a short-list of Hotspots and the idea is to iterate this feature, as we see valuable for our customers. In case you have feedback feel free to share it, we really appreciate real feedback, to ensure that we gather the right attention points. For now, we have implemented: Type of Hotspot Description of Hotspot Where can you find it? Open Pull Requests Breaking standards On this Hotspot we let you know a specific repository has X open pull requests not up to standards. You can see this Hotspot at Organization and Repository levels. Drop in quality of a specific repository On this Hotspot we let you know a specific repository had a drop in quality over the last 7 days. You will see this Hotspot at Organization and Repository Dashboards. A security pattern is reported X times in a specific repository On this Hotspot we let you know a specific security pattern is being reported over 1 time for a specific repository. You will see this Hotspot at Repository Dashboards. This way you can see if there is any specific pattern breaking too often. Total X reports of security patterns in a specific repository On this Hotspot we let you know a specific repository has more than X issues related with security. You will see this Hotspot at Organization level, to give you an overview on overall security issues your organization might be facing. We would love your feedback, in case you want to let us know what you think about the Repository Dashboard, how it could be improved, etc feel free to reach out or leave a comment!","title":"What types of Hotspots are there?"},{"location":"faq/repositories/how-do-i-manually-force-a-repository-update/","text":"How do I manually force a repository update? \u00b6 Codacy relies on post-commit hooks to trigger analysis. To re-trigger the analysis you can re-send the hook on the Git provider. For instant updates, configure post-commit hooks .","title":"How do I manually force a repository update?"},{"location":"faq/repositories/how-do-i-manually-force-a-repository-update/#how-do-i-manually-force-a-repository-update","text":"Codacy relies on post-commit hooks to trigger analysis. To re-trigger the analysis you can re-send the hook on the Git provider. For instant updates, configure post-commit hooks .","title":"How do I manually force a repository update?"},{"location":"faq/repositories/how-do-i-reanalyze-my-repository/","text":"How do I reanalyze my repository? \u00b6 Click on the latest commit from your list in the Commit view and click to reanalyze as the latest commit includes all the code of all the PRs.","title":"How do I reanalyze my repository?"},{"location":"faq/repositories/how-do-i-reanalyze-my-repository/#how-do-i-reanalyze-my-repository","text":"Click on the latest commit from your list in the Commit view and click to reanalyze as the latest commit includes all the code of all the PRs.","title":"How do I reanalyze my repository?"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-my-prs/","text":"How do I set Codacy as a required check to merge my PRs? \u00b6 Codacy will check each of your Pull Requests using your quality settings , sending a notification to the Git provider informing if the PR is up to standards or not. Each of the Git providers have different options regarding what can be done with this notification that you can set up to make sure you get a notification if the PR fails Codacy checks or block it from being merged. GitHub \u00b6 GitHub allows for a specific check to be mandatory for a PR to be merged. This allows our users to make sure that a PR is only merged when it gets an OK from Codacy. Official Documentation Bitbucket \u00b6 Bitbucket does not allow for a specific check to be required before merge, but instead, for a minimum number of checks to be performed successfully before the PR can be merged. This number can be zero, all the checks being run in the PR or a number in between. Some of these options are only available for certain pricing plans in Bitbucket. Official Documentation GitLab \u00b6 GitLab allows flagging merge requests as \"Work In Progress\" to block the merge requests from being merged. Official Documentation","title":"How do I set Codacy as a required check to merge my PRs?"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-my-prs/#how-do-i-set-codacy-as-a-required-check-to-merge-my-prs","text":"Codacy will check each of your Pull Requests using your quality settings , sending a notification to the Git provider informing if the PR is up to standards or not. Each of the Git providers have different options regarding what can be done with this notification that you can set up to make sure you get a notification if the PR fails Codacy checks or block it from being merged.","title":"How do I set Codacy as a required check to merge my PRs?"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-my-prs/#github","text":"GitHub allows for a specific check to be mandatory for a PR to be merged. This allows our users to make sure that a PR is only merged when it gets an OK from Codacy. Official Documentation","title":"GitHub"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-my-prs/#bitbucket","text":"Bitbucket does not allow for a specific check to be required before merge, but instead, for a minimum number of checks to be performed successfully before the PR can be merged. This number can be zero, all the checks being run in the PR or a number in between. Some of these options are only available for certain pricing plans in Bitbucket. Official Documentation","title":"Bitbucket"},{"location":"faq/repositories/how-do-i-set-codacy-as-a-required-check-to-merge-my-prs/#gitlab","text":"GitLab allows flagging merge requests as \"Work In Progress\" to block the merge requests from being merged. Official Documentation","title":"GitLab"},{"location":"faq/repositories/how-do-i-transfer-delete-a-repository-from-my-account/","text":"How do I transfer/delete a repository from my account? \u00b6 If you wish to stop analysis and unregister your repository from Codacy, please go to your repository Settings -> General . This will not remove your repository from your Git provider. It will only remove data concerning your repository in Codacy. On this page, you can also transfer your repository to another of your organizations. Note To remove a repository you need to have admin permissions for that repository.","title":"How do I transfer/delete a repository from my account?"},{"location":"faq/repositories/how-do-i-transfer-delete-a-repository-from-my-account/#how-do-i-transferdelete-a-repository-from-my-account","text":"If you wish to stop analysis and unregister your repository from Codacy, please go to your repository Settings -> General . This will not remove your repository from your Git provider. It will only remove data concerning your repository in Codacy. On this page, you can also transfer your repository to another of your organizations. Note To remove a repository you need to have admin permissions for that repository.","title":"How do I transfer/delete a repository from my account?"},{"location":"faq/repositories/i-moved-my-repository-on-the-git-provider/","text":"I moved my repository on the Git provider \u00b6 Currently, Codacy does not automatically detect moves of repositories between two organizations. To ensure that Codacy continues to analyze a repository that was moved to another organization on your Git provider: Delete the repository from the original organization on Codacy, taking note of the settings for this repository Add the repository to the new organization on Codacy and reconfigure the repository with the same settings as the original one If you cannot find your repository in the original Codacy organization or if you need more help with this process, please contact support@codacy.com .","title":"I moved my repository on the Git provider"},{"location":"faq/repositories/i-moved-my-repository-on-the-git-provider/#i-moved-my-repository-on-the-git-provider","text":"Currently, Codacy does not automatically detect moves of repositories between two organizations. To ensure that Codacy continues to analyze a repository that was moved to another organization on your Git provider: Delete the repository from the original organization on Codacy, taking note of the settings for this repository Add the repository to the new organization on Codacy and reconfigure the repository with the same settings as the original one If you cannot find your repository in the original Codacy organization or if you need more help with this process, please contact support@codacy.com .","title":"I moved my repository on the Git provider"},{"location":"faq/repositories/i-renamed-my-repository-on-the-git-provider/","text":"I renamed my repository on the Git provider \u00b6 If you have changed the name or the URL of your repository on your Git provider, you can update the repository name and URL to point to the new location under your Repository Settings . This ensures that you won't lose historical data about your repository.","title":"I renamed my repository on the Git provider"},{"location":"faq/repositories/i-renamed-my-repository-on-the-git-provider/#i-renamed-my-repository-on-the-git-provider","text":"If you have changed the name or the URL of your repository on your Git provider, you can update the repository name and URL to point to the new location under your Repository Settings . This ensures that you won't lose historical data about your repository.","title":"I renamed my repository on the Git provider"},{"location":"faq/repositories/what-are-logs/","text":"What are Logs? \u00b6 On the Organization Dashboard and Repository Dashboard you have a section called Logs where you can see what is going on with your organization and repositories: disabled tools, patterns ignored, etc. How does it look? \u00b6 On the Organization and Repository Dashboards you can see a section with the 10 most recent activities. It's not possible to dismiss these logs. What types of Logs can you find? \u00b6 We have started with a short-list of logs and we will improve this feature based on the feedback we receive so please share your suggestions to ensure we are displaying the right activity logs. For now, we have implemented: Type of Log (Activity) Where will you see it? Specific user disabled a tool for a specific repository On the Organization and on the Repository Dashboards. Specific user ignored a specific pattern on a repository On the Organization and on the Repository Dashboards. Specific user invited another user to the Organization On the Organization Dashboard. Specific user removed another user from the Organization On the Organization Dashboard. Specific user moved a repository to a different Organization On the Organization Dashboard. Specific user added a specific repository On the Organization and on the Repository Dashboards. Specific user removed a specific repository On the Organization Dashboard. Please reach out to us with your comments and improvement ideas.","title":"What are Logs?"},{"location":"faq/repositories/what-are-logs/#what-are-logs","text":"On the Organization Dashboard and Repository Dashboard you have a section called Logs where you can see what is going on with your organization and repositories: disabled tools, patterns ignored, etc.","title":"What are Logs?"},{"location":"faq/repositories/what-are-logs/#how-does-it-look","text":"On the Organization and Repository Dashboards you can see a section with the 10 most recent activities. It's not possible to dismiss these logs.","title":"How does it look?"},{"location":"faq/repositories/what-are-logs/#what-types-of-logs-can-you-find","text":"We have started with a short-list of logs and we will improve this feature based on the feedback we receive so please share your suggestions to ensure we are displaying the right activity logs. For now, we have implemented: Type of Log (Activity) Where will you see it? Specific user disabled a tool for a specific repository On the Organization and on the Repository Dashboards. Specific user ignored a specific pattern on a repository On the Organization and on the Repository Dashboards. Specific user invited another user to the Organization On the Organization Dashboard. Specific user removed another user from the Organization On the Organization Dashboard. Specific user moved a repository to a different Organization On the Organization Dashboard. Specific user added a specific repository On the Organization and on the Repository Dashboards. Specific user removed a specific repository On the Organization Dashboard. Please reach out to us with your comments and improvement ideas.","title":"What types of Logs can you find?"},{"location":"faq/repositories/why-cant-i-see-or-add-my-organizations-repositories/","text":"Why can't I see or add my organization's repositories? \u00b6 If you can't see or add your organization's repositories, or have any problems regarding metrics (e.g. you can't see any issues and your pull requests aren't analyzed), please check if your user account has a duplicated copy of the repository on the organization. The ideal scenario for your organization's repositories is to have a unique copy of it added to your Codacy organization, by someone with write permissions on the repository. In case you have a duplicated repository on your account, please delete it and use only the one available in your organization. In the unlikely event of not seeing repositories for one/multiple organizations, please go to your GitHub settings and revoke Codacy OAuth application. After revoking Codacy from the GitHub Authorized OAuth Apps, go back to Codacy and add a repository to see the \"Authorize Codacy\" menu. (Note you may have to click \"GitHub\" on the sidebar to request for Codacy's permission on GitHub's side) Click \"Grant\" on each organization, to see their repositories on Codacy. If this didn't solve your issue, be sure to also check out the following pages: I renamed my repository on the Git provider I moved my repository on the Git provider","title":"Why can't I see or add my organization's repositories?"},{"location":"faq/repositories/why-cant-i-see-or-add-my-organizations-repositories/#why-cant-i-see-or-add-my-organizations-repositories","text":"If you can't see or add your organization's repositories, or have any problems regarding metrics (e.g. you can't see any issues and your pull requests aren't analyzed), please check if your user account has a duplicated copy of the repository on the organization. The ideal scenario for your organization's repositories is to have a unique copy of it added to your Codacy organization, by someone with write permissions on the repository. In case you have a duplicated repository on your account, please delete it and use only the one available in your organization. In the unlikely event of not seeing repositories for one/multiple organizations, please go to your GitHub settings and revoke Codacy OAuth application. After revoking Codacy from the GitHub Authorized OAuth Apps, go back to Codacy and add a repository to see the \"Authorize Codacy\" menu. (Note you may have to click \"GitHub\" on the sidebar to request for Codacy's permission on GitHub's side) Click \"Grant\" on each organization, to see their repositories on Codacy. If this didn't solve your issue, be sure to also check out the following pages: I renamed my repository on the Git provider I moved my repository on the Git provider","title":"Why can't I see or add my organization's repositories?"},{"location":"faq/troubleshooting/failed-to-clone-the-repository-generate-a-new-ssh-key/","text":"Failed to clone the repository, generate a new SSH key \u00b6 SSH keys are exclusively used for repository cloning. Depending on the level of access that the user configuring the repository on Codacy has on the remote Git provider, the key can be added either: Directly to the repository itself, if the user has permissions to add keys to the repository To the user account, if the user only has permissions to read or commit to the repository For this reason, some changes on the remote Git provider can prevent Codacy from cloning the repository. The repository was renamed or moved \u00b6 If you renamed the repository or moved it to a different account on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Update name . The user that configured the repository no longer has access \u00b6 If the user that initially configured the repository on Codacy was using a user account key but no longer has access to the repository on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Generate New Repository Key (recommended) or Generate New User Key : Generate New Repository Key is the recommended option. It will add a new SSH key to your repository deployment keys. However, this is only possible if the user configuring the integration with the remote Git provider has permissions to add keys to the repository. Otherwise, this operation will fail. Alternatively, you can also do this process manually by copying the SSH key. Generate New User Key should only be used if your repository is using submodules on Codacy . When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . Open the tab Integrations . If you have an integration with your Git provider enabled, remove and re-create the integration.","title":"Failed to clone the repository, generate a new SSH key"},{"location":"faq/troubleshooting/failed-to-clone-the-repository-generate-a-new-ssh-key/#failed-to-clone-the-repository-generate-a-new-ssh-key","text":"SSH keys are exclusively used for repository cloning. Depending on the level of access that the user configuring the repository on Codacy has on the remote Git provider, the key can be added either: Directly to the repository itself, if the user has permissions to add keys to the repository To the user account, if the user only has permissions to read or commit to the repository For this reason, some changes on the remote Git provider can prevent Codacy from cloning the repository.","title":"Failed to clone the repository, generate a new SSH key"},{"location":"faq/troubleshooting/failed-to-clone-the-repository-generate-a-new-ssh-key/#the-repository-was-renamed-or-moved","text":"If you renamed the repository or moved it to a different account on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Update name .","title":"The repository was renamed or moved"},{"location":"faq/troubleshooting/failed-to-clone-the-repository-generate-a-new-ssh-key/#the-user-that-configured-the-repository-no-longer-has-access","text":"If the user that initially configured the repository on Codacy was using a user account key but no longer has access to the repository on the Git provider: On Codacy, open your Repository Settings , tab General . Click the button Generate New Repository Key (recommended) or Generate New User Key : Generate New Repository Key is the recommended option. It will add a new SSH key to your repository deployment keys. However, this is only possible if the user configuring the integration with the remote Git provider has permissions to add keys to the repository. Otherwise, this operation will fail. Alternatively, you can also do this process manually by copying the SSH key. Generate New User Key should only be used if your repository is using submodules on Codacy . When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . Open the tab Integrations . If you have an integration with your Git provider enabled, remove and re-create the integration.","title":"The user that configured the repository no longer has access"},{"location":"faq/troubleshooting/not-a-member-of-the-organization/","text":"Not a member of the organization \u00b6 When you see this message, it means that the email that is being used to make the commit is not from a repository collaborator, and we cannot analyze the commit. There may be different reasons for this to happen: That user has not been invited to join the organization. When you have multiple collaborators in a repository, the ideal scenario is to add the repository to a Codacy organization and invite all the collaborators . The email used to commit is not associated with the collaborator's Codacy account. Email addresses in Codacy are based on your profile with your Git provider, so if you change your address there, this will reflect in your Codacy account. Once you change the information in the Git provider, please log out and log in again from Codacy. Note Please note that .local emails cannot be added to Codacy. In this case, please use the email address that is already associated with your Codacy account.","title":"Not a member of the organization"},{"location":"faq/troubleshooting/not-a-member-of-the-organization/#not-a-member-of-the-organization","text":"When you see this message, it means that the email that is being used to make the commit is not from a repository collaborator, and we cannot analyze the commit. There may be different reasons for this to happen: That user has not been invited to join the organization. When you have multiple collaborators in a repository, the ideal scenario is to add the repository to a Codacy organization and invite all the collaborators . The email used to commit is not associated with the collaborator's Codacy account. Email addresses in Codacy are based on your profile with your Git provider, so if you change your address there, this will reflect in your Codacy account. Once you change the information in the Git provider, please log out and log in again from Codacy. Note Please note that .local emails cannot be added to Codacy. In this case, please use the email address that is already associated with your Codacy account.","title":"Not a member of the organization"},{"location":"faq/troubleshooting/why-arent-duplication-metrics-being-calculated/","text":"Why aren't duplication metrics being calculated? \u00b6 For performance reasons, Codacy limits the analysis of code duplication to 5000 files of the same programming language in each repository. Besides this, if Codacy fails to calculate code duplication for a specific programming language in a repository three times in a row (for example, because the tool calculating the analysis runs out of memory or times out), Codacy stops trying to analyze the metric for that language and repository. When this happens, Codacy does not display code duplication metrics for the affected language: The Files page on your repository displays a blank duplication value for files of the affected language. The Commits and Pull Request pages display an empty New Duplication tab. The analysis logs for commits will not display a duplication analysis task for the tool corresponding to the affected language. As a workaround, if you are exceeding the maximum number of source code files: We recommend that you use a Codacy configuration file to exclude source code files of the affected language from your project to decrease the number of files to be analyzed. For example, you may be able to exclude files that are automatically generated from your test suite or files belonging to dependencies that are not maintained by your team, such as the node_modules folder for JavaScript projects. Reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If the analysis finishes but the code duplication metric was not calculated, follow the next steps: If you are using Codacy Self-hosted , open the Admin panel , Repositories , select the repository, and reset the code duplication analysis in Duplication settings . Then, reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If you are analyzing your repository locally with codacy-analysis-cli , consider using the flag --tool-timeout to specify a larger timeout for the execution of the tool. If you are using Codacy Cloud or if the steps above did not solve the issue, contact support@codacy.com .","title":"Why aren't duplication metrics being calculated?"},{"location":"faq/troubleshooting/why-arent-duplication-metrics-being-calculated/#why-arent-duplication-metrics-being-calculated","text":"For performance reasons, Codacy limits the analysis of code duplication to 5000 files of the same programming language in each repository. Besides this, if Codacy fails to calculate code duplication for a specific programming language in a repository three times in a row (for example, because the tool calculating the analysis runs out of memory or times out), Codacy stops trying to analyze the metric for that language and repository. When this happens, Codacy does not display code duplication metrics for the affected language: The Files page on your repository displays a blank duplication value for files of the affected language. The Commits and Pull Request pages display an empty New Duplication tab. The analysis logs for commits will not display a duplication analysis task for the tool corresponding to the affected language. As a workaround, if you are exceeding the maximum number of source code files: We recommend that you use a Codacy configuration file to exclude source code files of the affected language from your project to decrease the number of files to be analyzed. For example, you may be able to exclude files that are automatically generated from your test suite or files belonging to dependencies that are not maintained by your team, such as the node_modules folder for JavaScript projects. Reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If the analysis finishes but the code duplication metric was not calculated, follow the next steps: If you are using Codacy Self-hosted , open the Admin panel , Repositories , select the repository, and reset the code duplication analysis in Duplication settings . Then, reanalyze the last commit in the repository so that Codacy runs the code duplication analysis. If you are analyzing your repository locally with codacy-analysis-cli , consider using the flag --tool-timeout to specify a larger timeout for the execution of the tool. If you are using Codacy Cloud or if the steps above did not solve the issue, contact support@codacy.com .","title":"Why aren't duplication metrics being calculated?"},{"location":"faq/troubleshooting/why-cant-i-configure-post-commit-hooks-and-integrations/","text":"Why can't I configure post-commit hooks and integrations? \u00b6 Have you added your repository manually (via URL)? In that case, Codacy won't allow the integration to be added, causing the issue with post-commit hooks. To get this sorted, you will have to remove your repository and re-add it via our wizard page. If you are still unable to configure the integration, please contact us on support@codacy.com .","title":"Why can't I configure post-commit hooks and integrations?"},{"location":"faq/troubleshooting/why-cant-i-configure-post-commit-hooks-and-integrations/#why-cant-i-configure-post-commit-hooks-and-integrations","text":"Have you added your repository manually (via URL)? In that case, Codacy won't allow the integration to be added, causing the issue with post-commit hooks. To get this sorted, you will have to remove your repository and re-add it via our wizard page. If you are still unable to configure the integration, please contact us on support@codacy.com .","title":"Why can't I configure post-commit hooks and integrations?"},{"location":"faq/troubleshooting/why-is-my-file-missing/","text":"Why is my file missing? \u00b6 In your repository's Files page you can view all the files that Codacy detected in your repository: While all of the files in your repository should be displayed here, here is a list of reasons why some files might be missing: You are viewing the incorrect branch In the Files view you can pick which branch is being displayed at any given time, and sometimes not all files exist in all branches. The file has an extension that is not on the list of supported extensions Codacy has a default set of extensions that will associate to each language. Any file that has an extension that does not match any of those on the list will not appear in Codacy. You can find detailed information here on how to configure this list. The file might have been ignored Codacy allows you to ignore files that should not be analyzed. Those files will not be displayed on the UI. You can find more details on how to ignore files here . The file might be too big Codacy will only display files up to 150 KB. Read about the file size limitation on Codacy Cloud for more information. File size limitation on Codacy Cloud \u00b6 Codacy Cloud currently does not analyze files that are above 150 KB in size. Larger files are not displayed on Codacy nor taken into account when grading your repository. Why is there a limit? \u00b6 As part of our performance improvement measures, we spent time breaking down our total time it takes to analyze a file and found that a large percentage was focused on files that did not add value to our users. Those files tend to be the biggest in the repository and mostly generated by or dependent on a third-party. It increased analysis time significantly due to the file size and even resulted in time-outs at some point, preventing the real issues from being flagged. As a solution to this problem, we placed a size limit to the files that Codacy would analyze. This decreased the average analysis time and the number of timeouts hence improving overall performance for our users. What if I really need a file analyzed that is over this limit? \u00b6 While Codacy will discard your file by default, you can still have it analyzed using our CLI and running the analysis locally. CLI does not have a set timeout or any limitation on file size, so you will be able to have your files analyzed this way. What about Self-hosted instances? \u00b6 By default, Codacy Self-hosted has the same limit of 150 KB as our Cloud version but it's configurable because the resource allocation for on-premise instances is left up to each organization. The change can be done on the Configuration panel:","title":"Why is my file missing?"},{"location":"faq/troubleshooting/why-is-my-file-missing/#why-is-my-file-missing","text":"In your repository's Files page you can view all the files that Codacy detected in your repository: While all of the files in your repository should be displayed here, here is a list of reasons why some files might be missing: You are viewing the incorrect branch In the Files view you can pick which branch is being displayed at any given time, and sometimes not all files exist in all branches. The file has an extension that is not on the list of supported extensions Codacy has a default set of extensions that will associate to each language. Any file that has an extension that does not match any of those on the list will not appear in Codacy. You can find detailed information here on how to configure this list. The file might have been ignored Codacy allows you to ignore files that should not be analyzed. Those files will not be displayed on the UI. You can find more details on how to ignore files here . The file might be too big Codacy will only display files up to 150 KB. Read about the file size limitation on Codacy Cloud for more information.","title":"Why is my file missing?"},{"location":"faq/troubleshooting/why-is-my-file-missing/#file-size-limitation-on-codacy-cloud","text":"Codacy Cloud currently does not analyze files that are above 150 KB in size. Larger files are not displayed on Codacy nor taken into account when grading your repository.","title":"File size limitation on Codacy Cloud"},{"location":"faq/troubleshooting/why-is-my-file-missing/#why-is-there-a-limit","text":"As part of our performance improvement measures, we spent time breaking down our total time it takes to analyze a file and found that a large percentage was focused on files that did not add value to our users. Those files tend to be the biggest in the repository and mostly generated by or dependent on a third-party. It increased analysis time significantly due to the file size and even resulted in time-outs at some point, preventing the real issues from being flagged. As a solution to this problem, we placed a size limit to the files that Codacy would analyze. This decreased the average analysis time and the number of timeouts hence improving overall performance for our users.","title":"Why is there a limit?"},{"location":"faq/troubleshooting/why-is-my-file-missing/#what-if-i-really-need-a-file-analyzed-that-is-over-this-limit","text":"While Codacy will discard your file by default, you can still have it analyzed using our CLI and running the analysis locally. CLI does not have a set timeout or any limitation on file size, so you will be able to have your files analyzed this way.","title":"What if I really need a file analyzed that is over this limit?"},{"location":"faq/troubleshooting/why-is-my-file-missing/#what-about-self-hosted-instances","text":"By default, Codacy Self-hosted has the same limit of 150 KB as our Cloud version but it's configurable because the resource allocation for on-premise instances is left up to each organization. The change can be done on the Configuration panel:","title":"What about Self-hosted instances?"},{"location":"faq/troubleshooting/why-isnt-codacy-commenting-on-pull-requests-anymore/","text":"Why isn't Codacy commenting on pull requests anymore? \u00b6 There are various reasons for Codacy to stop commenting on pull requests. The most common are that the user who enabled the integration no longer has permissions on the repository or that the SSH key is no longer valid. We recommend having a user with admin permissions on the repository recreate the integration in Codacy. If you still have any problems, please contact us at support@codacy.com .","title":"Why isn't Codacy commenting on pull requests anymore?"},{"location":"faq/troubleshooting/why-isnt-codacy-commenting-on-pull-requests-anymore/#why-isnt-codacy-commenting-on-pull-requests-anymore","text":"There are various reasons for Codacy to stop commenting on pull requests. The most common are that the user who enabled the integration no longer has permissions on the repository or that the SSH key is no longer valid. We recommend having a user with admin permissions on the repository recreate the integration in Codacy. If you still have any problems, please contact us at support@codacy.com .","title":"Why isn't Codacy commenting on pull requests anymore?"},{"location":"faq/troubleshooting/why-isnt-my-public-repository-being-analysed/","text":"Why isn't my public repository being analysed? \u00b6 Open source repositories can only be analysed if the owner of the repository is a committer to that repository.","title":"Why isn't my public repository being analysed?"},{"location":"faq/troubleshooting/why-isnt-my-public-repository-being-analysed/#why-isnt-my-public-repository-being-analysed","text":"Open source repositories can only be analysed if the owner of the repository is a committer to that repository.","title":"Why isn't my public repository being analysed?"},{"location":"getting-started/getting-started-with-codacy/","text":"Getting started with Codacy \u00b6 Codacy automatically identifies issues through static code review analysis and notifies you on security issues, code coverage, code duplication, and code complexity in every commit and pull request. To get started, head to codacy.com and click Get started . 1. Sign up \u00b6 Signing up with a Git provider such as GitHub links your Codacy user with your Git provider user, making it easier to add repositories to Codacy and invite your teammates. You\u2019ll be prompted to allow Codacy access to your Git provider during the authorization flow. Read more about the permissions Codacy requires and why . 2. Account Details \u00b6 You\u2019ll be asked to fill in a few details about your company so we know a bit more about your use case. 3. Choose an organization \u00b6 Now, you\u2019ll need to select the organization that contains your repositories. If you can\u2019t see the organization you are looking for, read this troubleshooting page . The selected organization will then be synced with Codacy so that managing your team permissions is easy. Read more about what synced organizations do . 4. Add repositories \u00b6 And as a final step, you can select the repositories that you wish to analyze. Codacy will start the first analysis and set up everything required to ensure your next commits on those repositories are analyzed. 5. You're all set! \ud83c\udf89 \u00b6 Read our guide on what to do with a newly added repository to explore static analysis issues and continue configuring your repository.","title":"Getting started with Codacy"},{"location":"getting-started/getting-started-with-codacy/#getting-started-with-codacy","text":"Codacy automatically identifies issues through static code review analysis and notifies you on security issues, code coverage, code duplication, and code complexity in every commit and pull request. To get started, head to codacy.com and click Get started .","title":"Getting started with Codacy"},{"location":"getting-started/getting-started-with-codacy/#1-sign-up","text":"Signing up with a Git provider such as GitHub links your Codacy user with your Git provider user, making it easier to add repositories to Codacy and invite your teammates. You\u2019ll be prompted to allow Codacy access to your Git provider during the authorization flow. Read more about the permissions Codacy requires and why .","title":"1. Sign up"},{"location":"getting-started/getting-started-with-codacy/#2-account-details","text":"You\u2019ll be asked to fill in a few details about your company so we know a bit more about your use case.","title":"2. Account Details"},{"location":"getting-started/getting-started-with-codacy/#3-choose-an-organization","text":"Now, you\u2019ll need to select the organization that contains your repositories. If you can\u2019t see the organization you are looking for, read this troubleshooting page . The selected organization will then be synced with Codacy so that managing your team permissions is easy. Read more about what synced organizations do .","title":"3. Choose an organization"},{"location":"getting-started/getting-started-with-codacy/#4-add-repositories","text":"And as a final step, you can select the repositories that you wish to analyze. Codacy will start the first analysis and set up everything required to ensure your next commits on those repositories are analyzed.","title":"4. Add repositories"},{"location":"getting-started/getting-started-with-codacy/#5-youre-all-set","text":"Read our guide on what to do with a newly added repository to explore static analysis issues and continue configuring your repository.","title":"5. You're all set!  \ud83c\udf89"},{"location":"getting-started/i-added-a-repository-now-what/","text":"I added a repository. Now what? \u00b6 Codacy begins an initial analysis as soon as you add a repository and sends you an email notification once the first analysis is completed. After the first analysis is complete you can continue to explore and configure Codacy for your repository: Check the Issues page for the static analysis results Read about configuring Code patterns Configure your Quality Settings for Pull Requests Discover how you can add coverage reports to Codacy Add a Codacy configuration file to your repository and version your configurations","title":"I added a repository. Now what?"},{"location":"getting-started/i-added-a-repository-now-what/#i-added-a-repository-now-what","text":"Codacy begins an initial analysis as soon as you add a repository and sends you an email notification once the first analysis is completed. After the first analysis is complete you can continue to explore and configure Codacy for your repository: Check the Issues page for the static analysis results Read about configuring Code patterns Configure your Quality Settings for Pull Requests Discover how you can add coverage reports to Codacy Add a Codacy configuration file to your repository and version your configurations","title":"I added a repository. Now what?"},{"location":"getting-started/setting-up-your-personal-repositories/","text":"Setting up your personal repositories \u00b6 The onboarding wizard guides you through importing repositories from your Git provider to Codacy Organizations. However, you may also want to add your personal repositories that do not belong to any Organization to Codacy. Setting up a personal repository \u00b6 If you are logged in to Codacy through a Git provider account, you should be presented with a list of repositories when you click on the Add repository button at the top of the repositories screen. After finding your repositories, click the button Add next to each repository that you want to add to Codacy. Your repositories are now imported, and a first analysis will begin. Using the links on the sidebar It is also possible to import repositories from other Git providers, or to import private repositories if you\u2019re using GitHub.","title":"Setting up your personal repositories"},{"location":"getting-started/setting-up-your-personal-repositories/#setting-up-your-personal-repositories","text":"The onboarding wizard guides you through importing repositories from your Git provider to Codacy Organizations. However, you may also want to add your personal repositories that do not belong to any Organization to Codacy.","title":"Setting up your personal repositories"},{"location":"getting-started/setting-up-your-personal-repositories/#setting-up-a-personal-repository","text":"If you are logged in to Codacy through a Git provider account, you should be presented with a list of repositories when you click on the Add repository button at the top of the repositories screen. After finding your repositories, click the button Add next to each repository that you want to add to Codacy. Your repositories are now imported, and a first analysis will begin. Using the links on the sidebar It is also possible to import repositories from other Git providers, or to import private repositories if you\u2019re using GitHub.","title":"Setting up a personal repository"},{"location":"getting-started/supported-languages/","text":"Supported Languages \u00b6 We are always working on adding support for more languages. Our supported languages generally include support for Static Analysis, Code Duplication, Code Complexity, and Test Coverage. We support the following languages: Apex C CPP C# CoffeeScript Crystal CSS Dockerfile Elixir Go Groovy Java JavaScript JSON JSP Kotlin LESS Markdown PHP PLSQL Powershell Python Ruby SASS Scala Shell Script Swift TypeScript Velocity Visual Basic VisualForce XML Adding a new language \u00b6 You can see a full list of plugin engines we support here .","title":"Supported Languages"},{"location":"getting-started/supported-languages/#supported-languages","text":"We are always working on adding support for more languages. Our supported languages generally include support for Static Analysis, Code Duplication, Code Complexity, and Test Coverage. We support the following languages: Apex C CPP C# CoffeeScript Crystal CSS Dockerfile Elixir Go Groovy Java JavaScript JSON JSP Kotlin LESS Markdown PHP PLSQL Powershell Python Ruby SASS Scala Shell Script Swift TypeScript Velocity Visual Basic VisualForce XML","title":"Supported Languages"},{"location":"getting-started/supported-languages/#adding-a-new-language","text":"You can see a full list of plugin engines we support here .","title":"Adding a new language"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/","text":"Which permissions does Codacy need from my account? \u00b6 Codacy Cloud uses OAuth to handle logins. We support the following providers: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-In Depending on the provider, we may request different permissions due to different OAuth implementations. We strive to request only the necessary permissions. GitHub Cloud \u00b6 If you log in with GitHub, Codacy requires the following permissions/scopes : 'user' permissions to access GitHub user info 'public_repo' permissions to set PR status on public repositories 'repo' access to access private repositories 'write: public_key' to add SSH keys to the repositories, so that Codacy can have access to the repository 'write:repo_hook' access to add post-commit hooks 'read:org': read-only access to organization membership, organization repositories, and team membership 'admin:org_hook' to access organization hooks GitHub Cloud using GitHub Apps \u00b6 If you log in with GitHub, Codacy requires the following app permissions : Repository permissions: Checks: Checks on code - Read & Write Issues: Issues and related comments, assignees, labels, and milestones - Read & Write Metadata: Search repositories, list collaborators, and access repository metadata - Read Only Pull requests: Pull requests and related comments, assignees, labels, milestones, and merges - Read & Write Webhooks: Manage the post-receive hooks for a repository - Read & Write Commit statuses: Commit statuses - Read & Write Administration: Create SSH keys - Read & Write. Codacy creates an SSH key on the repository to allow cloning and integrating with your repository. Organization permissions: Members: Organization members and teams - Read Only Webhooks: Manage the post-receive hooks for an organization - Read & Write User permissions: These permissions are granted on an individual user basis as part of the User authorization flow. They will be also be displayed during account installation for transparency. Email addresses: Manage a user's email addresses - Read Only Git SSH keys: Create SSH keys - Read & Write. Codacy may need to create an SSH key in your account: If your repository uses submodules, so that Codacy can clone the repositories for each submodule, or If Codacy fails to integrate with a repository using the repository key, so that Codacy can continue to perform analysis. GitLab Cloud \u00b6 If you sign up with GitLab Cloud, Codacy requires the following permissions/scopes : \u2018api\u2019 permissions to access the authenticated user's API \u2018read_user\u2019 permissions to read the authenticated user's personal information \u2018read_repository\u2019 permissions to read the repositories \u2018openid\u2019 to authenticate using OpenID Connect Bitbucket Cloud \u00b6 If you log in with Bitbucket, Codacy requires the following permissions/scopes : Read and modify your account information Read and modify your repositories' issues Read your workspace\u2019s project settings and read repositories contained within your workspace's projects Read and modify your repositories and their pull requests Administer your repositories Read your group membership information Read and modify your repositories' webhooks Google Sign-In \u00b6 If you log in with Google, Codacy requires the following permissions/scopes : Email permission Revoking access to integrations \u00b6 To revoke the access from Codacy to one or more of the OAuth providers: Click on your avatar on the top right-hand corner an select Your Account , tab Access Management . The Access Management page lists all current integrations with Git providers or Google that you used to sign in or log in to Codacy. To revoke the access to an integration, click the button Revoke access for the intended integration. To ensure that the integration is removed not only on Codacy but also on the integration side, we recommend that you follow the instructions on how to revoke the Codacy OAuth application on your provider: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-in After revoking an integration, Codacy will no longer be able to access or manipulate resources that require API calls, such as detecting new pull requests or adding comments to pull requests. However, Codacy will continue to be able to perform operations that only require using the Git protocol either via SSH or HTTPS, such as detecting new commits and calculating diffs. To unregister your repositories from Codacy and stop the analysis you must delete them from your Codacy account . If you need to use an integration that you have previously revoked, log in again to Codacy with that integration so that Codacy can request the required permissions from the provider.","title":"Which permissions does Codacy need from my account?"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#which-permissions-does-codacy-need-from-my-account","text":"Codacy Cloud uses OAuth to handle logins. We support the following providers: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-In Depending on the provider, we may request different permissions due to different OAuth implementations. We strive to request only the necessary permissions.","title":"Which permissions does Codacy need from my account?"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#github-cloud","text":"If you log in with GitHub, Codacy requires the following permissions/scopes : 'user' permissions to access GitHub user info 'public_repo' permissions to set PR status on public repositories 'repo' access to access private repositories 'write: public_key' to add SSH keys to the repositories, so that Codacy can have access to the repository 'write:repo_hook' access to add post-commit hooks 'read:org': read-only access to organization membership, organization repositories, and team membership 'admin:org_hook' to access organization hooks","title":"GitHub Cloud"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#github-cloud-using-github-apps","text":"If you log in with GitHub, Codacy requires the following app permissions : Repository permissions: Checks: Checks on code - Read & Write Issues: Issues and related comments, assignees, labels, and milestones - Read & Write Metadata: Search repositories, list collaborators, and access repository metadata - Read Only Pull requests: Pull requests and related comments, assignees, labels, milestones, and merges - Read & Write Webhooks: Manage the post-receive hooks for a repository - Read & Write Commit statuses: Commit statuses - Read & Write Administration: Create SSH keys - Read & Write. Codacy creates an SSH key on the repository to allow cloning and integrating with your repository. Organization permissions: Members: Organization members and teams - Read Only Webhooks: Manage the post-receive hooks for an organization - Read & Write User permissions: These permissions are granted on an individual user basis as part of the User authorization flow. They will be also be displayed during account installation for transparency. Email addresses: Manage a user's email addresses - Read Only Git SSH keys: Create SSH keys - Read & Write. Codacy may need to create an SSH key in your account: If your repository uses submodules, so that Codacy can clone the repositories for each submodule, or If Codacy fails to integrate with a repository using the repository key, so that Codacy can continue to perform analysis.","title":"GitHub Cloud using GitHub Apps"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#gitlab-cloud","text":"If you sign up with GitLab Cloud, Codacy requires the following permissions/scopes : \u2018api\u2019 permissions to access the authenticated user's API \u2018read_user\u2019 permissions to read the authenticated user's personal information \u2018read_repository\u2019 permissions to read the repositories \u2018openid\u2019 to authenticate using OpenID Connect","title":"GitLab Cloud"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#bitbucket-cloud","text":"If you log in with Bitbucket, Codacy requires the following permissions/scopes : Read and modify your account information Read and modify your repositories' issues Read your workspace\u2019s project settings and read repositories contained within your workspace's projects Read and modify your repositories and their pull requests Administer your repositories Read your group membership information Read and modify your repositories' webhooks","title":"Bitbucket Cloud"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#google-sign-in","text":"If you log in with Google, Codacy requires the following permissions/scopes : Email permission","title":"Google Sign-In"},{"location":"getting-started/which-permissions-does-codacy-need-from-my-account/#revoking-access-to-integrations","text":"To revoke the access from Codacy to one or more of the OAuth providers: Click on your avatar on the top right-hand corner an select Your Account , tab Access Management . The Access Management page lists all current integrations with Git providers or Google that you used to sign in or log in to Codacy. To revoke the access to an integration, click the button Revoke access for the intended integration. To ensure that the integration is removed not only on Codacy but also on the integration side, we recommend that you follow the instructions on how to revoke the Codacy OAuth application on your provider: GitHub Cloud GitLab Cloud Bitbucket Cloud Google Sign-in After revoking an integration, Codacy will no longer be able to access or manipulate resources that require API calls, such as detecting new pull requests or adding comments to pull requests. However, Codacy will continue to be able to perform operations that only require using the Git protocol either via SSH or HTTPS, such as detecting new commits and calculating diffs. To unregister your repositories from Codacy and stop the analysis you must delete them from your Codacy account . If you need to use an integration that you have previously revoked, log in again to Codacy with that integration so that Codacy can request the required permissions from the provider.","title":"Revoking access to integrations"},{"location":"organizations/adding-and-managing-authors/","text":"Adding and managing Authors \u00b6 What are Authors? \u00b6 Authors are a mechanism for inviting commit authors to your Codacy organization that are not members of your organization. You might find yourself in a position where you want to analyze commits that were authored with redacted git committer emails or bot-generated emails. Under Authors, you will see people whose commits are being analyzed, in addition to the members of your organization. You will be charged for each Author according to your plan. Adding Authors \u00b6 You can add Authors in the People section of your organization settings or directly on a Pull request page. Managing authors \u00b6 You can manage your existing Authors in the People section of your organization settings.","title":"Adding and managing Authors"},{"location":"organizations/adding-and-managing-authors/#adding-and-managing-authors","text":"","title":"Adding and managing Authors"},{"location":"organizations/adding-and-managing-authors/#what-are-authors","text":"Authors are a mechanism for inviting commit authors to your Codacy organization that are not members of your organization. You might find yourself in a position where you want to analyze commits that were authored with redacted git committer emails or bot-generated emails. Under Authors, you will see people whose commits are being analyzed, in addition to the members of your organization. You will be charged for each Author according to your plan.","title":"What are Authors?"},{"location":"organizations/adding-and-managing-authors/#adding-authors","text":"You can add Authors in the People section of your organization settings or directly on a Pull request page.","title":"Adding Authors"},{"location":"organizations/adding-and-managing-authors/#managing-authors","text":"You can manage your existing Authors in the People section of your organization settings.","title":"Managing authors"},{"location":"organizations/authors-vs-members/","text":"Authors vs Members \u00b6 With the new Synced Organizations, we introduced the concept of an Author. This article explains the main differences between an Author and a Member and how a user can change from one to the other. Regarding the analysis of commits, as soon as an Author is added all commits made with that email will be analyzed by Codacy as if you were a normal Member. If your normal workflow doesn't include using Codacy's UI and instead you work with the information sent to the Git provider, being an Author is the perfect fit for you. On the other hand, if you are interested on the information available on Codacy's UI, be it regarding issues detected, patterns being used, or the current settings of a repository, you will have to become a Member of the organization. To do so, click \"Organizations\" on the top right-hand menu under your avatar and you will see a list of organizations that you can join: As soon as you join the organization you will be added as a Member and removed from the Authors list, if your email was there. As a Member, you will be able to see the organization's repositories on Codacy, add new ones to be analyzed, and check each the details of each repository.","title":"Authors vs Members"},{"location":"organizations/authors-vs-members/#authors-vs-members","text":"With the new Synced Organizations, we introduced the concept of an Author. This article explains the main differences between an Author and a Member and how a user can change from one to the other. Regarding the analysis of commits, as soon as an Author is added all commits made with that email will be analyzed by Codacy as if you were a normal Member. If your normal workflow doesn't include using Codacy's UI and instead you work with the information sent to the Git provider, being an Author is the perfect fit for you. On the other hand, if you are interested on the information available on Codacy's UI, be it regarding issues detected, patterns being used, or the current settings of a repository, you will have to become a Member of the organization. To do so, click \"Organizations\" on the top right-hand menu under your avatar and you will see a list of organizations that you can join: As soon as you join the organization you will be added as a Member and removed from the Authors list, if your email was there. As a Member, you will be able to see the organization's repositories on Codacy, add new ones to be analyzed, and check each the details of each repository.","title":"Authors vs Members"},{"location":"organizations/how-to-configure-which-users-can-ignore-issues/","text":"How to configure which users can ignore issues \u00b6 Note Applies only to GitHub Cloud and GitHub Enterprise Sometimes we have patterns on our repository that haven't been configured to be the perfect fit for a particular standard; or we do have the correct patterns but we will not tackle some of the issues immediately. On those and other cases the best way to proceed is to ignore the issues, either because they are not relevant or will not be tackled in the immediate future. By default, only users with Admin permission on a repository can ignore issues , but this can be changed. In your Organization's settings, you can find \"Members privileges\" where you can define the lowest permission required to ignore issues for your organization. It is not possible to change the role of a user in Codacy, as the roles are mirrored from your Git provider and applied to each repository.","title":"How to configure which users can ignore issues"},{"location":"organizations/how-to-configure-which-users-can-ignore-issues/#how-to-configure-which-users-can-ignore-issues","text":"Note Applies only to GitHub Cloud and GitHub Enterprise Sometimes we have patterns on our repository that haven't been configured to be the perfect fit for a particular standard; or we do have the correct patterns but we will not tackle some of the issues immediately. On those and other cases the best way to proceed is to ignore the issues, either because they are not relevant or will not be tackled in the immediate future. By default, only users with Admin permission on a repository can ignore issues , but this can be changed. In your Organization's settings, you can find \"Members privileges\" where you can define the lowest permission required to ignore issues for your organization. It is not possible to change the role of a user in Codacy, as the roles are mirrored from your Git provider and applied to each repository.","title":"How to configure which users can ignore issues"},{"location":"organizations/managing-repositories-in-your-organization/","text":"Managing repositories in your organization \u00b6 To see a list of the repositories that Codacy is monitoring, open the page Repositories under your organization. This page lists the repositories that already belong to your organization on Codacy, and provides additional information that allows you to compare the repositories in the list: Grade Issues metric Complexity metric Duplication metric Coverage metric Last updated time The list also displays error messages and troubleshooting guidance for repositories that have an issue, such as when there are no committers added to the organization or when Codacy stopped having access to the repository. If you have a large number of repositories, you can use the search field above the list to quickly find a specific repository. Adding a repository \u00b6 To add a new repository to Codacy, click the button Add repository at the top right-hand corner of the page. This opens a window listing the repositories in your Git provider organization that do not belong to your organization on Codacy yet. Important To see your repositories in this list, make sure that you have admin permissions over the repositories on the Git provider and that Codacy has permissions to access the repositories . If you have a large number of repositories, you can use the search field above the list to quickly find a specific repository. Add one or multiple repositories by clicking Add next to the repositories. Once you finished adding repositories to your organization, close the window to return to the list of repositories in your organization. The repositories that you add will immediately start being analyzed by Codacy. However, the new repositories will display empty metrics until the first analysis returns results.","title":"Managing repositories in your organization"},{"location":"organizations/managing-repositories-in-your-organization/#managing-repositories-in-your-organization","text":"To see a list of the repositories that Codacy is monitoring, open the page Repositories under your organization. This page lists the repositories that already belong to your organization on Codacy, and provides additional information that allows you to compare the repositories in the list: Grade Issues metric Complexity metric Duplication metric Coverage metric Last updated time The list also displays error messages and troubleshooting guidance for repositories that have an issue, such as when there are no committers added to the organization or when Codacy stopped having access to the repository. If you have a large number of repositories, you can use the search field above the list to quickly find a specific repository.","title":"Managing repositories in your organization"},{"location":"organizations/managing-repositories-in-your-organization/#adding-a-repository","text":"To add a new repository to Codacy, click the button Add repository at the top right-hand corner of the page. This opens a window listing the repositories in your Git provider organization that do not belong to your organization on Codacy yet. Important To see your repositories in this list, make sure that you have admin permissions over the repositories on the Git provider and that Codacy has permissions to access the repositories . If you have a large number of repositories, you can use the search field above the list to quickly find a specific repository. Add one or multiple repositories by clicking Add next to the repositories. Once you finished adding repositories to your organization, close the window to return to the list of repositories in your organization. The repositories that you add will immediately start being analyzed by Codacy. However, the new repositories will display empty metrics until the first analysis returns results.","title":"Adding a repository"},{"location":"organizations/organization-dashboard-overview/","text":"Organization Dashboard overview \u00b6 Your Organization Dashboard offers an overview of repositories that belong to the same team. Here you can compare their statuses and check for items that require your attention. See below for a detailed overview of the dashboard and its functionalities. Overall \u00b6 On the Organization Dashboard, you have 5 sections that will help you monitor your team's repositories: 1 Overall Quality Chart , 2 Hotspots , 3 Open Pull Requests , 4 Logs and 5 Last updated repositories . How can I access the Organization Dashboard? \u00b6 You can access your Organization Dashboard by selecting a specific organization in the top navigation bar or by selecting an Organization in your Account Menu. You can also select which team(s) you would like to view in the Organization Dashboard. You cannot select a team that does not have any repositories to view in the Organization Dashboard. What functionalities are available? \u00b6 1. Overall Quality Chart \u00b6 The Overall Quality Chart displays your repositories and compares them against the average grade, your defined goal, and across each specific criteria: Issues, Complex Files, Duplication, and Coverage. In the upper left is the average grade (A, in this example). The graph displays how different repositories match up to your goals and the average grade. You can see how each repository is performing by hovering over the bar. If something is not up to standards, you will see it flagged. You can also go directly to each repository by clicking on the name of the repository at the bottom of each column. Other Criteria For each specific criteria (Issues, Complex Files, Duplication, and Coverage), you can click on its tab to compare repositories. This comparison will display your repositories' current statuses against the average and against your goal for this criteria. If you have over 8 repositories, you will see your repositories grouped by Grade or by the interval of Issues (number of repo you have with Issues between 0%-20%, 20%-40%, 40%-60%, 60%-80%, 80%-100%). Hover over each group of repositories to see a summary. What if you don't have Coverage set up? The graph will notify you when you click on the Coverage tab if you don't have Coverage set up for any of your repositories. What if I don't have enough repositories for comparison? If you don't have enough enough repositories for comparison, don't worry - we have included some Open Source repositories for comparison so you can see how you match up. 2. Hotspots \u00b6 Hotspots are items that require your attention. You can click through on each to view the pull requests or dismiss them. This will dismiss the item for everybody in your team. Read more about hotspots here . 3. Open pull requests \u00b6 Under this section you can see two tabs: Most problematic pull requests (PR) and Last updated pull requests. These represent a short list of the open pull requests on the repositories of the Team you selected. Most problematic Here you can see a short list of the most problematic open pull requests in all repositories of the team(s) selected. These pull requests are defined as those not up to your defined standards that have the most potential to negatively affect your code quality. You can click directly on each pull request to see more details. Last updated This tab displays a short list of all open pull requests sorted by the date of update with a status. Pull requests can be: \"Not up to standards\", \"Up to standards\", \"Analysis failed\" (in case something went wrong during the analysis) or \"Analyzing\" (an intermediate status while the pull request is under analysis). 4. Logs \u00b6 Logs display a list of all relevant activity in your organization. You can read more about them here . 5. Last updated repositories \u00b6 This section displays a maximum of 6 repositories by date of last update. Each repository card will display the date of the last update, the current grade, and the status for each criteria. You can also See all repositories or Add a repository here. We would love your feedback on what you think about the Organization Dashboard and how you think it could be improved. Please feel free to reach out!","title":"Organization Dashboard overview"},{"location":"organizations/organization-dashboard-overview/#organization-dashboard-overview","text":"Your Organization Dashboard offers an overview of repositories that belong to the same team. Here you can compare their statuses and check for items that require your attention. See below for a detailed overview of the dashboard and its functionalities.","title":"Organization Dashboard overview"},{"location":"organizations/organization-dashboard-overview/#overall","text":"On the Organization Dashboard, you have 5 sections that will help you monitor your team's repositories: 1 Overall Quality Chart , 2 Hotspots , 3 Open Pull Requests , 4 Logs and 5 Last updated repositories .","title":"Overall"},{"location":"organizations/organization-dashboard-overview/#how-can-i-access-the-organization-dashboard","text":"You can access your Organization Dashboard by selecting a specific organization in the top navigation bar or by selecting an Organization in your Account Menu. You can also select which team(s) you would like to view in the Organization Dashboard. You cannot select a team that does not have any repositories to view in the Organization Dashboard.","title":"How can I access the Organization Dashboard?"},{"location":"organizations/organization-dashboard-overview/#what-functionalities-are-available","text":"","title":"What functionalities are available?"},{"location":"organizations/organization-dashboard-overview/#1-overall-quality-chart","text":"The Overall Quality Chart displays your repositories and compares them against the average grade, your defined goal, and across each specific criteria: Issues, Complex Files, Duplication, and Coverage. In the upper left is the average grade (A, in this example). The graph displays how different repositories match up to your goals and the average grade. You can see how each repository is performing by hovering over the bar. If something is not up to standards, you will see it flagged. You can also go directly to each repository by clicking on the name of the repository at the bottom of each column. Other Criteria For each specific criteria (Issues, Complex Files, Duplication, and Coverage), you can click on its tab to compare repositories. This comparison will display your repositories' current statuses against the average and against your goal for this criteria. If you have over 8 repositories, you will see your repositories grouped by Grade or by the interval of Issues (number of repo you have with Issues between 0%-20%, 20%-40%, 40%-60%, 60%-80%, 80%-100%). Hover over each group of repositories to see a summary. What if you don't have Coverage set up? The graph will notify you when you click on the Coverage tab if you don't have Coverage set up for any of your repositories. What if I don't have enough repositories for comparison? If you don't have enough enough repositories for comparison, don't worry - we have included some Open Source repositories for comparison so you can see how you match up.","title":"1. Overall Quality Chart"},{"location":"organizations/organization-dashboard-overview/#2-hotspots","text":"Hotspots are items that require your attention. You can click through on each to view the pull requests or dismiss them. This will dismiss the item for everybody in your team. Read more about hotspots here .","title":"2. Hotspots"},{"location":"organizations/organization-dashboard-overview/#3-open-pull-requests","text":"Under this section you can see two tabs: Most problematic pull requests (PR) and Last updated pull requests. These represent a short list of the open pull requests on the repositories of the Team you selected. Most problematic Here you can see a short list of the most problematic open pull requests in all repositories of the team(s) selected. These pull requests are defined as those not up to your defined standards that have the most potential to negatively affect your code quality. You can click directly on each pull request to see more details. Last updated This tab displays a short list of all open pull requests sorted by the date of update with a status. Pull requests can be: \"Not up to standards\", \"Up to standards\", \"Analysis failed\" (in case something went wrong during the analysis) or \"Analyzing\" (an intermediate status while the pull request is under analysis).","title":"3. Open pull requests"},{"location":"organizations/organization-dashboard-overview/#4-logs","text":"Logs display a list of all relevant activity in your organization. You can read more about them here .","title":"4. Logs"},{"location":"organizations/organization-dashboard-overview/#5-last-updated-repositories","text":"This section displays a maximum of 6 repositories by date of last update. Each repository card will display the date of the last update, the current grade, and the status for each criteria. You can also See all repositories or Add a repository here. We would love your feedback on what you think about the Organization Dashboard and how you think it could be improved. Please feel free to reach out!","title":"5. Last updated repositories"},{"location":"organizations/roles-and-permissions-for-synced-organizations/","text":"Roles and permissions for synced organizations \u00b6 Depending on your role on the Git provider you will have different permissions on Codacy: Provider Role Join organization Ignore issues Add repo Configure repo View repo Invite and accept members Modify billing GitHub Cloud Outside Collaborator 1 No No No No No No No Member Configurable 2 No No No Yes No No Repository Admin Configurable 2 Yes Yes Yes Yes No No Owner Configurable 2 Yes Yes Yes Yes Yes Yes GitLab Cloud External User 1 No No No No No No No Guest Configurable 2 No No No Yes No No Reporter Configurable 2 No No No Yes No No Developer Configurable 2 Yes No No Yes No No Maintainer Configurable 2 Yes No No Yes No No Owner Configurable 2 Yes Yes Yes Yes Yes Yes Administrator Configurable 2 Yes Yes Yes Yes Yes Yes Bitbucket Server Read Configurable 2 No No No Yes No No Write Configurable 2 No No No Yes No No Admin Configurable 2 Yes Yes Yes Yes Yes Yes 1 : Outside Collaborators and External Users are not supported as Members of organizations on Codacy. However, you can add them as Authors so that their commits are analyzed by Codacy. 2 : Depending on your setting for accepting new people . You can check who joined your organization and their role in the People page on Codacy. \ud83d\udca1 If you would like to analyze commits from authors that do not belong to your organization, read more about Authors here . Please reach out to us if you have any questions.","title":"Roles and permissions for synced organizations"},{"location":"organizations/roles-and-permissions-for-synced-organizations/#roles-and-permissions-for-synced-organizations","text":"Depending on your role on the Git provider you will have different permissions on Codacy: Provider Role Join organization Ignore issues Add repo Configure repo View repo Invite and accept members Modify billing GitHub Cloud Outside Collaborator 1 No No No No No No No Member Configurable 2 No No No Yes No No Repository Admin Configurable 2 Yes Yes Yes Yes No No Owner Configurable 2 Yes Yes Yes Yes Yes Yes GitLab Cloud External User 1 No No No No No No No Guest Configurable 2 No No No Yes No No Reporter Configurable 2 No No No Yes No No Developer Configurable 2 Yes No No Yes No No Maintainer Configurable 2 Yes No No Yes No No Owner Configurable 2 Yes Yes Yes Yes Yes Yes Administrator Configurable 2 Yes Yes Yes Yes Yes Yes Bitbucket Server Read Configurable 2 No No No Yes No No Write Configurable 2 No No No Yes No No Admin Configurable 2 Yes Yes Yes Yes Yes Yes 1 : Outside Collaborators and External Users are not supported as Members of organizations on Codacy. However, you can add them as Authors so that their commits are analyzed by Codacy. 2 : Depending on your setting for accepting new people . You can check who joined your organization and their role in the People page on Codacy. \ud83d\udca1 If you would like to analyze commits from authors that do not belong to your organization, read more about Authors here . Please reach out to us if you have any questions.","title":"Roles and permissions for synced organizations"},{"location":"organizations/what-are-synced-organizations/","text":"What are synced organizations \u00b6 With synced organizations, your Git provider organizations and members will be automatically imported into Codacy. Changes to membership will reflect on Codacy real time and you can add new repositories to Codacy in one click. By setting up a synced organization, you are avoiding having to deal with manual team and repository management, duplicate repositories, stuck repositories created with insufficient permissions and blocked pull request status due to overriding. Adding an organization \u00b6 Organizations that can be added to Codacy show up on the Organizations list. If you can't see the organization you are looking for, find out what could be the possible reasons . Managing people in an organization \u00b6 You can see and manage who joined your organization on Codacy in the People page. Members can remove themselves from organizations, while owners can remove themselves as well as other users, even other owners. Organizations must have at least one owner. In the Plan and Billing page there are different ways to control who can join your organization: Allow new people to join : team members with access on the Git provider will be able to join Codacy automatically and your billing will be updated accordingly. New people request to join : team members need to request access in order to be able to join Codacy. You can override this setting for organization owners. Updates on the Git provider \u00b6 In case you change your organization or repository on the Git provider, they'll be reflected on Codacy. The following cases are supported: Changing the organization name Changing a repository name Changing a repository visibility Check out the roles and permission mapping from the Git providers . Deleting an organization \u00b6 Delete an organization to remove that organization and all its repositories from Codacy. To delete an organization, open the Profile page and click the button Delete organization . If you are using Codacy Cloud , Codacy will ask for your feedback on why you are deleting your organization.","title":"What are synced organizations"},{"location":"organizations/what-are-synced-organizations/#what-are-synced-organizations","text":"With synced organizations, your Git provider organizations and members will be automatically imported into Codacy. Changes to membership will reflect on Codacy real time and you can add new repositories to Codacy in one click. By setting up a synced organization, you are avoiding having to deal with manual team and repository management, duplicate repositories, stuck repositories created with insufficient permissions and blocked pull request status due to overriding.","title":"What are synced organizations"},{"location":"organizations/what-are-synced-organizations/#adding-an-organization","text":"Organizations that can be added to Codacy show up on the Organizations list. If you can't see the organization you are looking for, find out what could be the possible reasons .","title":"Adding an organization"},{"location":"organizations/what-are-synced-organizations/#managing-people-in-an-organization","text":"You can see and manage who joined your organization on Codacy in the People page. Members can remove themselves from organizations, while owners can remove themselves as well as other users, even other owners. Organizations must have at least one owner. In the Plan and Billing page there are different ways to control who can join your organization: Allow new people to join : team members with access on the Git provider will be able to join Codacy automatically and your billing will be updated accordingly. New people request to join : team members need to request access in order to be able to join Codacy. You can override this setting for organization owners.","title":"Managing people in an organization"},{"location":"organizations/what-are-synced-organizations/#updates-on-the-git-provider","text":"In case you change your organization or repository on the Git provider, they'll be reflected on Codacy. The following cases are supported: Changing the organization name Changing a repository name Changing a repository visibility Check out the roles and permission mapping from the Git providers .","title":"Updates on the Git provider"},{"location":"organizations/what-are-synced-organizations/#deleting-an-organization","text":"Delete an organization to remove that organization and all its repositories from Codacy. To delete an organization, open the Profile page and click the button Delete organization . If you are using Codacy Cloud , Codacy will ask for your feedback on why you are deleting your organization.","title":"Deleting an organization"},{"location":"organizations/why-cant-i-see-my-organization/","text":"Why can't I see my organization? \u00b6 If you don't see your organization on Codacy, try the following steps: Make sure you have access to the organization with the account you are logged in GitHub Apps only: Install Codacy in your organization . Force a refresh on Codacy by clicking the \ud83d\udd01button found in the organizations' page. Revoke Codacy's OAuth app on the git provider website. If these steps don't solve the issue, please get in touch with us.","title":"Why can't I see my organization?"},{"location":"organizations/why-cant-i-see-my-organization/#why-cant-i-see-my-organization","text":"If you don't see your organization on Codacy, try the following steps: Make sure you have access to the organization with the account you are logged in GitHub Apps only: Install Codacy in your organization . Force a refresh on Codacy by clicking the \ud83d\udd01button found in the organizations' page. Revoke Codacy's OAuth app on the git provider website. If these steps don't solve the issue, please get in touch with us.","title":"Why can't I see my organization?"},{"location":"organizations/manual-organizations/administrative-permissions/","text":"Administrative permissions \u00b6 Organization permissions allow fine-grained control over your organization's members and repositories. All organizations have an Administrators team. Each member of this team is an administrator of the entire organization, and all repositories in the organization are automatically added to this team. Any member of the Administrators team has full read/write permissions. You can view the actions available per permission level here: Organization Admin Add/Remove members Create/Remove teams Change organization settings Edit Billing information Delete Organization Add/Remove repositories Add/Remove integrations of team repositories Change code patterns Define/Change quality settings See repository issues and metrics For users that don't have Admin permissions, they will need to be added to a team . When adding users to a team, the Administrator can decide the level of permissions each team member should have for the repositories within that team. Team Read See repository issues and metrics Add repositories to the Administrators team (to add repo to a specific team needs to have write permissions) Write Same as Read permissions plus: Add repositories to specific teams Add/Remove integrations of team repositories Change code patterns See repository issues and metrics Ignore issues / remove patterns","title":"Administrative permissions"},{"location":"organizations/manual-organizations/administrative-permissions/#administrative-permissions","text":"Organization permissions allow fine-grained control over your organization's members and repositories. All organizations have an Administrators team. Each member of this team is an administrator of the entire organization, and all repositories in the organization are automatically added to this team. Any member of the Administrators team has full read/write permissions. You can view the actions available per permission level here: Organization Admin Add/Remove members Create/Remove teams Change organization settings Edit Billing information Delete Organization Add/Remove repositories Add/Remove integrations of team repositories Change code patterns Define/Change quality settings See repository issues and metrics For users that don't have Admin permissions, they will need to be added to a team . When adding users to a team, the Administrator can decide the level of permissions each team member should have for the repositories within that team. Team Read See repository issues and metrics Add repositories to the Administrators team (to add repo to a specific team needs to have write permissions) Write Same as Read permissions plus: Add repositories to specific teams Add/Remove integrations of team repositories Change code patterns See repository issues and metrics Ignore issues / remove patterns","title":"Administrative permissions"},{"location":"organizations/manual-organizations/creating-and-managing-teams/","text":"Creating and managing teams \u00b6 Creating a team \u00b6 To create a team, click on your avatar and select Organizations . Once on the Organizations page, select the organization you'd like to create the team in. Click on Create new team , fill in the Team name field, and click on the Create new team button or hit enter. Managing teams \u00b6 In this section, you can also rename and delete teams. To rename a team, click on Edit name . To remove a team click on Delete team and confirm. Adding team members \u00b6 To add team members, click on your avatar and select Organizations , then select the organization you would like to add members to. Fill in the Email and Team fields, then click on the Invite members button. You can add multiple addresses by separating them with a comma. Managing team members \u00b6 You can also remove team members from an organization by clicking the X found on the left-hand side of their member row.","title":"Creating and managing teams"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#creating-and-managing-teams","text":"","title":"Creating and managing teams"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#creating-a-team","text":"To create a team, click on your avatar and select Organizations . Once on the Organizations page, select the organization you'd like to create the team in. Click on Create new team , fill in the Team name field, and click on the Create new team button or hit enter.","title":"Creating a team"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#managing-teams","text":"In this section, you can also rename and delete teams. To rename a team, click on Edit name . To remove a team click on Delete team and confirm.","title":"Managing teams"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#adding-team-members","text":"To add team members, click on your avatar and select Organizations , then select the organization you would like to add members to. Fill in the Email and Team fields, then click on the Invite members button. You can add multiple addresses by separating them with a comma.","title":"Adding team members"},{"location":"organizations/manual-organizations/creating-and-managing-teams/#managing-team-members","text":"You can also remove team members from an organization by clicking the X found on the left-hand side of their member row.","title":"Managing team members"},{"location":"organizations/manual-organizations/creating-and-renaming-an-organization/","text":"Creating and renaming an organization \u00b6 Note From April 3rd, 2020 onwards it's no longer possible to create new Manual Organizations on Codacy cloud, although you can continue using your existing Manual Organizations. Please use the improved Synced Organizations instead, since you will no longer be able to add new repositories under Manual Organizations to avoid duplication of repositories. This change does not impact Codacy self-hosted. To create an organization, click on your avatar and select Organizations . Type the name in the Create new organization field and click on Create New . Renaming your organization \u00b6 You can always rename an organization but: You won't be able to change it back if someone else registers your original organization name. This may break all your repository URLs. To ease the migration process, your original URLs will be valid for at least 15 days.","title":"Creating and renaming an organization"},{"location":"organizations/manual-organizations/creating-and-renaming-an-organization/#creating-and-renaming-an-organization","text":"Note From April 3rd, 2020 onwards it's no longer possible to create new Manual Organizations on Codacy cloud, although you can continue using your existing Manual Organizations. Please use the improved Synced Organizations instead, since you will no longer be able to add new repositories under Manual Organizations to avoid duplication of repositories. This change does not impact Codacy self-hosted. To create an organization, click on your avatar and select Organizations . Type the name in the Create new organization field and click on Create New .","title":"Creating and renaming an organization"},{"location":"organizations/manual-organizations/creating-and-renaming-an-organization/#renaming-your-organization","text":"You can always rename an organization but: You won't be able to change it back if someone else registers your original organization name. This may break all your repository URLs. To ease the migration process, your original URLs will be valid for at least 15 days.","title":"Renaming your organization"},{"location":"organizations/manual-organizations/managing-team-repositories/","text":"Managing team repositories \u00b6 You will be able to add and remove repositories from a team after it has been added to your organization. Adding a repository to your team \u00b6 First, import a repository from your Git provider into your own account. Go to your organization menu, select the team, then select the repository from the drop-down menu, and click on Add repository . This will make your organization the owner of this repository. Removing a repository from your team \u00b6 Click on your avatar and select Organizations. Select the Organization and then the Team that your repository belongs to. Click on the \"X\" and confirm the prompt to delete the repository.","title":"Managing team repositories"},{"location":"organizations/manual-organizations/managing-team-repositories/#managing-team-repositories","text":"You will be able to add and remove repositories from a team after it has been added to your organization.","title":"Managing team repositories"},{"location":"organizations/manual-organizations/managing-team-repositories/#adding-a-repository-to-your-team","text":"First, import a repository from your Git provider into your own account. Go to your organization menu, select the team, then select the repository from the drop-down menu, and click on Add repository . This will make your organization the owner of this repository.","title":"Adding a repository to your team"},{"location":"organizations/manual-organizations/managing-team-repositories/#removing-a-repository-from-your-team","text":"Click on your avatar and select Organizations. Select the Organization and then the Team that your repository belongs to. Click on the \"X\" and confirm the prompt to delete the repository.","title":"Removing a repository from your team"},{"location":"related-tools/api-tokens/","text":"API Tokens \u00b6 API Tokens allow you authenticate when using the Codacy API. You must generate an API Token and include it in the headers of your API calls as described on the Codacy API documentation . To generate an API Token, go to your Account Settings and click on the tab Access Management . Codacy generates a new API token every time you click the button Create API Token . To revoke access to the Codacy API, you must remove the corresponding API Token from the list. After this, all applications or services using that token to access the Codacy API will fail to authenticate and will receive the following error reply: {\"error\":\"not found\"} To send coverage for your repository, you need the Project API token .","title":"API Tokens"},{"location":"related-tools/api-tokens/#api-tokens","text":"API Tokens allow you authenticate when using the Codacy API. You must generate an API Token and include it in the headers of your API calls as described on the Codacy API documentation . To generate an API Token, go to your Account Settings and click on the tab Access Management . Codacy generates a new API token every time you click the button Create API Token . To revoke access to the Codacy API, you must remove the corresponding API Token from the list. After this, all applications or services using that token to access the Codacy API will fail to authenticate and will receive the following error reply: {\"error\":\"not found\"} To send coverage for your repository, you need the Project API token .","title":"API Tokens"},{"location":"related-tools/client-side-tools/","text":"Client-side tools \u00b6 Client-side tools allow running any linter either locally or as part of your CI process and then integrating the results into your Codacy workflow. This way, Codacy will present the results coming from your linters alongside all the other code quality information in the dashboards. Currently, Codacy supports the client-side tools Clang-Tidy, Gosec, and Spotbugs. Read the guides to set up these client-side tools with Codacy: Clang Tidy Gosec Spotbugs Keep in mind that before you send analysis information you must enable the setting Run analysis through build server in your repository Settings , tab General , Repository analysis .","title":"Client-side tools"},{"location":"related-tools/client-side-tools/#client-side-tools","text":"Client-side tools allow running any linter either locally or as part of your CI process and then integrating the results into your Codacy workflow. This way, Codacy will present the results coming from your linters alongside all the other code quality information in the dashboards. Currently, Codacy supports the client-side tools Clang-Tidy, Gosec, and Spotbugs. Read the guides to set up these client-side tools with Codacy: Clang Tidy Gosec Spotbugs Keep in mind that before you send analysis information you must enable the setting Run analysis through build server in your repository Settings , tab General , Repository analysis .","title":"Client-side tools"},{"location":"related-tools/engines/","text":"Engines \u00b6 Codacy uses a system of plugin engines to extend the scope of analyses on your repositories, allowing support for new tools and languages every day. To create your own engine, check the Tool Developer Guide . Analysis Engines \u00b6 Here are the engines currently used on Codacy. Our GitHub links list the version being used for each engine as well as additional plugins that we support for each tool. Tool Name Supported languages Source Ameba Crystal https://github.com/codacy/codacy-ameba Bandit Python https://github.com/codacy/codacy-bandit Brakeman Ruby https://github.com/codacy/codacy-brakeman Bundler Audit Ruby https://github.com/codacy/codacy-bundler-audit Checkstyle Java https://github.com/codacy/codacy-checkstyle/ Clang-Tidy C++ https://github.com/codacy/codacy-clang-tidy Codacy Scalameta Pro Scala https://github.com/codacy/codacy-scalameta GoSec Go https://github.com/codacy/codacy-gosec CodeNarc Groovy https://github.com/codacy/codacy-codenarc Coffeelint CoffeeScript https://github.com/codacy/codacy-coffeelint CPPCheck C, C++ https://github.com/codacy/codacy-cppcheck Credo Elixir https://github.com/codacy/codacy-credo CSSLint CSS https://github.com/codacy/codacy-csslint Detekt Kotlin https://github.com/codacy/codacy-detekt ESLint JavaScript, Typescript, JSON https://github.com/codacy/codacy-eslint Flawfinder C, C++ https://github.com/codacy/codacy-flawfinder Revive Go https://github.com/codacy/codacy-gorevive Hadolint Dockerfile https://github.com/codacy/codacy-hadolint Jackson Linter JSON https://github.com/codacy/codacy-jackson-linter JSHint JavaScript https://github.com/codacy/codacy-jshint PHP Code Sniffer PHP https://github.com/codacy/codacy-codesniffer PHP Mess Detector PHP https://github.com/codacy/codacy-phpmd PMD Java, PLSQL, Apex, Javascript, Velocity, XML, JSP, VisualForce https://github.com/codacy/codacy-pmdjava Prospector Python https://github.com/landscapeio/prospector PSScriptAnalyser PowerShell https://github.com/codacy/codacy-psscriptanalyzer Pylint Python https://github.com/codacy/codacy-pylint RemarkLint Markdown https://github.com/codacy/codacy-remark-lint Rubocop Ruby https://github.com/codacy/codacy-rubocop Scalastyle Scala https://github.com/codacy/codacy-scalastyle SCSSLint CSS (SASS only) https://github.com/brigade/scss-lint ShellCheck Shell https://github.com/codacy/codacy-shellcheck SonarC# C# https://github.com/codacy/codacy-sonar-csharp SonarVB Visual Basic https://github.com/codacy/codacy-sonar-visual-basic SpotBugs Java, Scala https://github.com/codacy/codacy-spotbugs SQLint PSQL https://github.com/codacy/codacy-sqlint Stylelint CSS, LESS, SASS https://github.com/codacy/codacy-stylelint SwiftLint Swift https://github.com/codacy/codacy-swiftlint Tailor Swift https://github.com/codacy/codacy-tailor TSLint TypeScript https://github.com/codacy/codacy-tslint TSQLLint Transact-SQL https://github.com/codacy/codacy-tsqllint Other tools \u00b6 Although we expect all tools to run within an engine container, some tools are still supported directly as a binary in our analysis servers and are not configurable in the UI: Tool Name Source Cloc https://www.npmjs.com/package/cloc PHPCPD https://github.com/codacy/codacy-duplication-phpcp Flay https://github.com/codacy/codacy-duplication-flay Metrics https://pypi.python.org/pypi/metrics PDepend http://pdepend.org/ PMDCPD https://github.com/codacy/codacy-duplication-pmdcpd Radon http://radon.readthedocs.org/en/latest/","title":"Engines"},{"location":"related-tools/engines/#engines","text":"Codacy uses a system of plugin engines to extend the scope of analyses on your repositories, allowing support for new tools and languages every day. To create your own engine, check the Tool Developer Guide .","title":"Engines"},{"location":"related-tools/engines/#analysis-engines","text":"Here are the engines currently used on Codacy. Our GitHub links list the version being used for each engine as well as additional plugins that we support for each tool. Tool Name Supported languages Source Ameba Crystal https://github.com/codacy/codacy-ameba Bandit Python https://github.com/codacy/codacy-bandit Brakeman Ruby https://github.com/codacy/codacy-brakeman Bundler Audit Ruby https://github.com/codacy/codacy-bundler-audit Checkstyle Java https://github.com/codacy/codacy-checkstyle/ Clang-Tidy C++ https://github.com/codacy/codacy-clang-tidy Codacy Scalameta Pro Scala https://github.com/codacy/codacy-scalameta GoSec Go https://github.com/codacy/codacy-gosec CodeNarc Groovy https://github.com/codacy/codacy-codenarc Coffeelint CoffeeScript https://github.com/codacy/codacy-coffeelint CPPCheck C, C++ https://github.com/codacy/codacy-cppcheck Credo Elixir https://github.com/codacy/codacy-credo CSSLint CSS https://github.com/codacy/codacy-csslint Detekt Kotlin https://github.com/codacy/codacy-detekt ESLint JavaScript, Typescript, JSON https://github.com/codacy/codacy-eslint Flawfinder C, C++ https://github.com/codacy/codacy-flawfinder Revive Go https://github.com/codacy/codacy-gorevive Hadolint Dockerfile https://github.com/codacy/codacy-hadolint Jackson Linter JSON https://github.com/codacy/codacy-jackson-linter JSHint JavaScript https://github.com/codacy/codacy-jshint PHP Code Sniffer PHP https://github.com/codacy/codacy-codesniffer PHP Mess Detector PHP https://github.com/codacy/codacy-phpmd PMD Java, PLSQL, Apex, Javascript, Velocity, XML, JSP, VisualForce https://github.com/codacy/codacy-pmdjava Prospector Python https://github.com/landscapeio/prospector PSScriptAnalyser PowerShell https://github.com/codacy/codacy-psscriptanalyzer Pylint Python https://github.com/codacy/codacy-pylint RemarkLint Markdown https://github.com/codacy/codacy-remark-lint Rubocop Ruby https://github.com/codacy/codacy-rubocop Scalastyle Scala https://github.com/codacy/codacy-scalastyle SCSSLint CSS (SASS only) https://github.com/brigade/scss-lint ShellCheck Shell https://github.com/codacy/codacy-shellcheck SonarC# C# https://github.com/codacy/codacy-sonar-csharp SonarVB Visual Basic https://github.com/codacy/codacy-sonar-visual-basic SpotBugs Java, Scala https://github.com/codacy/codacy-spotbugs SQLint PSQL https://github.com/codacy/codacy-sqlint Stylelint CSS, LESS, SASS https://github.com/codacy/codacy-stylelint SwiftLint Swift https://github.com/codacy/codacy-swiftlint Tailor Swift https://github.com/codacy/codacy-tailor TSLint TypeScript https://github.com/codacy/codacy-tslint TSQLLint Transact-SQL https://github.com/codacy/codacy-tsqllint","title":"Analysis Engines"},{"location":"related-tools/engines/#other-tools","text":"Although we expect all tools to run within an engine container, some tools are still supported directly as a binary in our analysis servers and are not configurable in the UI: Tool Name Source Cloc https://www.npmjs.com/package/cloc PHPCPD https://github.com/codacy/codacy-duplication-phpcp Flay https://github.com/codacy/codacy-duplication-flay Metrics https://pypi.python.org/pypi/metrics PDepend http://pdepend.org/ PMDCPD https://github.com/codacy/codacy-duplication-pmdcpd Radon http://radon.readthedocs.org/en/latest/","title":"Other tools"},{"location":"related-tools/run-local-analysis/","text":"Run local analysis \u00b6 Set up the Codacy Analysis CLI \u00b6 Follow the installation guide to get the codacy-analysis-cli executable running on your build server. Running an analysis with the CLI \u00b6 At the moment, the CLI still requires to retrieve the configuration from Codacy to perform an analysis. In order to access the repository, you will have to obtain a Project Token as explained in the CLI documentation . Then, you can invoke the CLI to get a report with all the issues: codacy-analysis-cli analyse --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --codacy-api-base-url <API-BASE-URL> \\ --verbose \\ --upload If you don't specify the tool, the analysis will run as Codacy does in the backend. To obtain results for a particular tool, specify the tool with --tool . You can see the available tools with: codacy-analysis-cli analyse --help Codacy Self-hosted \u00b6 If you are using Codacy Self-hosted, you must configure the endpoint where Codacy Self-hosted is running either by using the flag --codacy-api-base-url or the environment variable CODACY_API_BASE_URL . Advanced configuration \u00b6 For advanced configuration details, check all the CLI flags in the CLI documentation . Some flags you might be interested in: --allow-network - to run the tools that require compilation like SpotBugs, FindBugs, FindSecBugs --max-allowed-issues - returns a non-zero exit code when a certain number of issues is exceeded --fail-if-incomplete - to return a non-zero exit code when any tool fails to run successfully Notes on ignored issues \u00b6 If you have ignored issues on Codacy be aware that the CLI will not respect those ignored issues when printing the results locally. When uploading results for Codacy Self-hosted the ignored issues will be reflected on Codacy after the analysis is complete.","title":"Run local analysis"},{"location":"related-tools/run-local-analysis/#run-local-analysis","text":"","title":"Run local analysis"},{"location":"related-tools/run-local-analysis/#set-up-the-codacy-analysis-cli","text":"Follow the installation guide to get the codacy-analysis-cli executable running on your build server.","title":"Set up the Codacy Analysis CLI"},{"location":"related-tools/run-local-analysis/#running-an-analysis-with-the-cli","text":"At the moment, the CLI still requires to retrieve the configuration from Codacy to perform an analysis. In order to access the repository, you will have to obtain a Project Token as explained in the CLI documentation . Then, you can invoke the CLI to get a report with all the issues: codacy-analysis-cli analyse --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --codacy-api-base-url <API-BASE-URL> \\ --verbose \\ --upload If you don't specify the tool, the analysis will run as Codacy does in the backend. To obtain results for a particular tool, specify the tool with --tool . You can see the available tools with: codacy-analysis-cli analyse --help","title":"Running an analysis with the CLI"},{"location":"related-tools/run-local-analysis/#codacy-self-hosted","text":"If you are using Codacy Self-hosted, you must configure the endpoint where Codacy Self-hosted is running either by using the flag --codacy-api-base-url or the environment variable CODACY_API_BASE_URL .","title":"Codacy Self-hosted"},{"location":"related-tools/run-local-analysis/#advanced-configuration","text":"For advanced configuration details, check all the CLI flags in the CLI documentation . Some flags you might be interested in: --allow-network - to run the tools that require compilation like SpotBugs, FindBugs, FindSecBugs --max-allowed-issues - returns a non-zero exit code when a certain number of issues is exceeded --fail-if-incomplete - to return a non-zero exit code when any tool fails to run successfully","title":"Advanced configuration"},{"location":"related-tools/run-local-analysis/#notes-on-ignored-issues","text":"If you have ignored issues on Codacy be aware that the CLI will not respect those ignored issues when printing the results locally. When uploading results for Codacy Self-hosted the ignored issues will be reflected on Codacy after the analysis is complete.","title":"Notes on ignored issues"},{"location":"related-tools/run-spotbugs/","text":"Run SpotBugs \u00b6 SpotBugs is available for Codacy Cloud and Codacy Self-hosted, with the following plugins: Find Security Bugs FBContrib To run this tool: Enable the setting Run analysis through build server under your repository Settings > General > Repository analysis Compile your Java or Scala repository on your build server, as you would normally do Invoke codacy-analysis-cli on the root of the repository specifying the tool SpotBugs codacy-analysis-cli analyse --tool spotbugs \\ --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --codacy-api-base-url <API-BASE-URL> \\ --upload \\ --verbose The Codacy CLI will then run SpotBugs on the compiled classes of your repository and upload these results to Codacy to be used in your workflow. Detecting sources and compiled classes \u00b6 Codacy tries to find the classes and map results to the files automatically. If you use Maven, Gradle and SBT then the default layouts are detected automatically as well. You have the option to configure these paths manually if there is an issue with detection. To do so, add Codacy configuration file to the repository root - .codacy.yml : --- engines: spotbugs: enabled: true modules: - classesDirectories: [ \"core/target/classes\" ] sourceDirectories: [ \"core/src/main\" ] - classesDirectories: [ \"api/target/classes\" ] sourceDirectories: [ \"api/src/main\" ] Increasing the timeout to run SpotBugs \u00b6 When running SpotBugs on the compiled classes of larger projects, the default execution timeout of 15 minutes may not be enough for SpotBugs to complete the analysis. To increase the timeout that each tool has to execute, use the option --tool-timeout when invoking the codacy-analysis-cli command. For example, to set the timeout to 1 hour, run: codacy-analysis-cli analyse --tool spotbugs \\ --tool-timeout 1hour \\ --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --codacy-api-base-url <API-BASE-URL> \\ --upload \\ --verbose","title":"Run SpotBugs"},{"location":"related-tools/run-spotbugs/#run-spotbugs","text":"SpotBugs is available for Codacy Cloud and Codacy Self-hosted, with the following plugins: Find Security Bugs FBContrib To run this tool: Enable the setting Run analysis through build server under your repository Settings > General > Repository analysis Compile your Java or Scala repository on your build server, as you would normally do Invoke codacy-analysis-cli on the root of the repository specifying the tool SpotBugs codacy-analysis-cli analyse --tool spotbugs \\ --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --codacy-api-base-url <API-BASE-URL> \\ --upload \\ --verbose The Codacy CLI will then run SpotBugs on the compiled classes of your repository and upload these results to Codacy to be used in your workflow.","title":"Run SpotBugs"},{"location":"related-tools/run-spotbugs/#detecting-sources-and-compiled-classes","text":"Codacy tries to find the classes and map results to the files automatically. If you use Maven, Gradle and SBT then the default layouts are detected automatically as well. You have the option to configure these paths manually if there is an issue with detection. To do so, add Codacy configuration file to the repository root - .codacy.yml : --- engines: spotbugs: enabled: true modules: - classesDirectories: [ \"core/target/classes\" ] sourceDirectories: [ \"core/src/main\" ] - classesDirectories: [ \"api/target/classes\" ] sourceDirectories: [ \"api/src/main\" ]","title":"Detecting sources and compiled classes"},{"location":"related-tools/run-spotbugs/#increasing-the-timeout-to-run-spotbugs","text":"When running SpotBugs on the compiled classes of larger projects, the default execution timeout of 15 minutes may not be enough for SpotBugs to complete the analysis. To increase the timeout that each tool has to execute, use the option --tool-timeout when invoking the codacy-analysis-cli command. For example, to set the timeout to 1 hour, run: codacy-analysis-cli analyse --tool spotbugs \\ --tool-timeout 1hour \\ --directory <SOURCE-CODE-PATH> \\ --project-token <PROJECT-TOKEN> \\ --allow-network \\ --codacy-api-base-url <API-BASE-URL> \\ --upload \\ --verbose","title":"Increasing the timeout to run SpotBugs"},{"location":"related-tools/tool-developer-guide-using-scala/","text":"Tool Developer Guide - Using Scala \u00b6 Scala template to integrate an external tool on Codacy \u00b6 We use external tools at Codacy, in this tutorial we provide our own template written in Scala to help you integrate the tool of your choice. You can also fork the code of one of our tools, and modify it; here are some examples: codacy-phpmd codacy-jshint codacy-pmdJava . This tutorial covers only the template code to write the engine; if you didn't check the full tutorial, please refer to the Tool Developer Guide . Scala Engine Template \u00b6 We use Scala to integrate our tools at Codacy. In this template, you only need to do a couple of things to integrate your tool: Configure the build.sbt so it generates the docker to run your tool Extend the codacy.dockerApi.Tool trait Configuring build.sbt \u00b6 Our Scala template is built using sbt, which already has a great plugin to generate dockers, sbt-native-packager . To configure a docker, you should edit the build.sbt in the root directory of our template. One thing you probably want to change is the installAll value, which contains the commands to install the tools and all necessary dependencies. Implementing Tool trait \u00b6 When extending the Tool trait, you have to implement the apply method. When a client runs your tool, the apply method of our template is invoked. Here you have everything you need to invoke the tool. After you have your results from the tool, put them in our Result format, and then just return them. package codacy.mytool import scala.sys.process._ import codacy.dockerApi._ object MyTool extends Tool { override def apply ( path : Path , conf : Option [ Seq [ PatternDef ]], files : Option [ Set [ Path ]])( implicit spec : Spec ) : Try [ Iterable [ Result ]] = { //TODO: Your code goes here } } path: The root path where the files to test are located (usually /src ) conf: Patterns to run (optional) files: Files to test (optional), their path is relative to the path received spec: Tool configuration based on your patterns.json Important The behavior of your application method should vary depending on the optional parameters. If you receive no files , you should invoke the tool for all files from path (path is the root directory, files are searched recursively for all folders in path ). If you receive no conf , you should test with the default patterns. When receiving conf or files , you should only run your tool for the subset of patterns in conf and files in files . You must put each result in our Result type. The used types like PatternDef and Result are defined as case classes. These and the other types are defined in dockerApi/package.scala . case class PatternDef ( patternId : PatternId , parameters : Option [ Set [ ParameterDef ]]) case class Result ( filename : SourcePath , message : ResultMessage , patternId : PatternId , line : ResultLine ) //... Code details of our template \u00b6 The entry point of our template for you is the Engine object. In the codacy.Engine , you can see the object Engine extends a DockerEngine that receives a Tool . object Engine extends DockerEngine ( MyTool ) Your tool must extend Tool , (as shown before, MyTemplate already extends it), and override the apply method. When you want to execute a command, we recommend you generate the sequence you want to run and use the process API provided by scala.sys.process._ to run it and pick up the result. import scala.sys.process._ //... //The sequence of strings to run val cmd = Seq ( \"pmd\" , \"-d\" , \"/src/\" , \"-f\" , \"xml\" ) //run the command > pmd -d /src/ -f xml val cmdResponse = cmd .! //... As a final note, you may write the code to run the tool in any way you want. Simply return the results from the external tool at the end of the apply method, and our code will take care of the rest. If you have any questions about the template please contact us at support@codacy.com .","title":"Tool Developer Guide - Using Scala"},{"location":"related-tools/tool-developer-guide-using-scala/#tool-developer-guide-using-scala","text":"","title":"Tool Developer Guide - Using Scala"},{"location":"related-tools/tool-developer-guide-using-scala/#scala-template-to-integrate-an-external-tool-on-codacy","text":"We use external tools at Codacy, in this tutorial we provide our own template written in Scala to help you integrate the tool of your choice. You can also fork the code of one of our tools, and modify it; here are some examples: codacy-phpmd codacy-jshint codacy-pmdJava . This tutorial covers only the template code to write the engine; if you didn't check the full tutorial, please refer to the Tool Developer Guide .","title":"Scala template to integrate an external tool on Codacy"},{"location":"related-tools/tool-developer-guide-using-scala/#scala-engine-template","text":"We use Scala to integrate our tools at Codacy. In this template, you only need to do a couple of things to integrate your tool: Configure the build.sbt so it generates the docker to run your tool Extend the codacy.dockerApi.Tool trait","title":"Scala Engine Template"},{"location":"related-tools/tool-developer-guide-using-scala/#configuring-buildsbt","text":"Our Scala template is built using sbt, which already has a great plugin to generate dockers, sbt-native-packager . To configure a docker, you should edit the build.sbt in the root directory of our template. One thing you probably want to change is the installAll value, which contains the commands to install the tools and all necessary dependencies.","title":"Configuring build.sbt"},{"location":"related-tools/tool-developer-guide-using-scala/#implementing-tool-trait","text":"When extending the Tool trait, you have to implement the apply method. When a client runs your tool, the apply method of our template is invoked. Here you have everything you need to invoke the tool. After you have your results from the tool, put them in our Result format, and then just return them. package codacy.mytool import scala.sys.process._ import codacy.dockerApi._ object MyTool extends Tool { override def apply ( path : Path , conf : Option [ Seq [ PatternDef ]], files : Option [ Set [ Path ]])( implicit spec : Spec ) : Try [ Iterable [ Result ]] = { //TODO: Your code goes here } } path: The root path where the files to test are located (usually /src ) conf: Patterns to run (optional) files: Files to test (optional), their path is relative to the path received spec: Tool configuration based on your patterns.json Important The behavior of your application method should vary depending on the optional parameters. If you receive no files , you should invoke the tool for all files from path (path is the root directory, files are searched recursively for all folders in path ). If you receive no conf , you should test with the default patterns. When receiving conf or files , you should only run your tool for the subset of patterns in conf and files in files . You must put each result in our Result type. The used types like PatternDef and Result are defined as case classes. These and the other types are defined in dockerApi/package.scala . case class PatternDef ( patternId : PatternId , parameters : Option [ Set [ ParameterDef ]]) case class Result ( filename : SourcePath , message : ResultMessage , patternId : PatternId , line : ResultLine ) //...","title":"Implementing Tool trait"},{"location":"related-tools/tool-developer-guide-using-scala/#code-details-of-our-template","text":"The entry point of our template for you is the Engine object. In the codacy.Engine , you can see the object Engine extends a DockerEngine that receives a Tool . object Engine extends DockerEngine ( MyTool ) Your tool must extend Tool , (as shown before, MyTemplate already extends it), and override the apply method. When you want to execute a command, we recommend you generate the sequence you want to run and use the process API provided by scala.sys.process._ to run it and pick up the result. import scala.sys.process._ //... //The sequence of strings to run val cmd = Seq ( \"pmd\" , \"-d\" , \"/src/\" , \"-f\" , \"xml\" ) //run the command > pmd -d /src/ -f xml val cmdResponse = cmd .! //... As a final note, you may write the code to run the tool in any way you want. Simply return the results from the external tool at the end of the apply method, and our code will take care of the rest. If you have any questions about the template please contact us at support@codacy.com .","title":"Code details of our template"},{"location":"related-tools/tool-developer-guide/","text":"Tool developer guide \u00b6 Integrate an external tool on Codacy \u00b6 By creating a docker and writing code to handle the tool invocation and output, you can integrate the tool of your choice on Codacy! Note To know more about dockers, and how to write a docker file please refer to https://docs.docker.com/reference/builder/ We use external tools at Codacy; in this tutorial, we explain how you can integrate the tool of your choice with our platform. You can check the code of an already implemented tool and, if you wish, fork it to start yours. You are free to modify it and use it for your integration. We also have a tutorial to integrate your tool using our Scala templates . Requirements \u00b6 Docker definition with the tool you want to integrate Define the documentation for the patterns provided by the tool Assumptions and behavior \u00b6 To run the tool we provide the configuration file, /src/.codacy.json , with the files you should analyze and also the patterns you should check. The files to analyse are located in /src , meaning that when provided in the configuration, the paths are relative to /src . .codacy.json files: Files to be analysed (their path is relative to /src) tools: Array of tools * name: Unique identifier of the tool patterns: Array of patterns that must be checked patternId: Unique identifier of the pattern parameters: Parameters of the pattern name: Unique identifier of the parameter value: Value to be used as parameter value { \"files\" : [ \"foo/bar/baz.js\" , \"foo2/bar/baz.php\" ], \"tools\" :[ { \"name\" : \"jshint\" , \"patterns\" :[ { \"patternId\" : \"latedef\" , \"parameters\" :[ { \"name\" : \"latedef\" , \"value\" : \"vars\" } ] } ] } ] } Important If /src/.codacy.json does not exist or any of its contents (files or patterns) is not available, you should invoke the tool for all files from /src (files should be searched recursively for all folders in /src ) and check them with the default patterns. When receiving /src/.codacy.json , you should only run your tool for the subset of files in files , and for the patterns present on patterns for your tool name . Setup \u00b6 Write the docker file that will run the tool. It must have a binary entry point without any parameters. Write a patterns.json with the configuration of your tool. This file must be located on /docs/patterns.json . name: Unique identifier of the tool (lower-case letters without spaces) patterns: The patterns that the tool provides patternId: Unique identifier of the pattern (lower-case letters without spaces) level: Severity level of the issue, one of Error , Warning , Info category: Category of the issue, one of ErrorProne , CodeStyle , UnusedCode , Security , Compatibility , Performance , Documentation parameters: Parameters received by the pattern name: Unique identifier of the parameter (lower-case letters without spaces) default: Default value of the parameter { \"name\" : \"jshint\" , \"patterns\" :[ { \"patternId\" : \"latedef\" , \"level\" : \"Error\" , \"category\" : \"UnusedCode\" , \"parameters\" :[ { \"name\" : \"latedef\" , \"default\" : \"vars\" } ] } ] } Note For level types we have: Error , Warning , Info For category types we have: ErrorProne , CodeStyle , UnusedCode , Security , Compatibility , Performance , Documentation Write the code to run the tool. You are free to write this code in the language you want. Here you have to invoke the tool according to the configuration. After you have your results from the tool, you should print them to the standard output in our Result format, one result per line. Important The filename should not include the prefix \"/src/\" Example: absolute path: /src/folder/file.js filename path: folder/file.js { \"filename\" : \"codacy/core/test.js\" , \"message\" : \"found this in your code\" , \"patternId\" : \"latedef\" , \"line\" : 2 } If you are not able to run the analysis for any of the files requested you should return an error for each one of them to the standard output in our Error format. { \"filename\" : \"codacy/core/test.js\" , \"message\" : \"could not parse the file\" , } Documentation \u00b6 At Codacy we strive to provide the best value to our users and, to accomplish that, we document our patterns so that the user can better understand the problem and fix it. At this point, your tool has everything it needs to run, but there is one other really important thing that you should do before submitting your docker: the documentation for your tool. Your files for this section should be placed in /docs/description/ . In order to provide more details you can create: A single /docs/description/description.json Optional: A /docs/description/<PATTERN-ID>.md for each pattern In the description.json you define the title for the pattern, brief description, time to fix (in minutes), and also a description of the parameters in the following format: [ { \"patternId\" : \"latedef\" , \"title\" : \"This is a title\" , \"description\" : \"This is a description\" , \"timeToFix\" : 5 , \"parameters\" :[ { \"name\" : \"latedef\" , \"description\" : \"this is a param description\" } ] } ] Optional: To give a more detailed explanation about the issue, you should define the <PATTERN-ID>.md . Fields in interfaces are automatically public static final, and methods are public abstract. Classes or interfaces nested in an interface are automatically public and static (all nested interfaces are automatically static). For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous. Ex: public interface Foo { public abstract void bar(); // both abstract and public are ignored by the compiler public static final int X = 0; // public, static, and final all ignored public static class Bar {} // public, static ignored public static interface Baz {} // ditto void foo(); //this is correct } public class Bar { public static interface Baz {} // static ignored } [Source](http://pmd.sourceforge.net/pmd-5.3.2/pmd-java/rules/java/unusedcode.html#UnusedModifier) You should explain the *what* and *why* of the issue. Adding an example is always a nice way to help other people understand the problem. For a more thorough explanation you can also add a link at the end referring a more complete source. Tests \u00b6 After all the docker is prepared you can now test your work. To do it you should write test files and place them in /docs/tests , for example for PHP, /docs/tests/UnusedModifier.php . Each test is composed by two parts. Identification of the patterns on the file Identification of the errors on the file The pattern identification is placed in the beginning of the file in the following format: <LANGUAGE_COMMENT>#Patterns: <PATTERN_ID>,<PATTERN_ID>,... The error identification is placed in the line before the error should happen: <LANGUAGE_COMMENT>#<ERROR_LEVEL>: <PATTERN_ID> Instead of commenting in the line before the error, you can alternatively specify the line of the warning with this syntax: <LANGUAGE_COMMENT>#Issue: {\"severity\": \"<ERROR_LEVEL>\", \"line\": <LINE_NUMBER_WITH_ISSUE>, \"patternId\": \"PATTERN_ID\"} //#Patterns: UnusedModifier public interface Foo { //#Warn: UnusedModifier public abstract void bar(); // both abstract and public are ignored by the compiler //#Warn: UnusedModifier public static final int X = 0; // public, static, and final all ignored //#Warn: UnusedModifier public static class Bar {} // public, static ignored //#Warn: UnusedModifier public static interface Baz {} // ditto void foo(); } public class Bar { //#Warn: UnusedModifier public static interface Baz {} // static ignored } To run this use our test repository available here . You just need the docker image built in your local repo and then follow the steps to run it. Submit the Docker \u00b6 Running the docker \u00b6 docker run -t \\ --net = none \\ --privileged = false \\ --cap-drop = ALL \\ --user = docker \\ --rm = true \\ -v <PATH-TO-FOLDER-WITH-FILES-TO-CHECK>:/src:ro \\ <YOUR-DOCKER-NAME>:<YOUR-DOCKER-VERSION> Docker restrictions \u00b6 Docker image size should not exceed 500MB Docker should contain a non-root user named docker with UID/GID 2004 All the source code of the docker must be public The docker base must officially be supported on DockerHub Your docker must be provided in a repository through a public git host (ex: GitHub, Bitbucket, ...) Docker submission \u00b6 To submit the docker you should send an email to support@codacy.com with the link to the git repository with your docker definition. The docker will then be subjected to a review by our team and we will then contact you with more details. If you have any question or suggestion regarding this guide please contact us at support@codacy.com .","title":"Tool developer guide"},{"location":"related-tools/tool-developer-guide/#tool-developer-guide","text":"","title":"Tool developer guide"},{"location":"related-tools/tool-developer-guide/#integrate-an-external-tool-on-codacy","text":"By creating a docker and writing code to handle the tool invocation and output, you can integrate the tool of your choice on Codacy! Note To know more about dockers, and how to write a docker file please refer to https://docs.docker.com/reference/builder/ We use external tools at Codacy; in this tutorial, we explain how you can integrate the tool of your choice with our platform. You can check the code of an already implemented tool and, if you wish, fork it to start yours. You are free to modify it and use it for your integration. We also have a tutorial to integrate your tool using our Scala templates .","title":"Integrate an external tool on Codacy"},{"location":"related-tools/tool-developer-guide/#requirements","text":"Docker definition with the tool you want to integrate Define the documentation for the patterns provided by the tool","title":"Requirements"},{"location":"related-tools/tool-developer-guide/#assumptions-and-behavior","text":"To run the tool we provide the configuration file, /src/.codacy.json , with the files you should analyze and also the patterns you should check. The files to analyse are located in /src , meaning that when provided in the configuration, the paths are relative to /src . .codacy.json files: Files to be analysed (their path is relative to /src) tools: Array of tools * name: Unique identifier of the tool patterns: Array of patterns that must be checked patternId: Unique identifier of the pattern parameters: Parameters of the pattern name: Unique identifier of the parameter value: Value to be used as parameter value { \"files\" : [ \"foo/bar/baz.js\" , \"foo2/bar/baz.php\" ], \"tools\" :[ { \"name\" : \"jshint\" , \"patterns\" :[ { \"patternId\" : \"latedef\" , \"parameters\" :[ { \"name\" : \"latedef\" , \"value\" : \"vars\" } ] } ] } ] } Important If /src/.codacy.json does not exist or any of its contents (files or patterns) is not available, you should invoke the tool for all files from /src (files should be searched recursively for all folders in /src ) and check them with the default patterns. When receiving /src/.codacy.json , you should only run your tool for the subset of files in files , and for the patterns present on patterns for your tool name .","title":"Assumptions and behavior"},{"location":"related-tools/tool-developer-guide/#setup","text":"Write the docker file that will run the tool. It must have a binary entry point without any parameters. Write a patterns.json with the configuration of your tool. This file must be located on /docs/patterns.json . name: Unique identifier of the tool (lower-case letters without spaces) patterns: The patterns that the tool provides patternId: Unique identifier of the pattern (lower-case letters without spaces) level: Severity level of the issue, one of Error , Warning , Info category: Category of the issue, one of ErrorProne , CodeStyle , UnusedCode , Security , Compatibility , Performance , Documentation parameters: Parameters received by the pattern name: Unique identifier of the parameter (lower-case letters without spaces) default: Default value of the parameter { \"name\" : \"jshint\" , \"patterns\" :[ { \"patternId\" : \"latedef\" , \"level\" : \"Error\" , \"category\" : \"UnusedCode\" , \"parameters\" :[ { \"name\" : \"latedef\" , \"default\" : \"vars\" } ] } ] } Note For level types we have: Error , Warning , Info For category types we have: ErrorProne , CodeStyle , UnusedCode , Security , Compatibility , Performance , Documentation Write the code to run the tool. You are free to write this code in the language you want. Here you have to invoke the tool according to the configuration. After you have your results from the tool, you should print them to the standard output in our Result format, one result per line. Important The filename should not include the prefix \"/src/\" Example: absolute path: /src/folder/file.js filename path: folder/file.js { \"filename\" : \"codacy/core/test.js\" , \"message\" : \"found this in your code\" , \"patternId\" : \"latedef\" , \"line\" : 2 } If you are not able to run the analysis for any of the files requested you should return an error for each one of them to the standard output in our Error format. { \"filename\" : \"codacy/core/test.js\" , \"message\" : \"could not parse the file\" , }","title":"Setup"},{"location":"related-tools/tool-developer-guide/#documentation","text":"At Codacy we strive to provide the best value to our users and, to accomplish that, we document our patterns so that the user can better understand the problem and fix it. At this point, your tool has everything it needs to run, but there is one other really important thing that you should do before submitting your docker: the documentation for your tool. Your files for this section should be placed in /docs/description/ . In order to provide more details you can create: A single /docs/description/description.json Optional: A /docs/description/<PATTERN-ID>.md for each pattern In the description.json you define the title for the pattern, brief description, time to fix (in minutes), and also a description of the parameters in the following format: [ { \"patternId\" : \"latedef\" , \"title\" : \"This is a title\" , \"description\" : \"This is a description\" , \"timeToFix\" : 5 , \"parameters\" :[ { \"name\" : \"latedef\" , \"description\" : \"this is a param description\" } ] } ] Optional: To give a more detailed explanation about the issue, you should define the <PATTERN-ID>.md . Fields in interfaces are automatically public static final, and methods are public abstract. Classes or interfaces nested in an interface are automatically public and static (all nested interfaces are automatically static). For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous. Ex: public interface Foo { public abstract void bar(); // both abstract and public are ignored by the compiler public static final int X = 0; // public, static, and final all ignored public static class Bar {} // public, static ignored public static interface Baz {} // ditto void foo(); //this is correct } public class Bar { public static interface Baz {} // static ignored } [Source](http://pmd.sourceforge.net/pmd-5.3.2/pmd-java/rules/java/unusedcode.html#UnusedModifier) You should explain the *what* and *why* of the issue. Adding an example is always a nice way to help other people understand the problem. For a more thorough explanation you can also add a link at the end referring a more complete source.","title":"Documentation"},{"location":"related-tools/tool-developer-guide/#tests","text":"After all the docker is prepared you can now test your work. To do it you should write test files and place them in /docs/tests , for example for PHP, /docs/tests/UnusedModifier.php . Each test is composed by two parts. Identification of the patterns on the file Identification of the errors on the file The pattern identification is placed in the beginning of the file in the following format: <LANGUAGE_COMMENT>#Patterns: <PATTERN_ID>,<PATTERN_ID>,... The error identification is placed in the line before the error should happen: <LANGUAGE_COMMENT>#<ERROR_LEVEL>: <PATTERN_ID> Instead of commenting in the line before the error, you can alternatively specify the line of the warning with this syntax: <LANGUAGE_COMMENT>#Issue: {\"severity\": \"<ERROR_LEVEL>\", \"line\": <LINE_NUMBER_WITH_ISSUE>, \"patternId\": \"PATTERN_ID\"} //#Patterns: UnusedModifier public interface Foo { //#Warn: UnusedModifier public abstract void bar(); // both abstract and public are ignored by the compiler //#Warn: UnusedModifier public static final int X = 0; // public, static, and final all ignored //#Warn: UnusedModifier public static class Bar {} // public, static ignored //#Warn: UnusedModifier public static interface Baz {} // ditto void foo(); } public class Bar { //#Warn: UnusedModifier public static interface Baz {} // static ignored } To run this use our test repository available here . You just need the docker image built in your local repo and then follow the steps to run it.","title":"Tests"},{"location":"related-tools/tool-developer-guide/#submit-the-docker","text":"","title":"Submit the Docker"},{"location":"related-tools/tool-developer-guide/#running-the-docker","text":"docker run -t \\ --net = none \\ --privileged = false \\ --cap-drop = ALL \\ --user = docker \\ --rm = true \\ -v <PATH-TO-FOLDER-WITH-FILES-TO-CHECK>:/src:ro \\ <YOUR-DOCKER-NAME>:<YOUR-DOCKER-VERSION>","title":"Running the docker"},{"location":"related-tools/tool-developer-guide/#docker-restrictions","text":"Docker image size should not exceed 500MB Docker should contain a non-root user named docker with UID/GID 2004 All the source code of the docker must be public The docker base must officially be supported on DockerHub Your docker must be provided in a repository through a public git host (ex: GitHub, Bitbucket, ...)","title":"Docker restrictions"},{"location":"related-tools/tool-developer-guide/#docker-submission","text":"To submit the docker you should send an email to support@codacy.com with the link to the git repository with your docker definition. The docker will then be subjected to a review by our team and we will then contact you with more details. If you have any question or suggestion regarding this guide please contact us at support@codacy.com .","title":"Docker submission"},{"location":"repositories/badges/","text":"Badges \u00b6 You can add a Codacy badge to the README of your repository to display the current code quality grade or code coverage. To obtain your Codacy badge, open your repository Settings , tab General , select the markup language, and copy the generated code to your README file. If you have set up code coverage for your repository, you can also add a badge for your coverage. If you want the Codacy badge to display information for a different branch, specify the name of the branch by appending the query parameter branch=<branch_name> to the URL of the badge. For example: https://app.codacy.com/project/badge/Grade/cba8fd0874ac4f569f4f880e473cbac9?branch=dev","title":"Badges"},{"location":"repositories/badges/#badges","text":"You can add a Codacy badge to the README of your repository to display the current code quality grade or code coverage. To obtain your Codacy badge, open your repository Settings , tab General , select the markup language, and copy the generated code to your README file. If you have set up code coverage for your repository, you can also add a badge for your coverage. If you want the Codacy badge to display information for a different branch, specify the name of the branch by appending the query parameter branch=<branch_name> to the URL of the badge. For example: https://app.codacy.com/project/badge/Grade/cba8fd0874ac4f569f4f880e473cbac9?branch=dev","title":"Badges"},{"location":"repositories/commits-view/","text":"Commits View \u00b6 1. Commit list \u00b6 This list is meant to give you an overview of the repository's commits, providing valuable information about changes and quality improvements. Click on the row to see more details. Visualization of the commits defaults to the main branch of the repository. This can be changed by selecting another branch on the combo box. When viewing the commits list, some commits may still not have been analysed, either because the analysis is still running or belongs to a branch that has not been selected for analysis. These can be easily identified by the status column. Just hover the icon to get some extra info. If any commit created or fixed any issue on the repository, that information will be displayed on the right-hand side of the list, allowing for a quick overview of the repository quality evolution. 2. Commit detail \u00b6 The commit detail will show you an overview of what changed in that particular commit, showing all the differences that were introduced. A detailed issue delta information is always available, showing exactly which issues were fixed or created in each commit. By expanding an issue, you can find information on why it's an issue, how to solve it, and links to community sources on the problem found. You will also find a few additional options, including \"Ignore issue\", \"Remove pattern\", \"Ignore file\", and also integrations you may have enabled. The changed files can also be reviewed using a git diff visualizer, helping achieve a quick and easy code review.","title":"Commits View"},{"location":"repositories/commits-view/#commits-view","text":"","title":"Commits View"},{"location":"repositories/commits-view/#1-commit-list","text":"This list is meant to give you an overview of the repository's commits, providing valuable information about changes and quality improvements. Click on the row to see more details. Visualization of the commits defaults to the main branch of the repository. This can be changed by selecting another branch on the combo box. When viewing the commits list, some commits may still not have been analysed, either because the analysis is still running or belongs to a branch that has not been selected for analysis. These can be easily identified by the status column. Just hover the icon to get some extra info. If any commit created or fixed any issue on the repository, that information will be displayed on the right-hand side of the list, allowing for a quick overview of the repository quality evolution.","title":"1. Commit list"},{"location":"repositories/commits-view/#2-commit-detail","text":"The commit detail will show you an overview of what changed in that particular commit, showing all the differences that were introduced. A detailed issue delta information is always available, showing exactly which issues were fixed or created in each commit. By expanding an issue, you can find information on why it's an issue, how to solve it, and links to community sources on the problem found. You will also find a few additional options, including \"Ignore issue\", \"Remove pattern\", \"Ignore file\", and also integrations you may have enabled. The changed files can also be reviewed using a git diff visualizer, helping achieve a quick and easy code review.","title":"2. Commit detail"},{"location":"repositories/files-view/","text":"Files View \u00b6 The file list shows all the files in your repository, sortable by six different columns: grade , filename, number of issues, code duplication, complexity , and code coverage. There is also a search filter available. This allows you to keep track or focus some of your time on files with low coverage, high complexity, too many issues, or simply a lot of duplication that could be refactored. When you click in a filename, it opens the File detail. The file detail starts with a header where you can see a lot of statistical information on the file: Below that header you will find a tab selector for further information on issues, coverage, and duplication. By default you will see the list of issues in the file. On the right-hand side you can toggle between a list view and the annotated source code. You can open each issue to get more information on it. For more information about Issues, please check our Issues view page. The coverage tab shows you which lines are covered by tests and which aren't. As for the duplication tab, here you can find duplicated code and links to its clones.","title":"Files View"},{"location":"repositories/files-view/#files-view","text":"The file list shows all the files in your repository, sortable by six different columns: grade , filename, number of issues, code duplication, complexity , and code coverage. There is also a search filter available. This allows you to keep track or focus some of your time on files with low coverage, high complexity, too many issues, or simply a lot of duplication that could be refactored. When you click in a filename, it opens the File detail. The file detail starts with a header where you can see a lot of statistical information on the file: Below that header you will find a tab selector for further information on issues, coverage, and duplication. By default you will see the list of issues in the file. On the right-hand side you can toggle between a list view and the annotated source code. You can open each issue to get more information on it. For more information about Issues, please check our Issues view page. The coverage tab shows you which lines are covered by tests and which aren't. As for the duplication tab, here you can find duplicated code and links to its clones.","title":"Files View"},{"location":"repositories/issues-view/","text":"Issues View \u00b6 Here you get an overview of all issues raised by Codacy in your repository. We arrange them in six categories. For every issue, we present information on why is this an issue, how you could solve it, and the related code pattern. 1. Issue Categories \u00b6 Security: security issues, potential vulnerabilities, unsafe dependencies. Error Prone: bad practices/patterns that cause code to fail/prone to bugs. Code Style: related to the style of the code, line length, tabs vs spaces. Compatibility: identifies code that has problems with older systems or cross platform support. Unused Code: unnecessary code not being used. Performance: inefficiently written code. 2. Issue Level \u00b6 Info: The least critical issue type will appear as blue; for example code style issues are shown this way. Warning: This issue type will appear as yellow. You should be careful with these ones, they are based on code standards and conventions. Error: The more dangerous types of issues will show as red. Take your time to fix these, although the code may run, these issues show the code that is very susceptible to problems. These issues are bug-prone, and/or can have serious problems regarding security and compatibility. Each pattern has a pre-defined severity level and at the moment, it\u2019s not possible to customize that information. 3. Ignoring an issue \u00b6 For an issue you disagree with or false positives, you can either ignore that instance or disable the pattern across the whole repository. To do so, click on cog wheel and select the desired option: 3.1. Reinstating ignored issues \u00b6 To reinstate ignored issues, click on the Current Issues box, and select Ignored Issues from the drop-down menu. 4. Removing a pattern \u00b6 When you want to remove a pattern altogether from your repository's analysis, expand the issue you\u2019re aiming to disable the pattern for, click on the cog wheel, select Remove pattern and confirm your choice. Note If you\u2019re using a custom configuration file , you have to remove that pattern line manually in your file. 4.1. Restoring a removed pattern \u00b6 To restore a removed pattern, go to your repository's Code Pattern settings, choose the tool you'd like to enable the pattern for, find the pattern and click on the check box to enable. Note If you're using a custom pattern configuration file, have to restore the line manually. 5. Ignoring files \u00b6 You can cherry-pick files to be ignored for further analysis. To ignore a file, expand the issue, click on the cog wheel, select Ignore file from the menu, and confirm. Warning This file is now ignored across the entire repository and for all patterns. 5.1. Managing ignored files \u00b6 Ignored files are managed through Settings , Ignore Files . For more information on this topic, have a look at this article . 6. Create a Comment in your repo \u00b6 You can also add comments to the code on Codacy, and it will sync in your repository on GitHub or Bitbucket .","title":"Issues View"},{"location":"repositories/issues-view/#issues-view","text":"Here you get an overview of all issues raised by Codacy in your repository. We arrange them in six categories. For every issue, we present information on why is this an issue, how you could solve it, and the related code pattern.","title":"Issues View"},{"location":"repositories/issues-view/#1-issue-categories","text":"Security: security issues, potential vulnerabilities, unsafe dependencies. Error Prone: bad practices/patterns that cause code to fail/prone to bugs. Code Style: related to the style of the code, line length, tabs vs spaces. Compatibility: identifies code that has problems with older systems or cross platform support. Unused Code: unnecessary code not being used. Performance: inefficiently written code.","title":"1. Issue Categories"},{"location":"repositories/issues-view/#2-issue-level","text":"Info: The least critical issue type will appear as blue; for example code style issues are shown this way. Warning: This issue type will appear as yellow. You should be careful with these ones, they are based on code standards and conventions. Error: The more dangerous types of issues will show as red. Take your time to fix these, although the code may run, these issues show the code that is very susceptible to problems. These issues are bug-prone, and/or can have serious problems regarding security and compatibility. Each pattern has a pre-defined severity level and at the moment, it\u2019s not possible to customize that information.","title":"2. Issue Level"},{"location":"repositories/issues-view/#3-ignoring-an-issue","text":"For an issue you disagree with or false positives, you can either ignore that instance or disable the pattern across the whole repository. To do so, click on cog wheel and select the desired option:","title":"3. Ignoring an issue"},{"location":"repositories/issues-view/#31-reinstating-ignored-issues","text":"To reinstate ignored issues, click on the Current Issues box, and select Ignored Issues from the drop-down menu.","title":"3.1. Reinstating ignored issues"},{"location":"repositories/issues-view/#4-removing-a-pattern","text":"When you want to remove a pattern altogether from your repository's analysis, expand the issue you\u2019re aiming to disable the pattern for, click on the cog wheel, select Remove pattern and confirm your choice. Note If you\u2019re using a custom configuration file , you have to remove that pattern line manually in your file.","title":"4. Removing a pattern"},{"location":"repositories/issues-view/#41-restoring-a-removed-pattern","text":"To restore a removed pattern, go to your repository's Code Pattern settings, choose the tool you'd like to enable the pattern for, find the pattern and click on the check box to enable. Note If you're using a custom pattern configuration file, have to restore the line manually.","title":"4.1. Restoring a removed pattern"},{"location":"repositories/issues-view/#5-ignoring-files","text":"You can cherry-pick files to be ignored for further analysis. To ignore a file, expand the issue, click on the cog wheel, select Ignore file from the menu, and confirm. Warning This file is now ignored across the entire repository and for all patterns.","title":"5. Ignoring files"},{"location":"repositories/issues-view/#51-managing-ignored-files","text":"Ignored files are managed through Settings , Ignore Files . For more information on this topic, have a look at this article .","title":"5.1. Managing ignored files"},{"location":"repositories/issues-view/#6-create-a-comment-in-your-repo","text":"You can also add comments to the code on Codacy, and it will sync in your repository on GitHub or Bitbucket .","title":"6. Create a Comment in your repo"},{"location":"repositories/managing-branches/","text":"Managing branches \u00b6 Codacy supports analysis on multiple branches on your git repositories. Main branch \u00b6 By default, Codacy will automatically trigger analysis on the master branch only. You can redefine your Main branch by going to repository Settings , tab Branches . Pull Request \u00b6 Upon pull requests , Codacy will automatically trigger analysis on the branch the pull request belongs to and analyze the pull request. Enable other branches \u00b6 It is also possible to enable analysis on other branches. To do this, go to the repository Settings , open the Branches tab, and enable the branches you'd like.","title":"Managing branches"},{"location":"repositories/managing-branches/#managing-branches","text":"Codacy supports analysis on multiple branches on your git repositories.","title":"Managing branches"},{"location":"repositories/managing-branches/#main-branch","text":"By default, Codacy will automatically trigger analysis on the master branch only. You can redefine your Main branch by going to repository Settings , tab Branches .","title":"Main branch"},{"location":"repositories/managing-branches/#pull-request","text":"Upon pull requests , Codacy will automatically trigger analysis on the branch the pull request belongs to and analyze the pull request.","title":"Pull Request"},{"location":"repositories/managing-branches/#enable-other-branches","text":"It is also possible to enable analysis on other branches. To do this, go to the repository Settings , open the Branches tab, and enable the branches you'd like.","title":"Enable other branches"},{"location":"repositories/post-commit-hooks/","text":"Post-commit hooks \u00b6 For Codacy to check updates in your repository (new commits and pull requests) you must have post-commit hooks enabled. There are two ways to do this: automatically or manually Automatic setup of post-commit hook \u00b6 If you are using GitHub or Bitbucket you can let Codacy configure the hook for you. Just go to your repository settings and click on the Integrations tab. This should have a switch button for automatic setup of post-commit hooks. Missing hook automatic setup switch button \u00b6 It is possible that this switch is not visible for you. If this is your case, go to the Integrations tab and add GitHub/Bitbucket. Make sure you enable it after adding it. Manual Setup of Post-Commit Hooks on GitHub \u00b6 To turn on post-commit hooks for GitHub: Copy the Hook URL to your Clipboard. Go to Webhooks & Services under your repository settings Paste the Hook URL into the Payload URL field Select \"application/json\" in the Content Type field Click Add Webhook Here's an example of how to configure your hooks on Github: Permissions to create post-commit hooks \u00b6 If you get an error when turning on the post-commit hook, please make sure you have Admin rights on the GitHub repository.","title":"Post-commit hooks"},{"location":"repositories/post-commit-hooks/#post-commit-hooks","text":"For Codacy to check updates in your repository (new commits and pull requests) you must have post-commit hooks enabled. There are two ways to do this: automatically or manually","title":"Post-commit hooks"},{"location":"repositories/post-commit-hooks/#automatic-setup-of-post-commit-hook","text":"If you are using GitHub or Bitbucket you can let Codacy configure the hook for you. Just go to your repository settings and click on the Integrations tab. This should have a switch button for automatic setup of post-commit hooks.","title":"Automatic setup of post-commit hook"},{"location":"repositories/post-commit-hooks/#missing-hook-automatic-setup-switch-button","text":"It is possible that this switch is not visible for you. If this is your case, go to the Integrations tab and add GitHub/Bitbucket. Make sure you enable it after adding it.","title":"Missing hook automatic setup switch button"},{"location":"repositories/post-commit-hooks/#manual-setup-of-post-commit-hooks-on-github","text":"To turn on post-commit hooks for GitHub: Copy the Hook URL to your Clipboard. Go to Webhooks & Services under your repository settings Paste the Hook URL into the Payload URL field Select \"application/json\" in the Content Type field Click Add Webhook Here's an example of how to configure your hooks on Github:","title":"Manual Setup of Post-Commit Hooks on GitHub"},{"location":"repositories/post-commit-hooks/#permissions-to-create-post-commit-hooks","text":"If you get an error when turning on the post-commit hook, please make sure you have Admin rights on the GitHub repository.","title":"Permissions to create post-commit hooks"},{"location":"repositories/quality-settings/","text":"Quality settings \u00b6 Here you can define quality settings for your repository, giving you control over the build status and success/fail of commits and pull requests. This feature enables you to turn off metrics like duplication or complexity. To access the quality settings, please browse to Settings > Quality Settings . Here you find three sections where you can set specific values on commit, pull request, and repository levels. Below we explain what these settings do and how they work. 1. Commits \u00b6 To change the settings for commits, click on Customize : New issues are over: Codacy marks the commit not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: The commit is marked not up to standards if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: The commit is marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: The commit is marked not up to standards if the coverage introduced is smaller than the set value. By default, this setting is off. 2. Pull Requests \u00b6 Upon clicking the pull request Customize button, the following settings appear: New issues are over: Codacy marks the pull request not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: The pull request is marked not up to standards pull request if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: The pull request is marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: The pull request is marked not up to standards if the coverage introduced is smaller than the value set here. This value refers to the variation of coverage on your PR, for example, if your repository has 90% coverage and you want to make sure this value doesn't decrease this you should set this to 0%. By default, this setting is off. 3. Repository \u00b6 When you click on the Repository's Customize button, Codacy presents you with: Issues are over: This defines the threshold displayed in the dashboard. File complexity is over: This defines the threshold represented on the complexity dashboard. File is complex when over: A file is considered complex when its complexity is over this value. File duplication is over: This defines the threshold shown on the duplication dashboard. File is duplicate when over: A file is considered duplicated when it has more clones than this value. Coverage is under: This defines the threshold represented on the coverage dashboard.","title":"Quality settings"},{"location":"repositories/quality-settings/#quality-settings","text":"Here you can define quality settings for your repository, giving you control over the build status and success/fail of commits and pull requests. This feature enables you to turn off metrics like duplication or complexity. To access the quality settings, please browse to Settings > Quality Settings . Here you find three sections where you can set specific values on commit, pull request, and repository levels. Below we explain what these settings do and how they work.","title":"Quality settings"},{"location":"repositories/quality-settings/#1-commits","text":"To change the settings for commits, click on Customize : New issues are over: Codacy marks the commit not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: The commit is marked not up to standards if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: The commit is marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: The commit is marked not up to standards if the coverage introduced is smaller than the set value. By default, this setting is off.","title":"1. Commits"},{"location":"repositories/quality-settings/#2-pull-requests","text":"Upon clicking the pull request Customize button, the following settings appear: New issues are over: Codacy marks the pull request not up to standards if the number of issues introduced is bigger than the set value. The default value is 0. Complexity is over: The pull request is marked not up to standards pull request if the introduced complexity is bigger than the set value. By default, this setting is off. Duplication is over: The pull request is marked not up to standards if the number of clones introduced is bigger than the set value. By default, this setting is off. Coverage variation is under: The pull request is marked not up to standards if the coverage introduced is smaller than the value set here. This value refers to the variation of coverage on your PR, for example, if your repository has 90% coverage and you want to make sure this value doesn't decrease this you should set this to 0%. By default, this setting is off.","title":"2. Pull Requests"},{"location":"repositories/quality-settings/#3-repository","text":"When you click on the Repository's Customize button, Codacy presents you with: Issues are over: This defines the threshold displayed in the dashboard. File complexity is over: This defines the threshold represented on the complexity dashboard. File is complex when over: A file is considered complex when its complexity is over this value. File duplication is over: This defines the threshold shown on the duplication dashboard. File is duplicate when over: A file is considered duplicated when it has more clones than this value. Coverage is under: This defines the threshold represented on the coverage dashboard.","title":"3. Repository"},{"location":"repositories/repository-dashboard-overview/","text":"Repository Dashboard overview \u00b6 On your Repository Dashboard you get an overview of the repository and attention points we select for you on relevant items requiring your intervention. Read below for a full description of this dashboard and all the functionalities behind it! How does it look? \u00b6 On the Repository Dashboard you can find two main sections: the repository view of a specific branch (on the left side (in white) and the main branch summary view on the right side (in gray). Overall, you will find 3 main sections on the branch specific section: 1 Quality evolution Chart , 2 Issues breakdown , 3 Coverage status ; and on the main branch section: 4 Hotspots , 5 Logs and 6 Pull requests status sections. How can I access the Repository Dashboard? \u00b6 You can access the Repository Dashboard by selecting on the Organization Dashboard a specific repository, or by trying to access a repository URL for any part of our platform. On the Repository Dashboard you can select which branch you want to see details for. You can do this by selecting (or searching on the search bar) for a specific branch, next to the name of the repository: At any given moment in time, you can go back to your Organization view by clicking on \"Team\" on the left navigation sidebar. Or you can navigate to all the different menu options available on the repository view: Commits, Files, Issues, Pull Requests, Security, Code Patterns and Settings. If you click \"Dashboard\" at this level, you will always go back to the Repository Dashboard view. What are the functionalities available? \u00b6 1. Repository certification and Quality evolution \u00b6 Here you can see the grade of the repository, and you can see the quality evolution of the repository on the Quality evolution Chart . On the chart you can select to see results for the \"Last 7 days\", forthe \"Last 31 days\" or for the \"Last 8 commits\" if you don't have data from the last 31 days. You can see, per criterium (Issues, Complex Files, Duplicated code and Coverage), how the repository is behaving on the last x days. You can navigate on the different criterium by clicking on the tabs of the chart. You can also see, the trend for the next 31 days (assuming the past behavior), the pull request prediction (the changes caused by open pull requests if they are not changed) and the quality standard (defined on the repository Quality Settings ). In the example you see \"Issues\" with a red indicator meaning the number of Issues is above what was defined on the quality standards. Also, we can see next to each criterium a delta (can be \"=\", a drop or an increase), representing the changes observed in the period selected. In the example, there was no change of number of Issues on the last 31 days, however there was a decrease of 160% of duplicated code. You should know for Issues/Complex Files/Duplicated code (the more we have it, the worse we are), being above of the defined standards is considered bad, so the indication will be while for Coverage (the more we have it, the better we are), being above of the defined standards will be flagged with . Still with regards to coverage it only shows a value if the most recent commit received a coverage report. We do this as one commit can easily change the size or number of files on the repository and even remove some of the files that had coverage information. For the case when you don't have recent data, we will display by default an option on your graph - \"Last 8 commits\", and we display the quality evolution (and all the other metrics) for your last 8 commits analyzed on Codacy. 2. Issues breakdown \u00b6 Here you can see the total of issues on the branch selected. Additionally, you will see a breakdown of the issues found per category of issue. By clicking on the name of the category, you will be directed to the list of issues filtered by that category. You can also click on \"See all issues\" and go to the list of issues with no category selected. In case you don't have issues this component will display 0 issues (in the total and in all categories). 3. Coverage status \u00b6 On this component of the Repository Dashboard you will see the number of files without coverage, the number of files with coverage \"not up to standards\" and files with coverage \"up to standards\" based on your quality settings (defined at the repository level). If you click on \"See all files\" you will go to the list of files. In case you don't have coverage set up for this repository we will let you know on this component, and you can click on \"Set up your coverage here\" (in case you have \"write\" permission on the Repository) and go to the repository settings to configure set up coverage. 4. Hotspots \u00b6 You have a section of relevant items that require attention on the Repository. On this section you can see a set of attention points, you can click on them or dismiss them, in case you don't feel they are relevant. We have created a full article on this , so that you can learn more about it. 5. Logs \u00b6 You have a section of relevant activities that happened on the repository you selected. We have created a full article on this , so you can learn more about it. 6. Pull requests status \u00b6 Under this section you will see a display of all open pull requests for this repository and their split between \"Not up to standards\", \"Up to standards\" and \"Analysis failed\". If you click on \"See all pull requests\" you go to the Pull requests page for that repository. We would love your feedback, in case you want to let us know what you think about the Repository Dashboard, how it could be improved, etc feel free to reach out!","title":"Repository Dashboard overview"},{"location":"repositories/repository-dashboard-overview/#repository-dashboard-overview","text":"On your Repository Dashboard you get an overview of the repository and attention points we select for you on relevant items requiring your intervention. Read below for a full description of this dashboard and all the functionalities behind it!","title":"Repository Dashboard overview"},{"location":"repositories/repository-dashboard-overview/#how-does-it-look","text":"On the Repository Dashboard you can find two main sections: the repository view of a specific branch (on the left side (in white) and the main branch summary view on the right side (in gray). Overall, you will find 3 main sections on the branch specific section: 1 Quality evolution Chart , 2 Issues breakdown , 3 Coverage status ; and on the main branch section: 4 Hotspots , 5 Logs and 6 Pull requests status sections.","title":"How does it look?"},{"location":"repositories/repository-dashboard-overview/#how-can-i-access-the-repository-dashboard","text":"You can access the Repository Dashboard by selecting on the Organization Dashboard a specific repository, or by trying to access a repository URL for any part of our platform. On the Repository Dashboard you can select which branch you want to see details for. You can do this by selecting (or searching on the search bar) for a specific branch, next to the name of the repository: At any given moment in time, you can go back to your Organization view by clicking on \"Team\" on the left navigation sidebar. Or you can navigate to all the different menu options available on the repository view: Commits, Files, Issues, Pull Requests, Security, Code Patterns and Settings. If you click \"Dashboard\" at this level, you will always go back to the Repository Dashboard view.","title":"How can I access the Repository Dashboard?"},{"location":"repositories/repository-dashboard-overview/#what-are-the-functionalities-available","text":"","title":"What are the functionalities available?"},{"location":"repositories/repository-dashboard-overview/#1-repository-certification-and-quality-evolution","text":"Here you can see the grade of the repository, and you can see the quality evolution of the repository on the Quality evolution Chart . On the chart you can select to see results for the \"Last 7 days\", forthe \"Last 31 days\" or for the \"Last 8 commits\" if you don't have data from the last 31 days. You can see, per criterium (Issues, Complex Files, Duplicated code and Coverage), how the repository is behaving on the last x days. You can navigate on the different criterium by clicking on the tabs of the chart. You can also see, the trend for the next 31 days (assuming the past behavior), the pull request prediction (the changes caused by open pull requests if they are not changed) and the quality standard (defined on the repository Quality Settings ). In the example you see \"Issues\" with a red indicator meaning the number of Issues is above what was defined on the quality standards. Also, we can see next to each criterium a delta (can be \"=\", a drop or an increase), representing the changes observed in the period selected. In the example, there was no change of number of Issues on the last 31 days, however there was a decrease of 160% of duplicated code. You should know for Issues/Complex Files/Duplicated code (the more we have it, the worse we are), being above of the defined standards is considered bad, so the indication will be while for Coverage (the more we have it, the better we are), being above of the defined standards will be flagged with . Still with regards to coverage it only shows a value if the most recent commit received a coverage report. We do this as one commit can easily change the size or number of files on the repository and even remove some of the files that had coverage information. For the case when you don't have recent data, we will display by default an option on your graph - \"Last 8 commits\", and we display the quality evolution (and all the other metrics) for your last 8 commits analyzed on Codacy.","title":"1. Repository certification and Quality evolution"},{"location":"repositories/repository-dashboard-overview/#2-issues-breakdown","text":"Here you can see the total of issues on the branch selected. Additionally, you will see a breakdown of the issues found per category of issue. By clicking on the name of the category, you will be directed to the list of issues filtered by that category. You can also click on \"See all issues\" and go to the list of issues with no category selected. In case you don't have issues this component will display 0 issues (in the total and in all categories).","title":"2. Issues breakdown"},{"location":"repositories/repository-dashboard-overview/#3-coverage-status","text":"On this component of the Repository Dashboard you will see the number of files without coverage, the number of files with coverage \"not up to standards\" and files with coverage \"up to standards\" based on your quality settings (defined at the repository level). If you click on \"See all files\" you will go to the list of files. In case you don't have coverage set up for this repository we will let you know on this component, and you can click on \"Set up your coverage here\" (in case you have \"write\" permission on the Repository) and go to the repository settings to configure set up coverage.","title":"3. Coverage status"},{"location":"repositories/repository-dashboard-overview/#4-hotspots","text":"You have a section of relevant items that require attention on the Repository. On this section you can see a set of attention points, you can click on them or dismiss them, in case you don't feel they are relevant. We have created a full article on this , so that you can learn more about it.","title":"4. Hotspots"},{"location":"repositories/repository-dashboard-overview/#5-logs","text":"You have a section of relevant activities that happened on the repository you selected. We have created a full article on this , so you can learn more about it.","title":"5. Logs"},{"location":"repositories/repository-dashboard-overview/#6-pull-requests-status","text":"Under this section you will see a display of all open pull requests for this repository and their split between \"Not up to standards\", \"Up to standards\" and \"Analysis failed\". If you click on \"See all pull requests\" you go to the Pull requests page for that repository. We would love your feedback, in case you want to let us know what you think about the Repository Dashboard, how it could be improved, etc feel free to reach out!","title":"6. Pull requests status"},{"location":"repositories/security-dashboard/","text":"Security Dashboard \u00b6 On the security dashboard, you get an overview of all current security alerts. Supported languages \u00b6 The security monitor is available for the following languages: Apex C# Java JavaScript Python Ruby Scala PHP C C++ Shell script Dockerfile Visual Basic Elixir PowerShell TSQL Groovy Tools \u00b6 The security monitor is built using security patterns from: Bandit Brakeman Codacy Scalameta Pro ESLint (also: 1 , 2 , 3 and 4 ) FindBugs (Codacy Self-hosted only) FindBugsSecurity (Codacy Self-hosted only) SpotBugs (Codacy Self-hosted only) Sonar C# Sonar VB.NET PMD PHP Mess Detector Pylint (Python 2) Pylint (Python 3) RuboCop Cppcheck Shellcheck PHP CodeSniffer Hadolint Prospector Bundler-audit Credo FlawFinder PSScriptAnalyzer TSQLLint CodeNarc Supported categories \u00b6 XSS: XSS enables attackers to inject client-side scripts into web pages viewed by other users. Input validation: Input not validated may originate SQL Injection attacks for instance. File access: An attacker may use special paths to access files that should not be accessible. HTTP: HTTP headers are a common attack vector for malign users. Cookies: An HTTP cookie is a small piece of data sent from a website and stored on the user's computer by the browser while the user is browsing. Unexpected behaviour: Assigning values to private APIs might lead to unexpected behaviour. Mass assignment: Mass assignment is a feature of Rails which allows an application to create a record from the values of a hash. Insecure storage: Storing sensitive data using this APIs is not safe. Insecure modules/libraries: Consider possible security implications associated with some modules. Visibility: Fields should not have public accessibility. CSRF: Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. Android: Android specific issues. Malicious code: Exposed internal APIs can be accessed or change changed by malicious code or by accident from another package. Cryptography: Cryptography is a security technique widely used and there are several cryptographic functions, but not all of them are secure. Command injection: Command injection is an attack in which the goal is the execution of arbitrary commands on the host operating system. Firefox OS: Sensitive APIs of Firefox OS. Auth: Authentication is present in almost all web applications nowadays. DoS: The Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. SQL injection: A SQL injection attack consists of insertion or 'injection' of a SQL query via the input data from the client to the application. Routes: Badly configured routes can give unintended access to an attacker. Regex: Regex can be used in a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach heavy computation situations that cause them to work very slowly (exponentially related to input size). SSL: Simply using SSL isn't enough to ensure the data you are sending is secure. Man in the middle attacks are well known and widely used. Other: Other language specific security issues. Category states \u00b6 Each security category listed on the left-hand side of the dashboard has one of four states: A green check mark means that everything is OK for this category: all the security patterns in this category are enabled, and no security issues have been found. A yellow exclamation mark means that there are security patterns in this category that are disabled . You should enable the patterns in this category so it is verified. A red cross means that there are security issues identified for this category. A blue info icon means that Codacy cannot be sure if you have all the security patterns in this category enabled . This happens when you are using configuration files to control which patterns are enabled. Additional features \u00b6 On the Security dashboard view you can also: Enable all the security patterns for that repository with one click Download all the patterns in a CSV file (this will give you a list of all the patterns considered by Codacy under the security category) You just have to go to your repository's Security Tab, click on and select the relevant option.","title":"Security Dashboard"},{"location":"repositories/security-dashboard/#security-dashboard","text":"On the security dashboard, you get an overview of all current security alerts.","title":"Security Dashboard"},{"location":"repositories/security-dashboard/#supported-languages","text":"The security monitor is available for the following languages: Apex C# Java JavaScript Python Ruby Scala PHP C C++ Shell script Dockerfile Visual Basic Elixir PowerShell TSQL Groovy","title":"Supported languages"},{"location":"repositories/security-dashboard/#tools","text":"The security monitor is built using security patterns from: Bandit Brakeman Codacy Scalameta Pro ESLint (also: 1 , 2 , 3 and 4 ) FindBugs (Codacy Self-hosted only) FindBugsSecurity (Codacy Self-hosted only) SpotBugs (Codacy Self-hosted only) Sonar C# Sonar VB.NET PMD PHP Mess Detector Pylint (Python 2) Pylint (Python 3) RuboCop Cppcheck Shellcheck PHP CodeSniffer Hadolint Prospector Bundler-audit Credo FlawFinder PSScriptAnalyzer TSQLLint CodeNarc","title":"Tools"},{"location":"repositories/security-dashboard/#supported-categories","text":"XSS: XSS enables attackers to inject client-side scripts into web pages viewed by other users. Input validation: Input not validated may originate SQL Injection attacks for instance. File access: An attacker may use special paths to access files that should not be accessible. HTTP: HTTP headers are a common attack vector for malign users. Cookies: An HTTP cookie is a small piece of data sent from a website and stored on the user's computer by the browser while the user is browsing. Unexpected behaviour: Assigning values to private APIs might lead to unexpected behaviour. Mass assignment: Mass assignment is a feature of Rails which allows an application to create a record from the values of a hash. Insecure storage: Storing sensitive data using this APIs is not safe. Insecure modules/libraries: Consider possible security implications associated with some modules. Visibility: Fields should not have public accessibility. CSRF: Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. Android: Android specific issues. Malicious code: Exposed internal APIs can be accessed or change changed by malicious code or by accident from another package. Cryptography: Cryptography is a security technique widely used and there are several cryptographic functions, but not all of them are secure. Command injection: Command injection is an attack in which the goal is the execution of arbitrary commands on the host operating system. Firefox OS: Sensitive APIs of Firefox OS. Auth: Authentication is present in almost all web applications nowadays. DoS: The Denial of Service (DoS) attack is focused on making a resource (site, application, server) unavailable for the purpose it was designed. SQL injection: A SQL injection attack consists of insertion or 'injection' of a SQL query via the input data from the client to the application. Routes: Badly configured routes can give unintended access to an attacker. Regex: Regex can be used in a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach heavy computation situations that cause them to work very slowly (exponentially related to input size). SSL: Simply using SSL isn't enough to ensure the data you are sending is secure. Man in the middle attacks are well known and widely used. Other: Other language specific security issues.","title":"Supported categories"},{"location":"repositories/security-dashboard/#category-states","text":"Each security category listed on the left-hand side of the dashboard has one of four states: A green check mark means that everything is OK for this category: all the security patterns in this category are enabled, and no security issues have been found. A yellow exclamation mark means that there are security patterns in this category that are disabled . You should enable the patterns in this category so it is verified. A red cross means that there are security issues identified for this category. A blue info icon means that Codacy cannot be sure if you have all the security patterns in this category enabled . This happens when you are using configuration files to control which patterns are enabled.","title":"Category states"},{"location":"repositories/security-dashboard/#additional-features","text":"On the Security dashboard view you can also: Enable all the security patterns for that repository with one click Download all the patterns in a CSV file (this will give you a list of all the patterns considered by Codacy under the security category) You just have to go to your repository's Security Tab, click on and select the relevant option.","title":"Additional features"},{"location":"repositories/share-your-repository-with-a-non-codacy-user/","text":"Share your repository with a non-Codacy user \u00b6 If you are a cloud user, you can now share your repository with a non-Codacy user, giving them access to your Repository Dashboard through a link that doesn't require a login. You can find the option to Share in any Repository Dashboard. Codacy will generate a link that you can copy and share anywhere. Alternatively, you can share to Twitter. You can revoke access for shared links to your repository in the Repository Settings. Revoking a link removes access to the repository dashboard for everyone you shared the link with. Revoke Access: will revoke the link you generated for that repository. Revoke Access for all: an admin will revoke all links generated by anyone for that repository. Recipients of the share through email will get the following email: If you have any questions or comments, please do not hesitate to contact us.","title":"Share your repository with a non-Codacy user"},{"location":"repositories/share-your-repository-with-a-non-codacy-user/#share-your-repository-with-a-non-codacy-user","text":"If you are a cloud user, you can now share your repository with a non-Codacy user, giving them access to your Repository Dashboard through a link that doesn't require a login. You can find the option to Share in any Repository Dashboard. Codacy will generate a link that you can copy and share anywhere. Alternatively, you can share to Twitter. You can revoke access for shared links to your repository in the Repository Settings. Revoking a link removes access to the repository dashboard for everyone you shared the link with. Revoke Access: will revoke the link you generated for that repository. Revoke Access for all: an admin will revoke all links generated by anyone for that repository. Recipients of the share through email will get the following email: If you have any questions or comments, please do not hesitate to contact us.","title":"Share your repository with a non-Codacy user"},{"location":"repositories/what-are-the-different-grades-and-how-are-they-calculated/","text":"What are the different Grades and how are they calculated? \u00b6 1. Overall Grade \u00b6 Codacy gives an overall grade to help you better understand the quality of your repository. Grades range from A to F , A being the highest grade. Note the grading is performed on a branch level, to give a better understanding of the code quality on a branch basis. 2. Category Grades \u00b6 Issue classification is as follows: Code Style Compatibility Error Prone Performance Security Unused Code Every issue impacts the grade of its category. Category grading ranges from 0% - 100%, 100% being the highest grade. 3. File Grades \u00b6 File grades range from A to F , A being the highest grade. Grading every file occurs according to the weighted average of the following categories: issues clones complexity coverage (optional) 4. Grade Calculation \u00b6 Codacy grades based on the number of issues for every thousand lines of code (KLOC). Steve McConnell, in his book 'Code Complete,' wrote about average bugs per LOC: (a) Industry Average: \"about 15 - 50 errors per 1000 lines of delivered code.\" He further states this is usually representative of code that has some level of structured programming behind it but probably includes a mix of coding techniques.","title":"What are the different Grades and how are they calculated?"},{"location":"repositories/what-are-the-different-grades-and-how-are-they-calculated/#what-are-the-different-grades-and-how-are-they-calculated","text":"","title":"What are the different Grades and how are they calculated?"},{"location":"repositories/what-are-the-different-grades-and-how-are-they-calculated/#1-overall-grade","text":"Codacy gives an overall grade to help you better understand the quality of your repository. Grades range from A to F , A being the highest grade. Note the grading is performed on a branch level, to give a better understanding of the code quality on a branch basis.","title":"1. Overall Grade"},{"location":"repositories/what-are-the-different-grades-and-how-are-they-calculated/#2-category-grades","text":"Issue classification is as follows: Code Style Compatibility Error Prone Performance Security Unused Code Every issue impacts the grade of its category. Category grading ranges from 0% - 100%, 100% being the highest grade.","title":"2. Category Grades"},{"location":"repositories/what-are-the-different-grades-and-how-are-they-calculated/#3-file-grades","text":"File grades range from A to F , A being the highest grade. Grading every file occurs according to the weighted average of the following categories: issues clones complexity coverage (optional)","title":"3. File Grades"},{"location":"repositories/what-are-the-different-grades-and-how-are-they-calculated/#4-grade-calculation","text":"Codacy grades based on the number of issues for every thousand lines of code (KLOC). Steve McConnell, in his book 'Code Complete,' wrote about average bugs per LOC: (a) Industry Average: \"about 15 - 50 errors per 1000 lines of delivered code.\" He further states this is usually representative of code that has some level of structured programming behind it but probably includes a mix of coding techniques.","title":"4. Grade Calculation"},{"location":"repositories-configure/add-coverage-to-your-repo/","text":"Add coverage to your repo \u00b6 You can configure repositories to show code coverage reports directly in Codacy. Follow this guide to set up code coverage for your repository. If your report format is not yet supported check some of the community's projects, e.g., schrej/godacov , or contribute to our coverage-parser project. We also support partial coverage reports. See here on how to send multiple coverage reports for the same language. See also: Coverage Generate Coverage","title":"Add coverage to your repo"},{"location":"repositories-configure/add-coverage-to-your-repo/#add-coverage-to-your-repo","text":"You can configure repositories to show code coverage reports directly in Codacy. Follow this guide to set up code coverage for your repository. If your report format is not yet supported check some of the community's projects, e.g., schrej/godacov , or contribute to our coverage-parser project. We also support partial coverage reports. See here on how to send multiple coverage reports for the same language. See also: Coverage Generate Coverage","title":"Add coverage to your repo"},{"location":"repositories-configure/codacy-configuration-file/","text":"Codacy Configuration File \u00b6 Codacy supports configuring certain advanced features through a configuration file. You can exclude files using glob patterns and add custom extensions to languages. You can ignore files globally, for certain categories (duplication or metrics) or for a specific tool (e.g.: Rubocop). The category metrics refers to the information you find under File details such as Size, Structure and Complexity. To add custom extensions to a language you can also add an entry in this file, but keep in mind that some tools might not work out of the box with those extensions and might need changes. If you want to disable an engine that needs to be done directly in the Code Patterns page. The configuration file name must be \".codacy.yaml\" or \".codacy.yml\" and should be placed in the root of your repository. --- engines : rubocop : exclude_paths : - config/engines.yml duplication : exclude_paths : - config/engines.yml metric : exclude_paths : - config/engines.yml languages : css : extensions : - '-css.resource' exclude_paths : - '.bundle/**' - 'spec/**/*' - 'benchmarks/**/*' - '**.min.js' - '**/tests/**' You must use the following Java glob syntax to configure your 'exclude_paths' to ignore files: '**.extension' ignores all files with the same extension across all your repository 'test/*' ignores all files in the root of test 'test/**' ignores everything inside test 'test/**/*' ignores all files inside sub-folder of test '**/*.resource' ignores all .resource in all folders and sub-folders Please note that if the configuration file exists in your repository, any 'exclude paths' defined on Codacy's UI will not apply. Validating your configuration file \u00b6 You can use the codacy-analysis-cli to validate the contents of your configuration file. Run the following command in the folder where the configuration file is located: codacy-analysis-cli validate-configuration --directory ` pwd ` Which tools can be configured and which name should I use? \u00b6 All tools that Codacy supports are configurable using our configuration file. The names that should be used for each of them are: ameba bandit brakeman bundleraudit checkstyle codacy-scalameta-pro codenarc coffeelint cppcheck credo csslint detekt eslint findbugs findbugssec flawfinder golint govet hadolint jacksonlinter jshint nsp phpcs phpmd pmd-legacy pmd prospector psscriptanalyzer pylint pylintpython3 remark-int rubocop scalastyle scsslint shellcheck sonarscharp spotbugs SQLint stylelint swiftlint tailor tslint tsqllint If you have questions about Codacy configuration file, please, contact us at support@codacy.com .","title":"Codacy Configuration File"},{"location":"repositories-configure/codacy-configuration-file/#codacy-configuration-file","text":"Codacy supports configuring certain advanced features through a configuration file. You can exclude files using glob patterns and add custom extensions to languages. You can ignore files globally, for certain categories (duplication or metrics) or for a specific tool (e.g.: Rubocop). The category metrics refers to the information you find under File details such as Size, Structure and Complexity. To add custom extensions to a language you can also add an entry in this file, but keep in mind that some tools might not work out of the box with those extensions and might need changes. If you want to disable an engine that needs to be done directly in the Code Patterns page. The configuration file name must be \".codacy.yaml\" or \".codacy.yml\" and should be placed in the root of your repository. --- engines : rubocop : exclude_paths : - config/engines.yml duplication : exclude_paths : - config/engines.yml metric : exclude_paths : - config/engines.yml languages : css : extensions : - '-css.resource' exclude_paths : - '.bundle/**' - 'spec/**/*' - 'benchmarks/**/*' - '**.min.js' - '**/tests/**' You must use the following Java glob syntax to configure your 'exclude_paths' to ignore files: '**.extension' ignores all files with the same extension across all your repository 'test/*' ignores all files in the root of test 'test/**' ignores everything inside test 'test/**/*' ignores all files inside sub-folder of test '**/*.resource' ignores all .resource in all folders and sub-folders Please note that if the configuration file exists in your repository, any 'exclude paths' defined on Codacy's UI will not apply.","title":"Codacy Configuration File"},{"location":"repositories-configure/codacy-configuration-file/#validating-your-configuration-file","text":"You can use the codacy-analysis-cli to validate the contents of your configuration file. Run the following command in the folder where the configuration file is located: codacy-analysis-cli validate-configuration --directory ` pwd `","title":"Validating your configuration file"},{"location":"repositories-configure/codacy-configuration-file/#which-tools-can-be-configured-and-which-name-should-i-use","text":"All tools that Codacy supports are configurable using our configuration file. The names that should be used for each of them are: ameba bandit brakeman bundleraudit checkstyle codacy-scalameta-pro codenarc coffeelint cppcheck credo csslint detekt eslint findbugs findbugssec flawfinder golint govet hadolint jacksonlinter jshint nsp phpcs phpmd pmd-legacy pmd prospector psscriptanalyzer pylint pylintpython3 remark-int rubocop scalastyle scsslint shellcheck sonarscharp spotbugs SQLint stylelint swiftlint tailor tslint tsqllint If you have questions about Codacy configuration file, please, contact us at support@codacy.com .","title":"Which tools can be configured and which name should I use?"},{"location":"repositories-configure/code-patterns/","text":"Code patterns \u00b6 As a wise man once said, \"You can't please everyone\", and that is true for code patterns. But don't you worry! You can choose from a range of patterns to fit your needs. Pattern details and filters \u00b6 Each pattern has a title and a short description. To see a detailed explanation you can click on Show Details in the top right corner (mouse over the pattern and the Show Details option will appear): The pattern explanation shows more detail about the issues it can detect and how to fix them. You can filter the patterns by category using the side menu: The issues detected by Codacy belong to one of the following categories: Code Style: Code formatting and syntax problems. For example, variable names style, enforcing the use of brackets and quotation marks Error Prone: Code that may hide bugs and language keywords that should be used with caution. For example, the operator == in Javascript or Option.get in Scala Code Complexity: High complexity methods and classes that should be refactored Performance: Code that could have performance problems Compatibility: Used mainly for frontend code, detects compatibility problems across different browser versions Unused Code: Unused variables and methods, code that can't be reached Security: All security problems Documentation: Detects methods and classes that do not have the correct comment annotations Configuring your repository patterns \u00b6 To configure the patterns used to analyze your repository click on the checkbox to the left of the title: When you change the enabled patterns you can reanalyze your repository. To do that, enter the latest commit from your list on the Commit view and click reanalyze . Account vs repository patterns \u00b6 Your account patterns allow you to change the default selection of patterns by enabling or disabling them for all future repositories added by you. See Default patterns for more details. The repository patterns specify the patterns you want to use for each repository. When you change your account patterns it doesn't affect pattern selection for repositories already added. Open Code patterns : I have my own tool configuration file \u00b6 If you have configuration files for your static analysis tool of choice, add it to the root of your repository and Codacy will pick it up automatically. Codacy supports configuration files for several tools. To have results according to your configuration file, you need to go to the Code Patterns view, select Configuration file for the respective tool, and select the option as shown in the example below. The known file names for each tool are the following: Tool name Language Files detected Other info Ameba Crystal .ameba.yml Bandit Python bandit.yml, .bandit To solve flagged valid Python \"assert\" statements, create a bandit.yml in the root of the repo containing: skips: \\['B101'\\] Brakeman Ruby config/brakeman.yml Checkstyle Java checkstyle.xml Supports config file in other dirs than root and can search up to 5 dirs into the repository. Codenarc Groovy .codenarcrc credo Elixir .credo.exs CSSLint CSS .csslintrc detekt Kotlin default-detekt-config.yml, detekt.yml Supports config file in other dirs than root and can search up to 5 dirs into the repository. ESLint JavaScript, Typescript, JSON .eslintrc.js, .eslintrc.yaml,.eslintrc.yml, .eslintrc.json, .eslintrc Plugins in the UI Other Plugins Hadolint Docker .hadolint.yaml JSHint JavaScript .jshintrc PHP CodeSniffer PHP phpcs.xml, phpcs.xml.dist PHPMD PHP codesize.xml PMD Apex, Java, Javascript, JSP, XML, Velocity and Visualforce ruleset.xml, apex-ruleset.xml Supports config file in other dirs than root and can search up to 5 dirs into the repository. Prospector Python .landscape.yml, .landscape.yaml, landscape.yml, landscape.yaml, .prospector.yml, .prospector.yaml, prospector.yml, prospector.yaml Pylint Python pylintrc, .pylintrc Plugins RemarkLint Markdown .remarkrc, .remarkrc.json, .remarkrc.yaml, .remarkrc.yml, .remarkrc.js Rubocop Ruby .rubocop.yml ScalaStyle Scala scalastyle_config.xml, scalastyle-config.xml SCSSLint SASS .scss-lint.yml Sonar C# C# SonarLint.xml Spotbugs Java, Scala findbugs.xml, findbugs-includes.xml, findbugs-excludes.xml Supports config file in other dirs than root and can search up to 5 dirs into the repository. Stylelint LESS, SASS, CSS .stylelintrc, stylelint.config.js, .stylelintrc.json, .stylelintrc.yaml, .stylelintrc.js, stylelintrc.yml Supports config file in other dirs than root and can search up to 5 dirs into the repository. SwiftLint Swift .swiftlint.yml Tailor Swift .tailor.yml TSLint TypeScript tslint.json tsqllint SQL .tsqllintrc Revive Go revive.toml For performance reasons, if you make changes to pattern settings using configuration files, Codacy may display outdated messages for issues that have already been identified by those patterns. Configuring the repository root directory for analysis \u00b6 By default, Codacy starts the analysis on the repository's root. However, you can set up a different repository folder on which to start the analysis using a Codacy configuration file . This file needs to be named \".codacy.yaml\" or \".codacy.yml\" and must be placed in the repository's root. See example below: 1 2 3 4 5 6 7 --- engines: rubocop: enabled: true exclude_paths: - config/engines.yml base_sub_dir: test/baseDir","title":"Code patterns"},{"location":"repositories-configure/code-patterns/#code-patterns","text":"As a wise man once said, \"You can't please everyone\", and that is true for code patterns. But don't you worry! You can choose from a range of patterns to fit your needs.","title":"Code patterns"},{"location":"repositories-configure/code-patterns/#pattern-details-and-filters","text":"Each pattern has a title and a short description. To see a detailed explanation you can click on Show Details in the top right corner (mouse over the pattern and the Show Details option will appear): The pattern explanation shows more detail about the issues it can detect and how to fix them. You can filter the patterns by category using the side menu: The issues detected by Codacy belong to one of the following categories: Code Style: Code formatting and syntax problems. For example, variable names style, enforcing the use of brackets and quotation marks Error Prone: Code that may hide bugs and language keywords that should be used with caution. For example, the operator == in Javascript or Option.get in Scala Code Complexity: High complexity methods and classes that should be refactored Performance: Code that could have performance problems Compatibility: Used mainly for frontend code, detects compatibility problems across different browser versions Unused Code: Unused variables and methods, code that can't be reached Security: All security problems Documentation: Detects methods and classes that do not have the correct comment annotations","title":"Pattern details and filters"},{"location":"repositories-configure/code-patterns/#configuring-your-repository-patterns","text":"To configure the patterns used to analyze your repository click on the checkbox to the left of the title: When you change the enabled patterns you can reanalyze your repository. To do that, enter the latest commit from your list on the Commit view and click reanalyze .","title":"Configuring your repository patterns"},{"location":"repositories-configure/code-patterns/#account-vs-repository-patterns","text":"Your account patterns allow you to change the default selection of patterns by enabling or disabling them for all future repositories added by you. See Default patterns for more details. The repository patterns specify the patterns you want to use for each repository. When you change your account patterns it doesn't affect pattern selection for repositories already added. Open Code patterns :","title":"Account vs repository patterns"},{"location":"repositories-configure/code-patterns/#i-have-my-own-tool-configuration-file","text":"If you have configuration files for your static analysis tool of choice, add it to the root of your repository and Codacy will pick it up automatically. Codacy supports configuration files for several tools. To have results according to your configuration file, you need to go to the Code Patterns view, select Configuration file for the respective tool, and select the option as shown in the example below. The known file names for each tool are the following: Tool name Language Files detected Other info Ameba Crystal .ameba.yml Bandit Python bandit.yml, .bandit To solve flagged valid Python \"assert\" statements, create a bandit.yml in the root of the repo containing: skips: \\['B101'\\] Brakeman Ruby config/brakeman.yml Checkstyle Java checkstyle.xml Supports config file in other dirs than root and can search up to 5 dirs into the repository. Codenarc Groovy .codenarcrc credo Elixir .credo.exs CSSLint CSS .csslintrc detekt Kotlin default-detekt-config.yml, detekt.yml Supports config file in other dirs than root and can search up to 5 dirs into the repository. ESLint JavaScript, Typescript, JSON .eslintrc.js, .eslintrc.yaml,.eslintrc.yml, .eslintrc.json, .eslintrc Plugins in the UI Other Plugins Hadolint Docker .hadolint.yaml JSHint JavaScript .jshintrc PHP CodeSniffer PHP phpcs.xml, phpcs.xml.dist PHPMD PHP codesize.xml PMD Apex, Java, Javascript, JSP, XML, Velocity and Visualforce ruleset.xml, apex-ruleset.xml Supports config file in other dirs than root and can search up to 5 dirs into the repository. Prospector Python .landscape.yml, .landscape.yaml, landscape.yml, landscape.yaml, .prospector.yml, .prospector.yaml, prospector.yml, prospector.yaml Pylint Python pylintrc, .pylintrc Plugins RemarkLint Markdown .remarkrc, .remarkrc.json, .remarkrc.yaml, .remarkrc.yml, .remarkrc.js Rubocop Ruby .rubocop.yml ScalaStyle Scala scalastyle_config.xml, scalastyle-config.xml SCSSLint SASS .scss-lint.yml Sonar C# C# SonarLint.xml Spotbugs Java, Scala findbugs.xml, findbugs-includes.xml, findbugs-excludes.xml Supports config file in other dirs than root and can search up to 5 dirs into the repository. Stylelint LESS, SASS, CSS .stylelintrc, stylelint.config.js, .stylelintrc.json, .stylelintrc.yaml, .stylelintrc.js, stylelintrc.yml Supports config file in other dirs than root and can search up to 5 dirs into the repository. SwiftLint Swift .swiftlint.yml Tailor Swift .tailor.yml TSLint TypeScript tslint.json tsqllint SQL .tsqllintrc Revive Go revive.toml For performance reasons, if you make changes to pattern settings using configuration files, Codacy may display outdated messages for issues that have already been identified by those patterns.","title":"I have my own tool configuration file"},{"location":"repositories-configure/code-patterns/#configuring-the-repository-root-directory-for-analysis","text":"By default, Codacy starts the analysis on the repository's root. However, you can set up a different repository folder on which to start the analysis using a Codacy configuration file . This file needs to be named \".codacy.yaml\" or \".codacy.yml\" and must be placed in the repository's root. See example below: 1 2 3 4 5 6 7 --- engines: rubocop: enabled: true exclude_paths: - config/engines.yml base_sub_dir: test/baseDir","title":"Configuring the repository root directory for analysis"},{"location":"repositories-configure/code-standards/","text":"Code Standards \u00b6 You can use configuration files to enforce code standards. Language Standard File PHP PSR1 and PSR2 Learn more about Setting up configuration files in your repository .","title":"Code Standards"},{"location":"repositories-configure/code-standards/#code-standards","text":"You can use configuration files to enforce code standards. Language Standard File PHP PSR1 and PSR2 Learn more about Setting up configuration files in your repository .","title":"Code Standards"},{"location":"repositories-configure/coverage/","text":"Coverage \u00b6 How to set up coverage \u00b6 For the next steps, we assume you already have tests and coverage for your repository. If you don't have coverage and need help, take a look at our article on how to generate coverage. Repositories can be configured to show code coverage reports directly in Codacy. Codacy reads the source coverage reports, converts them to a smaller JSON file and uploads them, showing all results integrated into your repository's dashboard . Project API Token \u00b6 To set up coverage reporting you'll need a Project API token. You can find it in your repository settings 'Integrations' tab. Token security \u00b6 You should keep your API token well protected, as it grants owner permissions to your repositories. If you use CircleCI or Travis CI, you should use your token as an environment variable. Don't put your keys in your configuration files , check your service settings on how to set environment variables. Setting token as environment variable \u00b6 export CODACY_PROJECT_TOKEN = %Project_Token% (replacing %Project_Token% with your token) Setup \u00b6 Check here for detailed instructions on how to set up the coverage reporter plugin. Submitting coverage for unsupported languages or tools \u00b6 If your language or build tool isn't supported yet, you can send the coverage data directly through the Codacy API. You can check the endpoint in the API documentation and an example of the JSON payload below. { \"total\" : 23 , \"fileReports\" : [ { \"filename\" : \"src/Codacy/Coverage/Parser/CloverParser.php\" , \"total\" : 54 , \"coverage\" : { \"3\" : 3 , \"5\" : 0 , \"7\" : 1 } } ] } Note In case the token was retrieved from the Repository integrations tab, the header should be project-token . If it is an account token, the header should be api-token and you must call this API method instead. Also, note all coverable lines should be present on the \"coverage\" variable of the JSON payload. In the example, you can see that \"5\": 0, meaning that line 5 is not covered. See also \u00b6 Add Coverage to your repo Generate Coverage","title":"Coverage"},{"location":"repositories-configure/coverage/#coverage","text":"","title":"Coverage"},{"location":"repositories-configure/coverage/#how-to-set-up-coverage","text":"For the next steps, we assume you already have tests and coverage for your repository. If you don't have coverage and need help, take a look at our article on how to generate coverage. Repositories can be configured to show code coverage reports directly in Codacy. Codacy reads the source coverage reports, converts them to a smaller JSON file and uploads them, showing all results integrated into your repository's dashboard .","title":"How to set up coverage"},{"location":"repositories-configure/coverage/#project-api-token","text":"To set up coverage reporting you'll need a Project API token. You can find it in your repository settings 'Integrations' tab.","title":"Project API Token"},{"location":"repositories-configure/coverage/#token-security","text":"You should keep your API token well protected, as it grants owner permissions to your repositories. If you use CircleCI or Travis CI, you should use your token as an environment variable. Don't put your keys in your configuration files , check your service settings on how to set environment variables.","title":"Token security"},{"location":"repositories-configure/coverage/#setting-token-as-environment-variable","text":"export CODACY_PROJECT_TOKEN = %Project_Token% (replacing %Project_Token% with your token)","title":"Setting token as environment variable"},{"location":"repositories-configure/coverage/#setup","text":"Check here for detailed instructions on how to set up the coverage reporter plugin.","title":"Setup"},{"location":"repositories-configure/coverage/#submitting-coverage-for-unsupported-languages-or-tools","text":"If your language or build tool isn't supported yet, you can send the coverage data directly through the Codacy API. You can check the endpoint in the API documentation and an example of the JSON payload below. { \"total\" : 23 , \"fileReports\" : [ { \"filename\" : \"src/Codacy/Coverage/Parser/CloverParser.php\" , \"total\" : 54 , \"coverage\" : { \"3\" : 3 , \"5\" : 0 , \"7\" : 1 } } ] } Note In case the token was retrieved from the Repository integrations tab, the header should be project-token . If it is an account token, the header should be api-token and you must call this API method instead. Also, note all coverable lines should be present on the \"coverage\" variable of the JSON payload. In the example, you can see that \"5\": 0, meaning that line 5 is not covered.","title":"Submitting coverage for unsupported languages or tools"},{"location":"repositories-configure/coverage/#see-also","text":"Add Coverage to your repo Generate Coverage","title":"See also"},{"location":"repositories-configure/file-extensions/","text":"Configuring file extensions \u00b6 If your repository has source files with unrecognized extensions, you can force Codacy to include them in the next analysis: Go to your repository's Settings , File Extensions . Add the extensions you want to be recognized for each language. After clicking Save , you will be given the opportunity to retry the most recent commit with the new settings by clicking Analyze now! on the message that appears near the footer of the page.","title":"Configuring file extensions"},{"location":"repositories-configure/file-extensions/#configuring-file-extensions","text":"If your repository has source files with unrecognized extensions, you can force Codacy to include them in the next analysis: Go to your repository's Settings , File Extensions . Add the extensions you want to be recognized for each language. After clicking Save , you will be given the opportunity to retry the most recent commit with the new settings by clicking Analyze now! on the message that appears near the footer of the page.","title":"Configuring file extensions"},{"location":"repositories-configure/generate-coverage/","text":"Generate coverage \u00b6 Code coverage is a metric used to describe the degree to which the source code of a program is tested. A program with high code coverage has been more thoroughly tested and has a lower chance of containing software bugs than a program with low code coverage. There are many tools to generate coverage. We have a few suggestions: Java - JaCoCo JavaScript - Istanbul PHP - PHPUnit Python - Coverage.py C# - OpenCover and dotCover Scala - Scoverage Ruby - SimpleCov See also: Add coverage to your repo Coverage","title":"Generate coverage"},{"location":"repositories-configure/generate-coverage/#generate-coverage","text":"Code coverage is a metric used to describe the degree to which the source code of a program is tested. A program with high code coverage has been more thoroughly tested and has a lower chance of containing software bugs than a program with low code coverage. There are many tools to generate coverage. We have a few suggestions: Java - JaCoCo JavaScript - Istanbul PHP - PHPUnit Python - Coverage.py C# - OpenCover and dotCover Scala - Scoverage Ruby - SimpleCov See also: Add coverage to your repo Coverage","title":"Generate coverage"},{"location":"repositories-configure/ignore-files-from-codacy-analysis/","text":"Ignore files from Codacy analysis \u00b6 In some situations, you may want to exclude files from Codacy's analyses. You can exclude files from your repository analysis by opening your repository Settings , tab Ignored Files , and selecting the files you want to ignore. This view only shows the files on your main branch. In some cases, you can also ignore some files using your own configuration files although this depends on this option being supported by the tool itself. If you need more flexibility in ignoring files, such as selecting only specific analysis categories (duplication, metrics, or coverage) or specific tools, use the Codacy configuration file . By default, Codacy also ignores files matching the following regular expressions: .*[\\.-]min\\.css .*[\\.-]min\\.js .*node_modules/.* .*bower_components .*vendor/.* .*third[_-]?[Pp]arty .*docs?/.* .*samples .*releases?/.* .*builds .*dist/.* .*external .*libs/.* .*d3\\.js .*angular(-resource|)?\\.js .*select2(-resource|)?\\.js .*-ace\\.js .*typeahead\\.js .*jquery-ui\\.js .*reveal\\.js .*three\\.js .*chart\\.js .*jquery\\.js .*underscore\\.js .*lodash\\.js .*bootstrap\\.js .*bootstrap\\.css .*font-awesome\\.css","title":"Ignore files from Codacy analysis"},{"location":"repositories-configure/ignore-files-from-codacy-analysis/#ignore-files-from-codacy-analysis","text":"In some situations, you may want to exclude files from Codacy's analyses. You can exclude files from your repository analysis by opening your repository Settings , tab Ignored Files , and selecting the files you want to ignore. This view only shows the files on your main branch. In some cases, you can also ignore some files using your own configuration files although this depends on this option being supported by the tool itself. If you need more flexibility in ignoring files, such as selecting only specific analysis categories (duplication, metrics, or coverage) or specific tools, use the Codacy configuration file . By default, Codacy also ignores files matching the following regular expressions: .*[\\.-]min\\.css .*[\\.-]min\\.js .*node_modules/.* .*bower_components .*vendor/.* .*third[_-]?[Pp]arty .*docs?/.* .*samples .*releases?/.* .*builds .*dist/.* .*external .*libs/.* .*d3\\.js .*angular(-resource|)?\\.js .*select2(-resource|)?\\.js .*-ace\\.js .*typeahead\\.js .*jquery-ui\\.js .*reveal\\.js .*three\\.js .*chart\\.js .*jquery\\.js .*underscore\\.js .*lodash\\.js .*bootstrap\\.js .*bootstrap\\.css .*font-awesome\\.css","title":"Ignore files from Codacy analysis"},{"location":"repositories-configure/php_codesniffer-specifying-your-php-version/","text":"PHP_CodeSniffer - Specifying your PHP version \u00b6 If you are using the PHP Compatibility Coding Standard for PHP CodeSniffer, you can specify the PHP version you'd like to use from the supported versions . To instruct which PHP version you want Codacy to use, you can define the following in a Codacy configuration file - .codacy.yml : --- engines : phpcs : enabled : true php_version : 5.5","title":"PHP_CodeSniffer - Specifying your PHP version"},{"location":"repositories-configure/php_codesniffer-specifying-your-php-version/#php_codesniffer-specifying-your-php-version","text":"If you are using the PHP Compatibility Coding Standard for PHP CodeSniffer, you can specify the PHP version you'd like to use from the supported versions . To instruct which PHP version you want Codacy to use, you can define the following in a Codacy configuration file - .codacy.yml : --- engines : phpcs : enabled : true php_version : 5.5","title":"PHP_CodeSniffer - Specifying your PHP version"},{"location":"repositories-configure/specifying-language/","text":"Specifying language \u00b6 Although our tools try to detect which language is used on each file, some false positives may occur. To instruct which language you want Codacy to use, you can define the following in a Codacy configuration file - .codacy.yml : --- engines : cppcheck : enabled : true language : c++ Supported languages: C, C++ Supported engines: codacy-cppcheck","title":"Specifying language"},{"location":"repositories-configure/specifying-language/#specifying-language","text":"Although our tools try to detect which language is used on each file, some false positives may occur. To instruct which language you want Codacy to use, you can define the following in a Codacy configuration file - .codacy.yml : --- engines : cppcheck : enabled : true language : c++ Supported languages: C, C++ Supported engines: codacy-cppcheck","title":"Specifying language"},{"location":"repositories-configure/specifying-your-python-version/","text":"Specifying your Python version \u00b6 Although our tools try to detect which Python version your repository uses, some false positives may occur. To instruct which Python version you want Codacy to use, you can define the following in a Codacy configuration file added in the root of your repository - .codacy.yml : --- engines : pylint : enabled : true python_version : 2 Supported versions: 2, 3 Supported engines: codacy-pylint","title":"Specifying your Python version"},{"location":"repositories-configure/specifying-your-python-version/#specifying-your-python-version","text":"Although our tools try to detect which Python version your repository uses, some false positives may occur. To instruct which Python version you want Codacy to use, you can define the following in a Codacy configuration file added in the root of your repository - .codacy.yml : --- engines : pylint : enabled : true python_version : 2 Supported versions: 2, 3 Supported engines: codacy-pylint","title":"Specifying your Python version"},{"location":"repositories-configure/using-submodules/","text":"Using submodules \u00b6 Git submodules allow you to keep a Git repository as a subdirectory within another Git repository. Git submodules are helpful in maintaining a shared configuration file for your team, and then applying it to multiple Git repositories. Enabling submodules \u00b6 By default, Codacy does normal Git clones that do not include submodules to ensure that we only clone necessary repositories. However, if your organization needs to use submodules, you can contact support@codacy.com asking to enable submodules on Codacy. After we enabled submodules for your organization, do the following: If you are using Codacy Self-hosted , you must update the license. If your submodules are: Public repositories , make sure that your Git URL uses the HTTPS protocol Private repositories , make sure that your Git URL uses the SSH protocol. If you already have repositories on Codacy where you want to use submodules, navigate to the page Settings and click the button Generate New User Key for each of these repositories. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . When you add a repository to Codacy, Codacy adds a new SSH key to your repository using an integration with your Git provider. Codacy uses this SSH key every time it needs to clone that repository. When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. If you're using submodules to share an analysis tool configuration file across your repositories, check if your tool recursively searches the subdirectories of your repositories for configuration files. If your tool does not detect the configuration files in the submodule directories, you must include a configuration file directly in the root of your repositories referencing the configuration files in the submodule directories. Using submodules on new repositories \u00b6 You must repeat steps 2 to 4 above every time you add new repositories with submodules to Codacy. Alternatively, you can make this the default behavior for all new repositories by enabling Add project key to the user, by default in Administration , page Settings . Important If you're using Bitbucket Cloud this setting must be disabled since automatically adding the user keys is not supported.","title":"Using submodules"},{"location":"repositories-configure/using-submodules/#using-submodules","text":"Git submodules allow you to keep a Git repository as a subdirectory within another Git repository. Git submodules are helpful in maintaining a shared configuration file for your team, and then applying it to multiple Git repositories.","title":"Using submodules"},{"location":"repositories-configure/using-submodules/#enabling-submodules","text":"By default, Codacy does normal Git clones that do not include submodules to ensure that we only clone necessary repositories. However, if your organization needs to use submodules, you can contact support@codacy.com asking to enable submodules on Codacy. After we enabled submodules for your organization, do the following: If you are using Codacy Self-hosted , you must update the license. If your submodules are: Public repositories , make sure that your Git URL uses the HTTPS protocol Private repositories , make sure that your Git URL uses the SSH protocol. If you already have repositories on Codacy where you want to use submodules, navigate to the page Settings and click the button Generate New User Key for each of these repositories. Important If you're using Bitbucket Cloud , you must manually add the SSH key on your user account . When you add a repository to Codacy, Codacy adds a new SSH key to your repository using an integration with your Git provider. Codacy uses this SSH key every time it needs to clone that repository. When you are using submodules, Codacy needs to clone additional repositories it has no access to. Since there is no way of identifying the submodules of a repository before cloning the repository, Codacy adds the SSH keys to the user account so that it has access to the same repositories as the user. If you're using submodules to share an analysis tool configuration file across your repositories, check if your tool recursively searches the subdirectories of your repositories for configuration files. If your tool does not detect the configuration files in the submodule directories, you must include a configuration file directly in the root of your repositories referencing the configuration files in the submodule directories.","title":"Enabling submodules"},{"location":"repositories-configure/using-submodules/#using-submodules-on-new-repositories","text":"You must repeat steps 2 to 4 above every time you add new repositories with submodules to Codacy. Alternatively, you can make this the default behavior for all new repositories by enabling Add project key to the user, by default in Administration , page Settings . Important If you're using Bitbucket Cloud this setting must be disabled since automatically adding the user keys is not supported.","title":"Using submodules on new repositories"},{"location":"repositories-configure/integrations/bitbucket-cloud-integration/","text":"Bitbucket Cloud integration \u00b6 If you're seeing a warning about your Bitbucket Cloud integration being disabled you will need to enable it again by going to your repository Settings -> Integrations . Please note that you need to have Admin permissions in both Codacy and Bitbucket Cloud to do this. Once the integration is done, Codacy will restart analysing your repository and you can add some other useful feature such as pull request status, comments or summary directly in Bitbucket Cloud. For private repositories, this user will by default become the Bitbucket Cloud user that Codacy will use to comment and create issues on Bitbucket Cloud. For public repositories, comments made by Codacy will appear as coming from codacy-bot. Enabling Bitbucket Cloud integration \u00b6 Be aware that when clicking Enable , you will be required to move back and forth between Codacy and Bitbucket Cloud if additional permissions are required. After enabling the Bitbucket Cloud integration, you will have additional options when browsing the existing issues on the repository:","title":"Bitbucket Cloud integration"},{"location":"repositories-configure/integrations/bitbucket-cloud-integration/#bitbucket-cloud-integration","text":"If you're seeing a warning about your Bitbucket Cloud integration being disabled you will need to enable it again by going to your repository Settings -> Integrations . Please note that you need to have Admin permissions in both Codacy and Bitbucket Cloud to do this. Once the integration is done, Codacy will restart analysing your repository and you can add some other useful feature such as pull request status, comments or summary directly in Bitbucket Cloud. For private repositories, this user will by default become the Bitbucket Cloud user that Codacy will use to comment and create issues on Bitbucket Cloud. For public repositories, comments made by Codacy will appear as coming from codacy-bot.","title":"Bitbucket Cloud integration"},{"location":"repositories-configure/integrations/bitbucket-cloud-integration/#enabling-bitbucket-cloud-integration","text":"Be aware that when clicking Enable , you will be required to move back and forth between Codacy and Bitbucket Cloud if additional permissions are required. After enabling the Bitbucket Cloud integration, you will have additional options when browsing the existing issues on the repository:","title":"Enabling Bitbucket Cloud integration"},{"location":"repositories-configure/integrations/github-integration/","text":"GitHub integration \u00b6 After adding a repository, navigate to your repository's Settings , tab Integrations to enable GitHub integration for comments on pull requests, issue creation, and more. It installs in just one click but you may need to move back and forth between Codacy and GitHub if it requires additional permissions. After installing it for a repository, it has to be enabled by a user with repository access on GitHub. For private repositories, this user will by default become the GitHub user that Codacy will use to comment and create issues on GitHub. For public repositories, comments made by Codacy will appear as coming from codacy-bot. Once the integration is enabled, you will see additional options when browsing the existing issues on the repository: When Pull Request Status , Pull Request Comment , or Pull Request Summary is enabled, Codacy will automatically update pull requests on GitHub with additional information when accepting pull requests. Pull Request Status will only be added if the user that added the integration has at least write permissions for that repo. The status shows whether your PR and coverage are up to standards or not as per the Pull Request Quality Settings set up for your repository. To see the coverage status, please make sure the Coverage option is enabled in the PR Quality settings. Pull Request Comment makes a comment on the Pull Request line when a new issue is found and shows the pattern raising the issue. Click on the Issue link to go to Codacy to see more details about the issue and how to fix it. Pull Request Summary shows an overall view of the changes in the PR. Including newly found issues and other metrics such as complexity and duplication.","title":"GitHub integration"},{"location":"repositories-configure/integrations/github-integration/#github-integration","text":"After adding a repository, navigate to your repository's Settings , tab Integrations to enable GitHub integration for comments on pull requests, issue creation, and more. It installs in just one click but you may need to move back and forth between Codacy and GitHub if it requires additional permissions. After installing it for a repository, it has to be enabled by a user with repository access on GitHub. For private repositories, this user will by default become the GitHub user that Codacy will use to comment and create issues on GitHub. For public repositories, comments made by Codacy will appear as coming from codacy-bot. Once the integration is enabled, you will see additional options when browsing the existing issues on the repository: When Pull Request Status , Pull Request Comment , or Pull Request Summary is enabled, Codacy will automatically update pull requests on GitHub with additional information when accepting pull requests. Pull Request Status will only be added if the user that added the integration has at least write permissions for that repo. The status shows whether your PR and coverage are up to standards or not as per the Pull Request Quality Settings set up for your repository. To see the coverage status, please make sure the Coverage option is enabled in the PR Quality settings. Pull Request Comment makes a comment on the Pull Request line when a new issue is found and shows the pattern raising the issue. Click on the Issue link to go to Codacy to see more details about the issue and how to fix it. Pull Request Summary shows an overall view of the changes in the PR. Including newly found issues and other metrics such as complexity and duplication.","title":"GitHub integration"},{"location":"repositories-configure/integrations/gitlab-integration/","text":"GitLab integration \u00b6 After adding a project, navigate to your project's Settings , tab Integrations to enable the GitLab integration for merge request status and comments. When the option Pull Request Status or Pull Request Comment is enabled, Codacy will automatically update merge requests on GitLab with additional information when accepting merge requests: Pull Request Status adds a report to your merge request showing whether your merge request and coverage are up to standards or not as per the quality settings configured for your project. To see the coverage status, ensure that the Coverage option is enabled in the quality settings. The report will only be added if the user that added the integration has at least write permissions for that project. Pull Request Comment adds a comment on the merge request line when a new issue is found and shows the pattern raising the issue. Click on the issue link to open Codacy and see more details about the issue and how to fix it.","title":"GitLab integration"},{"location":"repositories-configure/integrations/gitlab-integration/#gitlab-integration","text":"After adding a project, navigate to your project's Settings , tab Integrations to enable the GitLab integration for merge request status and comments. When the option Pull Request Status or Pull Request Comment is enabled, Codacy will automatically update merge requests on GitLab with additional information when accepting merge requests: Pull Request Status adds a report to your merge request showing whether your merge request and coverage are up to standards or not as per the quality settings configured for your project. To see the coverage status, ensure that the Coverage option is enabled in the quality settings. The report will only be added if the user that added the integration has at least write permissions for that project. Pull Request Comment adds a comment on the merge request line when a new issue is found and shows the pattern raising the issue. Click on the issue link to open Codacy and see more details about the issue and how to fix it.","title":"GitLab integration"},{"location":"repositories-configure/integrations/jira-integration/","text":"Jira integration \u00b6 After adding a repository, you may want to enable the Jira integration to manually create issues on your Jira board. To set up, navigate to your repository's Settings , tab Integrations , click Add integration , select Jira , fill in all the fields, and click Save . The integration only support the Basic authentication method. Use your email address as username and an API token as the password. Follow the instructions to generate a Jira API token . Once the Jira integration is set up, browse to Settings , tab Integrations , select Advanced , and make sure to fill in all the fields, including the Labels. Creating an issue on Jira \u00b6 After configuring your Jira integration with your server settings, you will have additional options when browsing the existing issues on the repository that allow you to create Jira issues for results found on Codacy:","title":"Jira integration"},{"location":"repositories-configure/integrations/jira-integration/#jira-integration","text":"After adding a repository, you may want to enable the Jira integration to manually create issues on your Jira board. To set up, navigate to your repository's Settings , tab Integrations , click Add integration , select Jira , fill in all the fields, and click Save . The integration only support the Basic authentication method. Use your email address as username and an API token as the password. Follow the instructions to generate a Jira API token . Once the Jira integration is set up, browse to Settings , tab Integrations , select Advanced , and make sure to fill in all the fields, including the Labels.","title":"Jira integration"},{"location":"repositories-configure/integrations/jira-integration/#creating-an-issue-on-jira","text":"After configuring your Jira integration with your server settings, you will have additional options when browsing the existing issues on the repository that allow you to create Jira issues for results found on Codacy:","title":"Creating an issue on Jira"},{"location":"repositories-configure/integrations/project-api/","text":"Project API \u00b6 The Codacy API offers specific methods to manipulate repositories. You access these by using a Project API Token generated for your repository. Creating a Project API integration in your repository Settings tab will generate an API Token valid for that repository. To revoke a Token, remove the integration.","title":"Project API"},{"location":"repositories-configure/integrations/project-api/#project-api","text":"The Codacy API offers specific methods to manipulate repositories. You access these by using a Project API Token generated for your repository. Creating a Project API integration in your repository Settings tab will generate an API Token valid for that repository. To revoke a Token, remove the integration.","title":"Project API"},{"location":"repositories-configure/integrations/slack-integration/","text":"Slack integration \u00b6 After adding a repository, you may want to enable Slack integration. Codacy integrates with Slack by sending messages to a channel when new issues are found. To enable the Slack integration access the Integrations tab of your repository Settings , click Add integration and select Slack from the list. Configuration \u00b6 Incoming WebHook To set up a new WebHook: Access the \"Incoming WebHooks\" page on the App Directory of your Slack account. Select the channel where you want to be notified and click \"Add Incoming WebHooks Integration\" Copy the generated URL and use it on Codacy. Save Settings on Slack Channel The name of the channel where the notifications will be sent. This value is optional and it will override the default channel of the WebHook. After filling both fields you need to click the Save button and everything should be setup correctly. You can use the Test button to send a test notification to your Slack channel. Refresh Codacy page to see the green light. After configuring your Slack integration with your server settings, Codacy will start commenting on Slack whenever it finds new issues.","title":"Slack integration"},{"location":"repositories-configure/integrations/slack-integration/#slack-integration","text":"After adding a repository, you may want to enable Slack integration. Codacy integrates with Slack by sending messages to a channel when new issues are found. To enable the Slack integration access the Integrations tab of your repository Settings , click Add integration and select Slack from the list.","title":"Slack integration"},{"location":"repositories-configure/integrations/slack-integration/#configuration","text":"Incoming WebHook To set up a new WebHook: Access the \"Incoming WebHooks\" page on the App Directory of your Slack account. Select the channel where you want to be notified and click \"Add Incoming WebHooks Integration\" Copy the generated URL and use it on Codacy. Save Settings on Slack Channel The name of the channel where the notifications will be sent. This value is optional and it will override the default channel of the WebHook. After filling both fields you need to click the Save button and everything should be setup correctly. You can use the Test button to send a test notification to your Slack channel. Refresh Codacy page to see the green light. After configuring your Slack integration with your server settings, Codacy will start commenting on Slack whenever it finds new issues.","title":"Configuration"},{"location":"repositories-configure/integrations/webhook-notifications/","text":"WebHook notifications \u00b6 Codacy integrates with any service by sending a POST message to a defined address. To add a WebHook, access the Integrations tab of your repository Settings , click on Add channel and select WebHook from the list. Configuration \u00b6 Endpoint Address The URL where to POST the message. After filling the field you have to click the Save button and everything should be setup correctly. You can use the Test button to send a test notification to the address. When Codacy sends the POST to the address the message is in JSON format. Below, you can see an example message: { \"commit\" :{ \"data\" :{ \"uuid\" : \"4cbf02df84dbcaa44b75a64ed832f7dbff2231dd\" , \"urls\" :{ \"delta\" : \"https://www.codacy.com/public/jquery/jquery.git/commit?bid=21776&cid=6037089\" } }, \"results\" :{ \"fixed_count\" : 1 , \"new_count\" : 0 } } }","title":"WebHook notifications"},{"location":"repositories-configure/integrations/webhook-notifications/#webhook-notifications","text":"Codacy integrates with any service by sending a POST message to a defined address. To add a WebHook, access the Integrations tab of your repository Settings , click on Add channel and select WebHook from the list.","title":"WebHook notifications"},{"location":"repositories-configure/integrations/webhook-notifications/#configuration","text":"Endpoint Address The URL where to POST the message. After filling the field you have to click the Save button and everything should be setup correctly. You can use the Test button to send a test notification to the address. When Codacy sends the POST to the address the message is in JSON format. Below, you can see an example message: { \"commit\" :{ \"data\" :{ \"uuid\" : \"4cbf02df84dbcaa44b75a64ed832f7dbff2231dd\" , \"urls\" :{ \"delta\" : \"https://www.codacy.com/public/jquery/jquery.git/commit?bid=21776&cid=6037089\" } }, \"results\" :{ \"fixed_count\" : 1 , \"new_count\" : 0 } } }","title":"Configuration"}]}